{"version":3,"file":"walletkit-widget.umd.cjs","sources":["../node_modules/.pnpm/esm-env@1.2.2/node_modules/esm-env/false.js","../node_modules/.pnpm/svelte@5.37.3/node_modules/svelte/src/internal/shared/utils.js","../node_modules/.pnpm/svelte@5.37.3/node_modules/svelte/src/internal/client/constants.js","../node_modules/.pnpm/svelte@5.37.3/node_modules/svelte/src/constants.js","../node_modules/.pnpm/svelte@5.37.3/node_modules/svelte/src/internal/client/reactivity/equality.js","../node_modules/.pnpm/svelte@5.37.3/node_modules/svelte/src/internal/flags/index.js","../node_modules/.pnpm/svelte@5.37.3/node_modules/svelte/src/internal/client/context.js","../node_modules/.pnpm/svelte@5.37.3/node_modules/svelte/src/internal/client/error-handling.js","../node_modules/.pnpm/svelte@5.37.3/node_modules/svelte/src/internal/client/dom/blocks/boundary.js","../node_modules/.pnpm/svelte@5.37.3/node_modules/svelte/src/internal/shared/errors.js","../node_modules/.pnpm/svelte@5.37.3/node_modules/svelte/src/internal/client/reactivity/deriveds.js","../node_modules/.pnpm/svelte@5.37.3/node_modules/svelte/src/internal/client/errors.js","../node_modules/.pnpm/svelte@5.37.3/node_modules/svelte/src/internal/client/reactivity/effects.js","../node_modules/.pnpm/svelte@5.37.3/node_modules/svelte/src/internal/client/reactivity/async.js","../node_modules/.pnpm/svelte@5.37.3/node_modules/svelte/src/internal/client/reactivity/batch.js","../node_modules/.pnpm/svelte@5.37.3/node_modules/svelte/src/internal/client/reactivity/sources.js","../node_modules/.pnpm/svelte@5.37.3/node_modules/svelte/src/internal/client/runtime.js","../node_modules/.pnpm/svelte@5.37.3/node_modules/svelte/src/internal/client/proxy.js","../node_modules/.pnpm/svelte@5.37.3/node_modules/svelte/src/internal/client/dom/operations.js","../node_modules/.pnpm/svelte@5.37.3/node_modules/svelte/src/utils.js","../node_modules/.pnpm/svelte@5.37.3/node_modules/svelte/src/internal/client/dom/elements/events.js","../node_modules/.pnpm/svelte@5.37.3/node_modules/svelte/src/internal/client/dom/template.js","../node_modules/.pnpm/svelte@5.37.3/node_modules/svelte/src/internal/client/dom/reconciler.js","../node_modules/.pnpm/svelte@5.37.3/node_modules/svelte/src/internal/client/render.js","../node_modules/.pnpm/svelte@5.37.3/node_modules/svelte/src/internal/client/dom/blocks/if.js","../node_modules/.pnpm/svelte@5.37.3/node_modules/svelte/src/internal/client/dom/css.js","../node_modules/.pnpm/svelte@5.37.3/node_modules/svelte/src/internal/client/dom/elements/actions.js","../node_modules/.pnpm/svelte@5.37.3/node_modules/svelte/src/internal/shared/attributes.js","../node_modules/.pnpm/svelte@5.37.3/node_modules/svelte/src/internal/client/dom/elements/class.js","../node_modules/.pnpm/svelte@5.37.3/node_modules/svelte/src/internal/disclose-version.js","../node_modules/.pnpm/svelte@5.37.3/node_modules/svelte/src/version.js","../src/lib/stores/wallet.svelte.ts","../src/lib/components/AccountPanel.svelte","../src/lib/components/FloatingAssistant.svelte","../src/lib/actions/draggable.ts","../src/standalone/index.ts"],"sourcesContent":["export default false;\n","// Store the references to globals in case someone tries to monkey patch these, causing the below\n// to de-opt (this occurs often when using popular extensions).\nexport var is_array = Array.isArray;\nexport var index_of = Array.prototype.indexOf;\nexport var array_from = Array.from;\nexport var object_keys = Object.keys;\nexport var define_property = Object.defineProperty;\nexport var get_descriptor = Object.getOwnPropertyDescriptor;\nexport var get_descriptors = Object.getOwnPropertyDescriptors;\nexport var object_prototype = Object.prototype;\nexport var array_prototype = Array.prototype;\nexport var get_prototype_of = Object.getPrototypeOf;\nexport var is_extensible = Object.isExtensible;\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\nexport const noop = () => {};\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n\n/**\n * @template [T=any]\n * @param {any} value\n * @returns {value is PromiseLike<T>}\n */\nexport function is_promise(value) {\n\treturn typeof value?.then === 'function';\n}\n\n/** @param {Function} fn */\nexport function run(fn) {\n\treturn fn();\n}\n\n/** @param {Array<() => void>} arr */\nexport function run_all(arr) {\n\tfor (var i = 0; i < arr.length; i++) {\n\t\tarr[i]();\n\t}\n}\n\n/**\n * TODO replace with Promise.withResolvers once supported widely enough\n * @template T\n */\nexport function deferred() {\n\t/** @type {(value: T) => void} */\n\tvar resolve;\n\n\t/** @type {(reason: any) => void} */\n\tvar reject;\n\n\t/** @type {Promise<T>} */\n\tvar promise = new Promise((res, rej) => {\n\t\tresolve = res;\n\t\treject = rej;\n\t});\n\n\t// @ts-expect-error\n\treturn { promise, resolve, reject };\n}\n\n/**\n * @template V\n * @param {V} value\n * @param {V | (() => V)} fallback\n * @param {boolean} [lazy]\n * @returns {V}\n */\nexport function fallback(value, fallback, lazy = false) {\n\treturn value === undefined\n\t\t? lazy\n\t\t\t? /** @type {() => V} */ (fallback)()\n\t\t\t: /** @type {V} */ (fallback)\n\t\t: value;\n}\n\n/**\n * When encountering a situation like `let [a, b, c] = $derived(blah())`,\n * we need to stash an intermediate value that `a`, `b`, and `c` derive\n * from, in case it's an iterable\n * @template T\n * @param {ArrayLike<T> | Iterable<T>} value\n * @param {number} [n]\n * @returns {Array<T>}\n */\nexport function to_array(value, n) {\n\t// return arrays unchanged\n\tif (Array.isArray(value)) {\n\t\treturn value;\n\t}\n\n\t// if value is not iterable, or `n` is unspecified (indicates a rest\n\t// element, which means we're not concerned about unbounded iterables)\n\t// convert to an array with `Array.from`\n\tif (n === undefined || !(Symbol.iterator in value)) {\n\t\treturn Array.from(value);\n\t}\n\n\t// otherwise, populate an array with `n` values\n\n\t/** @type {T[]} */\n\tconst array = [];\n\n\tfor (const element of value) {\n\t\tarray.push(element);\n\t\tif (array.length === n) break;\n\t}\n\n\treturn array;\n}\n","export const DERIVED = 1 << 1;\nexport const EFFECT = 1 << 2;\nexport const RENDER_EFFECT = 1 << 3;\nexport const BLOCK_EFFECT = 1 << 4;\nexport const BRANCH_EFFECT = 1 << 5;\nexport const ROOT_EFFECT = 1 << 6;\nexport const BOUNDARY_EFFECT = 1 << 7;\nexport const UNOWNED = 1 << 8;\nexport const DISCONNECTED = 1 << 9;\nexport const CLEAN = 1 << 10;\nexport const DIRTY = 1 << 11;\nexport const MAYBE_DIRTY = 1 << 12;\nexport const INERT = 1 << 13;\nexport const DESTROYED = 1 << 14;\nexport const EFFECT_RAN = 1 << 15;\n/** 'Transparent' effects do not create a transition boundary */\nexport const EFFECT_TRANSPARENT = 1 << 16;\nexport const INSPECT_EFFECT = 1 << 17;\nexport const HEAD_EFFECT = 1 << 18;\nexport const EFFECT_PRESERVED = 1 << 19;\nexport const USER_EFFECT = 1 << 20;\n\n// Flags used for async\nexport const REACTION_IS_UPDATING = 1 << 21;\nexport const ASYNC = 1 << 22;\n\nexport const ERROR_VALUE = 1 << 23;\n\nexport const STATE_SYMBOL = Symbol('$state');\nexport const LEGACY_PROPS = Symbol('legacy props');\nexport const LOADING_ATTR_SYMBOL = Symbol('');\nexport const PROXY_PATH_SYMBOL = Symbol('proxy path');\n\n/** allow users to ignore aborted signal errors if `reason.name === 'StaleReactionError` */\nexport const STALE_REACTION = new (class StaleReactionError extends Error {\n\tname = 'StaleReactionError';\n\tmessage = 'The reaction that called `getAbortSignal()` was re-run or destroyed';\n})();\n\nexport const ELEMENT_NODE = 1;\nexport const TEXT_NODE = 3;\nexport const COMMENT_NODE = 8;\nexport const DOCUMENT_FRAGMENT_NODE = 11;\n","export const EACH_ITEM_REACTIVE = 1;\nexport const EACH_INDEX_REACTIVE = 1 << 1;\n/** See EachBlock interface metadata.is_controlled for an explanation what this is */\nexport const EACH_IS_CONTROLLED = 1 << 2;\nexport const EACH_IS_ANIMATED = 1 << 3;\nexport const EACH_ITEM_IMMUTABLE = 1 << 4;\n\nexport const PROPS_IS_IMMUTABLE = 1;\nexport const PROPS_IS_RUNES = 1 << 1;\nexport const PROPS_IS_UPDATED = 1 << 2;\nexport const PROPS_IS_BINDABLE = 1 << 3;\nexport const PROPS_IS_LAZY_INITIAL = 1 << 4;\n\nexport const TRANSITION_IN = 1;\nexport const TRANSITION_OUT = 1 << 1;\nexport const TRANSITION_GLOBAL = 1 << 2;\n\nexport const TEMPLATE_FRAGMENT = 1;\nexport const TEMPLATE_USE_IMPORT_NODE = 1 << 1;\nexport const TEMPLATE_USE_SVG = 1 << 2;\nexport const TEMPLATE_USE_MATHML = 1 << 3;\n\nexport const HYDRATION_START = '[';\n/** used to indicate that an `{:else}...` block was rendered */\nexport const HYDRATION_START_ELSE = '[!';\nexport const HYDRATION_END = ']';\nexport const HYDRATION_ERROR = {};\n\nexport const ELEMENT_IS_NAMESPACED = 1;\nexport const ELEMENT_PRESERVE_ATTRIBUTE_CASE = 1 << 1;\n\nexport const UNINITIALIZED = Symbol();\n\n// Dev-time component properties\nexport const FILENAME = Symbol('filename');\nexport const HMR = Symbol('hmr');\n\nexport const NAMESPACE_HTML = 'http://www.w3.org/1999/xhtml';\nexport const NAMESPACE_SVG = 'http://www.w3.org/2000/svg';\nexport const NAMESPACE_MATHML = 'http://www.w3.org/1998/Math/MathML';\n\n// we use a list of ignorable runtime warnings because not every runtime warning\n// can be ignored and we want to keep the validation for svelte-ignore in place\nexport const IGNORABLE_RUNTIME_WARNINGS = /** @type {const} */ ([\n\t'await_waterfall',\n\t'await_reactivity_loss',\n\t'state_snapshot_uncloneable',\n\t'binding_property_non_reactive',\n\t'hydration_attribute_changed',\n\t'hydration_html_changed',\n\t'ownership_invalid_binding',\n\t'ownership_invalid_mutation'\n]);\n\n/**\n * Whitespace inside one of these elements will not result in\n * a whitespace node being created in any circumstances. (This\n * list is almost certainly very incomplete)\n * TODO this is currently unused\n */\nexport const ELEMENTS_WITHOUT_TEXT = ['audio', 'datalist', 'dl', 'optgroup', 'select', 'video'];\n\nexport const ATTACHMENT_KEY = '@attach';\n","/** @import { Equals } from '#client' */\n\n/** @type {Equals} */\nexport function equals(value) {\n\treturn value === this.v;\n}\n\n/**\n * @param {unknown} a\n * @param {unknown} b\n * @returns {boolean}\n */\nexport function safe_not_equal(a, b) {\n\treturn a != a\n\t\t? b == b\n\t\t: a !== b || (a !== null && typeof a === 'object') || typeof a === 'function';\n}\n\n/**\n * @param {unknown} a\n * @param {unknown} b\n * @returns {boolean}\n */\nexport function not_equal(a, b) {\n\treturn a !== b;\n}\n\n/** @type {Equals} */\nexport function safe_equals(value) {\n\treturn !safe_not_equal(value, this.v);\n}\n","export let async_mode_flag = false;\nexport let legacy_mode_flag = false;\nexport let tracing_mode_flag = false;\n\nexport function enable_async_mode_flag() {\n\tasync_mode_flag = true;\n}\n\n/** ONLY USE THIS DURING TESTING */\nexport function disable_async_mode_flag() {\n\tasync_mode_flag = false;\n}\n\nexport function enable_legacy_mode_flag() {\n\tlegacy_mode_flag = true;\n}\n\nexport function enable_tracing_mode_flag() {\n\ttracing_mode_flag = true;\n}\n","/** @import { ComponentContext, DevStackEntry, Effect } from '#client' */\nimport { DEV } from 'esm-env';\nimport * as e from './errors.js';\nimport { active_effect, active_reaction } from './runtime.js';\nimport { create_user_effect } from './reactivity/effects.js';\nimport { async_mode_flag, legacy_mode_flag } from '../flags/index.js';\nimport { FILENAME } from '../../constants.js';\nimport { BRANCH_EFFECT, EFFECT_RAN } from './constants.js';\n\n/** @type {ComponentContext | null} */\nexport let component_context = null;\n\n/** @param {ComponentContext | null} context */\nexport function set_component_context(context) {\n\tcomponent_context = context;\n}\n\n/** @type {DevStackEntry | null} */\nexport let dev_stack = null;\n\n/** @param {DevStackEntry | null} stack */\nexport function set_dev_stack(stack) {\n\tdev_stack = stack;\n}\n\n/**\n * Execute a callback with a new dev stack entry\n * @param {() => any} callback - Function to execute\n * @param {DevStackEntry['type']} type - Type of block/component\n * @param {any} component - Component function\n * @param {number} line - Line number\n * @param {number} column - Column number\n * @param {Record<string, any>} [additional] - Any additional properties to add to the dev stack entry\n * @returns {any}\n */\nexport function add_svelte_meta(callback, type, component, line, column, additional) {\n\tconst parent = dev_stack;\n\n\tdev_stack = {\n\t\ttype,\n\t\tfile: component[FILENAME],\n\t\tline,\n\t\tcolumn,\n\t\tparent,\n\t\t...additional\n\t};\n\n\ttry {\n\t\treturn callback();\n\t} finally {\n\t\tdev_stack = parent;\n\t}\n}\n\n/**\n * The current component function. Different from current component context:\n * ```html\n * <!-- App.svelte -->\n * <Foo>\n *   <Bar /> <!-- context == Foo.svelte, function == App.svelte -->\n * </Foo>\n * ```\n * @type {ComponentContext['function']}\n */\nexport let dev_current_component_function = null;\n\n/** @param {ComponentContext['function']} fn */\nexport function set_dev_current_component_function(fn) {\n\tdev_current_component_function = fn;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\tconst context_map = get_or_init_context_map('getContext');\n\tconst result = /** @type {T} */ (context_map.get(key));\n\treturn result;\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tconst context_map = get_or_init_context_map('setContext');\n\n\tif (async_mode_flag) {\n\t\tvar flags = /** @type {Effect} */ (active_effect).f;\n\t\tvar valid = !active_reaction && (flags & BRANCH_EFFECT) !== 0 && (flags & EFFECT_RAN) === 0;\n\n\t\tif (!valid) {\n\t\t\te.set_context_after_init();\n\t\t}\n\t}\n\n\tcontext_map.set(key, context);\n\treturn context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\tconst context_map = get_or_init_context_map('hasContext');\n\treturn context_map.has(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\tconst context_map = get_or_init_context_map('getAllContexts');\n\treturn /** @type {T} */ (context_map);\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {any} runes\n * @param {Function} [fn]\n * @returns {void}\n */\nexport function push(props, runes = false, fn) {\n\tcomponent_context = {\n\t\tp: component_context,\n\t\tc: null,\n\t\te: null,\n\t\ts: props,\n\t\tx: null,\n\t\tl: legacy_mode_flag && !runes ? { s: null, u: null, $: [] } : null\n\t};\n\n\tif (DEV) {\n\t\t// component function\n\t\tcomponent_context.function = fn;\n\t\tdev_current_component_function = fn;\n\t}\n}\n\n/**\n * @template {Record<string, any>} T\n * @param {T} [component]\n * @returns {T}\n */\nexport function pop(component) {\n\tvar context = /** @type {ComponentContext} */ (component_context);\n\tvar effects = context.e;\n\n\tif (effects !== null) {\n\t\tcontext.e = null;\n\n\t\tfor (var fn of effects) {\n\t\t\tcreate_user_effect(fn);\n\t\t}\n\t}\n\n\tif (component !== undefined) {\n\t\tcontext.x = component;\n\t}\n\n\tcomponent_context = context.p;\n\n\tif (DEV) {\n\t\tdev_current_component_function = component_context?.function ?? null;\n\t}\n\n\treturn component ?? /** @type {T} */ ({});\n}\n\n/** @returns {boolean} */\nexport function is_runes() {\n\treturn !legacy_mode_flag || (component_context !== null && component_context.l === null);\n}\n\n/**\n * @param {string} name\n * @returns {Map<unknown, unknown>}\n */\nfunction get_or_init_context_map(name) {\n\tif (component_context === null) {\n\t\te.lifecycle_outside_component(name);\n\t}\n\n\treturn (component_context.c ??= new Map(get_parent_context(component_context) || undefined));\n}\n\n/**\n * @param {ComponentContext} component_context\n * @returns {Map<unknown, unknown> | null}\n */\nfunction get_parent_context(component_context) {\n\tlet parent = component_context.p;\n\twhile (parent !== null) {\n\t\tconst context_map = parent.c;\n\t\tif (context_map !== null) {\n\t\t\treturn context_map;\n\t\t}\n\t\tparent = parent.p;\n\t}\n\treturn null;\n}\n","/** @import { Derived, Effect } from '#client' */\n/** @import { Boundary } from './dom/blocks/boundary.js' */\nimport { DEV } from 'esm-env';\nimport { FILENAME } from '../../constants.js';\nimport { is_firefox } from './dom/operations.js';\nimport { ERROR_VALUE, BOUNDARY_EFFECT, EFFECT_RAN } from './constants.js';\nimport { define_property, get_descriptor } from '../shared/utils.js';\nimport { active_effect, active_reaction } from './runtime.js';\n\nconst adjustments = new WeakMap();\n\n/**\n * @param {unknown} error\n */\nexport function handle_error(error) {\n\tvar effect = active_effect;\n\n\t// for unowned deriveds, don't throw until we read the value\n\tif (effect === null) {\n\t\t/** @type {Derived} */ (active_reaction).f |= ERROR_VALUE;\n\t\treturn error;\n\t}\n\n\tif (DEV && error instanceof Error && !adjustments.has(error)) {\n\t\tadjustments.set(error, get_adjustments(error, effect));\n\t}\n\n\tif ((effect.f & EFFECT_RAN) === 0) {\n\t\t// if the error occurred while creating this subtree, we let it\n\t\t// bubble up until it hits a boundary that can handle it\n\t\tif ((effect.f & BOUNDARY_EFFECT) === 0) {\n\t\t\tif (!effect.parent && error instanceof Error) {\n\t\t\t\tapply_adjustments(error);\n\t\t\t}\n\n\t\t\tthrow error;\n\t\t}\n\n\t\t/** @type {Boundary} */ (effect.b).error(error);\n\t} else {\n\t\t// otherwise we bubble up the effect tree ourselves\n\t\tinvoke_error_boundary(error, effect);\n\t}\n}\n\n/**\n * @param {unknown} error\n * @param {Effect | null} effect\n */\nexport function invoke_error_boundary(error, effect) {\n\twhile (effect !== null) {\n\t\tif ((effect.f & BOUNDARY_EFFECT) !== 0) {\n\t\t\ttry {\n\t\t\t\t/** @type {Boundary} */ (effect.b).error(error);\n\t\t\t\treturn;\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\n\t\teffect = effect.parent;\n\t}\n\n\tif (error instanceof Error) {\n\t\tapply_adjustments(error);\n\t}\n\n\tthrow error;\n}\n\n/**\n * Add useful information to the error message/stack in development\n * @param {Error} error\n * @param {Effect} effect\n */\nfunction get_adjustments(error, effect) {\n\tconst message_descriptor = get_descriptor(error, 'message');\n\n\t// if the message was already changed and it's not configurable we can't change it\n\t// or it will throw a different error swallowing the original error\n\tif (message_descriptor && !message_descriptor.configurable) return;\n\n\tvar indent = is_firefox ? '  ' : '\\t';\n\tvar component_stack = `\\n${indent}in ${effect.fn?.name || '<unknown>'}`;\n\tvar context = effect.ctx;\n\n\twhile (context !== null) {\n\t\tcomponent_stack += `\\n${indent}in ${context.function?.[FILENAME].split('/').pop()}`;\n\t\tcontext = context.p;\n\t}\n\n\treturn {\n\t\tmessage: error.message + `\\n${component_stack}\\n`,\n\t\tstack: error.stack\n\t\t\t?.split('\\n')\n\t\t\t.filter((line) => !line.includes('svelte/src/internal'))\n\t\t\t.join('\\n')\n\t};\n}\n\n/**\n * @param {Error} error\n */\nfunction apply_adjustments(error) {\n\tconst adjusted = adjustments.get(error);\n\n\tif (adjusted) {\n\t\tdefine_property(error, 'message', {\n\t\t\tvalue: adjusted.message\n\t\t});\n\n\t\tdefine_property(error, 'stack', {\n\t\t\tvalue: adjusted.stack\n\t\t});\n\t}\n}\n","/** @import { Effect, Source, TemplateNode, } from '#client' */\nimport {\n\tBOUNDARY_EFFECT,\n\tEFFECT_PRESERVED,\n\tEFFECT_RAN,\n\tEFFECT_TRANSPARENT\n} from '#client/constants';\nimport { component_context, set_component_context } from '../../context.js';\nimport { handle_error, invoke_error_boundary } from '../../error-handling.js';\nimport { block, branch, destroy_effect, pause_effect } from '../../reactivity/effects.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tget,\n\tset_active_effect,\n\tset_active_reaction\n} from '../../runtime.js';\nimport {\n\thydrate_next,\n\thydrate_node,\n\thydrating,\n\tnext,\n\tremove_nodes,\n\tset_hydrate_node\n} from '../hydration.js';\nimport { get_next_sibling } from '../operations.js';\nimport { queue_micro_task } from '../task.js';\nimport * as e from '../../errors.js';\nimport * as w from '../../warnings.js';\nimport { DEV } from 'esm-env';\nimport { Batch, effect_pending_updates } from '../../reactivity/batch.js';\nimport { internal_set, source } from '../../reactivity/sources.js';\nimport { tag } from '../../dev/tracing.js';\nimport { createSubscriber } from '../../../../reactivity/create-subscriber.js';\n\n/**\n * @typedef {{\n * \t onerror?: (error: unknown, reset: () => void) => void;\n *   failed?: (anchor: Node, error: () => unknown, reset: () => () => void) => void;\n *   pending?: (anchor: Node) => void;\n * }} BoundaryProps\n */\n\nvar flags = EFFECT_TRANSPARENT | EFFECT_PRESERVED | BOUNDARY_EFFECT;\n\n/**\n * @param {TemplateNode} node\n * @param {BoundaryProps} props\n * @param {((anchor: Node) => void)} children\n * @returns {void}\n */\nexport function boundary(node, props, children) {\n\tnew Boundary(node, props, children);\n}\n\nexport class Boundary {\n\tpending = false;\n\n\t/** @type {Boundary | null} */\n\tparent;\n\n\t/** @type {TemplateNode} */\n\t#anchor;\n\n\t/** @type {TemplateNode} */\n\t#hydrate_open;\n\n\t/** @type {BoundaryProps} */\n\t#props;\n\n\t/** @type {((anchor: Node) => void)} */\n\t#children;\n\n\t/** @type {Effect} */\n\t#effect;\n\n\t/** @type {Effect | null} */\n\t#main_effect = null;\n\n\t/** @type {Effect | null} */\n\t#pending_effect = null;\n\n\t/** @type {Effect | null} */\n\t#failed_effect = null;\n\n\t/** @type {DocumentFragment | null} */\n\t#offscreen_fragment = null;\n\n\t#pending_count = 0;\n\t#is_creating_fallback = false;\n\n\t/**\n\t * A source containing the number of pending async deriveds/expressions.\n\t * Only created if `$effect.pending()` is used inside the boundary,\n\t * otherwise updating the source results in needless `Batch.ensure()`\n\t * calls followed by no-op flushes\n\t * @type {Source<number> | null}\n\t */\n\t#effect_pending = null;\n\n\t#effect_pending_update = () => {\n\t\tif (this.#effect_pending) {\n\t\t\tinternal_set(this.#effect_pending, this.#pending_count);\n\t\t}\n\t};\n\n\t#effect_pending_subscriber = createSubscriber(() => {\n\t\tthis.#effect_pending = source(this.#pending_count);\n\n\t\tif (DEV) {\n\t\t\ttag(this.#effect_pending, '$effect.pending()');\n\t\t}\n\n\t\treturn () => {\n\t\t\tthis.#effect_pending = null;\n\t\t};\n\t});\n\n\t/**\n\t * @param {TemplateNode} node\n\t * @param {BoundaryProps} props\n\t * @param {((anchor: Node) => void)} children\n\t */\n\tconstructor(node, props, children) {\n\t\tthis.#anchor = node;\n\t\tthis.#props = props;\n\t\tthis.#children = children;\n\n\t\tthis.#hydrate_open = hydrate_node;\n\n\t\tthis.parent = /** @type {Effect} */ (active_effect).b;\n\n\t\tthis.pending = !!this.#props.pending;\n\n\t\tthis.#effect = block(() => {\n\t\t\t/** @type {Effect} */ (active_effect).b = this;\n\n\t\t\tif (hydrating) {\n\t\t\t\thydrate_next();\n\t\t\t}\n\n\t\t\tconst pending = this.#props.pending;\n\n\t\t\tif (hydrating && pending) {\n\t\t\t\tthis.#pending_effect = branch(() => pending(this.#anchor));\n\n\t\t\t\t// future work: when we have some form of async SSR, we will\n\t\t\t\t// need to use hydration boundary comments to report whether\n\t\t\t\t// the pending or main block was rendered for a given\n\t\t\t\t// boundary, and hydrate accordingly\n\t\t\t\tBatch.enqueue(() => {\n\t\t\t\t\tthis.#main_effect = this.#run(() => {\n\t\t\t\t\t\tBatch.ensure();\n\t\t\t\t\t\treturn branch(() => this.#children(this.#anchor));\n\t\t\t\t\t});\n\n\t\t\t\t\tif (this.#pending_count > 0) {\n\t\t\t\t\t\tthis.#show_pending_snippet();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpause_effect(/** @type {Effect} */ (this.#pending_effect), () => {\n\t\t\t\t\t\t\tthis.#pending_effect = null;\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tthis.pending = false;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\ttry {\n\t\t\t\t\tthis.#main_effect = branch(() => children(this.#anchor));\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.error(error);\n\t\t\t\t}\n\n\t\t\t\tif (this.#pending_count > 0) {\n\t\t\t\t\tthis.#show_pending_snippet();\n\t\t\t\t} else {\n\t\t\t\t\tthis.pending = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}, flags);\n\n\t\tif (hydrating) {\n\t\t\tthis.#anchor = hydrate_node;\n\t\t}\n\t}\n\n\thas_pending_snippet() {\n\t\treturn !!this.#props.pending;\n\t}\n\n\t/**\n\t * @param {() => Effect | null} fn\n\t */\n\t#run(fn) {\n\t\tvar previous_effect = active_effect;\n\t\tvar previous_reaction = active_reaction;\n\t\tvar previous_ctx = component_context;\n\n\t\tset_active_effect(this.#effect);\n\t\tset_active_reaction(this.#effect);\n\t\tset_component_context(this.#effect.ctx);\n\n\t\ttry {\n\t\t\treturn fn();\n\t\t} catch (e) {\n\t\t\thandle_error(e);\n\t\t\treturn null;\n\t\t} finally {\n\t\t\tset_active_effect(previous_effect);\n\t\t\tset_active_reaction(previous_reaction);\n\t\t\tset_component_context(previous_ctx);\n\t\t}\n\t}\n\n\t#show_pending_snippet() {\n\t\tconst pending = /** @type {(anchor: Node) => void} */ (this.#props.pending);\n\n\t\tif (this.#main_effect !== null) {\n\t\t\tthis.#offscreen_fragment = document.createDocumentFragment();\n\t\t\tmove_effect(this.#main_effect, this.#offscreen_fragment);\n\t\t}\n\n\t\tif (this.#pending_effect === null) {\n\t\t\tthis.#pending_effect = branch(() => pending(this.#anchor));\n\t\t}\n\t}\n\n\t/** @param {1 | -1} d */\n\t#update_pending_count(d) {\n\t\tthis.#pending_count += d;\n\n\t\tif (this.#pending_count === 0) {\n\t\t\tthis.pending = false;\n\n\t\t\tif (this.#pending_effect) {\n\t\t\t\tpause_effect(this.#pending_effect, () => {\n\t\t\t\t\tthis.#pending_effect = null;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (this.#offscreen_fragment) {\n\t\t\t\tthis.#anchor.before(this.#offscreen_fragment);\n\t\t\t\tthis.#offscreen_fragment = null;\n\t\t\t}\n\t\t}\n\t}\n\n\t/** @param {1 | -1} d */\n\tupdate_pending_count(d) {\n\t\tif (this.has_pending_snippet()) {\n\t\t\tthis.#update_pending_count(d);\n\t\t} else if (this.parent) {\n\t\t\tthis.parent.#update_pending_count(d);\n\t\t}\n\n\t\teffect_pending_updates.add(this.#effect_pending_update);\n\t}\n\n\tget_effect_pending() {\n\t\tthis.#effect_pending_subscriber();\n\t\treturn get(/** @type {Source<number>} */ (this.#effect_pending));\n\t}\n\n\t/** @param {unknown} error */\n\terror(error) {\n\t\tvar onerror = this.#props.onerror;\n\t\tlet failed = this.#props.failed;\n\n\t\tif (this.#main_effect) {\n\t\t\tdestroy_effect(this.#main_effect);\n\t\t\tthis.#main_effect = null;\n\t\t}\n\n\t\tif (this.#pending_effect) {\n\t\t\tdestroy_effect(this.#pending_effect);\n\t\t\tthis.#pending_effect = null;\n\t\t}\n\n\t\tif (this.#failed_effect) {\n\t\t\tdestroy_effect(this.#failed_effect);\n\t\t\tthis.#failed_effect = null;\n\t\t}\n\n\t\tif (hydrating) {\n\t\t\tset_hydrate_node(this.#hydrate_open);\n\t\t\tnext();\n\t\t\tset_hydrate_node(remove_nodes());\n\t\t}\n\n\t\tvar did_reset = false;\n\t\tvar calling_on_error = false;\n\n\t\tconst reset = () => {\n\t\t\tif (did_reset) {\n\t\t\t\tw.svelte_boundary_reset_noop();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdid_reset = true;\n\n\t\t\tif (calling_on_error) {\n\t\t\t\te.svelte_boundary_reset_onerror();\n\t\t\t}\n\n\t\t\tthis.#pending_count = 0;\n\n\t\t\tif (this.#failed_effect !== null) {\n\t\t\t\tpause_effect(this.#failed_effect, () => {\n\t\t\t\t\tthis.#failed_effect = null;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.pending = true;\n\n\t\t\tthis.#main_effect = this.#run(() => {\n\t\t\t\tthis.#is_creating_fallback = false;\n\t\t\t\treturn branch(() => this.#children(this.#anchor));\n\t\t\t});\n\n\t\t\tif (this.#pending_count > 0) {\n\t\t\t\tthis.#show_pending_snippet();\n\t\t\t} else {\n\t\t\t\tthis.pending = false;\n\t\t\t}\n\t\t};\n\n\t\t// If we have nothing to capture the error, or if we hit an error while\n\t\t// rendering the fallback, re-throw for another boundary to handle\n\t\tif (this.#is_creating_fallback || (!onerror && !failed)) {\n\t\t\tthrow error;\n\t\t}\n\n\t\tvar previous_reaction = active_reaction;\n\n\t\ttry {\n\t\t\tset_active_reaction(null);\n\t\t\tcalling_on_error = true;\n\t\t\tonerror?.(error, reset);\n\t\t\tcalling_on_error = false;\n\t\t} catch (error) {\n\t\t\tinvoke_error_boundary(error, this.#effect && this.#effect.parent);\n\t\t} finally {\n\t\t\tset_active_reaction(previous_reaction);\n\t\t}\n\n\t\tif (failed) {\n\t\t\tqueue_micro_task(() => {\n\t\t\t\tthis.#failed_effect = this.#run(() => {\n\t\t\t\t\tthis.#is_creating_fallback = true;\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\treturn branch(() => {\n\t\t\t\t\t\t\tfailed(\n\t\t\t\t\t\t\t\tthis.#anchor,\n\t\t\t\t\t\t\t\t() => error,\n\t\t\t\t\t\t\t\t() => reset\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t});\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tinvoke_error_boundary(error, /** @type {Effect} */ (this.#effect.parent));\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tthis.#is_creating_fallback = false;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n}\n\n/**\n *\n * @param {Effect} effect\n * @param {DocumentFragment} fragment\n */\nfunction move_effect(effect, fragment) {\n\tvar node = effect.nodes_start;\n\tvar end = effect.nodes_end;\n\n\twhile (node !== null) {\n\t\t/** @type {TemplateNode | null} */\n\t\tvar next = node === end ? null : /** @type {TemplateNode} */ (get_next_sibling(node));\n\n\t\tfragment.append(node);\n\t\tnode = next;\n\t}\n}\n\nexport function get_pending_boundary() {\n\tvar boundary = /** @type {Effect} */ (active_effect).b;\n\n\twhile (boundary !== null && !boundary.has_pending_snippet()) {\n\t\tboundary = boundary.parent;\n\t}\n\n\tif (boundary === null) {\n\t\te.await_outside_boundary();\n\t}\n\n\treturn boundary;\n}\n\nexport function pending() {\n\tif (active_effect === null) {\n\t\te.effect_pending_outside_reaction();\n\t}\n\n\tvar boundary = active_effect.b;\n\n\tif (boundary === null) {\n\t\treturn 0; // TODO eventually we will need this to be global\n\t}\n\n\treturn boundary.get_effect_pending();\n}\n","/* This file is generated by scripts/process-messages/index.js. Do not edit! */\n\nimport { DEV } from 'esm-env';\n\n/**\n * Cannot await outside a `<svelte:boundary>` with a `pending` snippet\n * @returns {never}\n */\nexport function await_outside_boundary() {\n\tif (DEV) {\n\t\tconst error = new Error(`await_outside_boundary\\nCannot await outside a \\`<svelte:boundary>\\` with a \\`pending\\` snippet\\nhttps://svelte.dev/e/await_outside_boundary`);\n\n\t\terror.name = 'Svelte error';\n\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/await_outside_boundary`);\n\t}\n}\n\n/**\n * Cannot use `{@render children(...)}` if the parent component uses `let:` directives. Consider using a named snippet instead\n * @returns {never}\n */\nexport function invalid_default_snippet() {\n\tif (DEV) {\n\t\tconst error = new Error(`invalid_default_snippet\\nCannot use \\`{@render children(...)}\\` if the parent component uses \\`let:\\` directives. Consider using a named snippet instead\\nhttps://svelte.dev/e/invalid_default_snippet`);\n\n\t\terror.name = 'Svelte error';\n\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/invalid_default_snippet`);\n\t}\n}\n\n/**\n * A snippet function was passed invalid arguments. Snippets should only be instantiated via `{@render ...}`\n * @returns {never}\n */\nexport function invalid_snippet_arguments() {\n\tif (DEV) {\n\t\tconst error = new Error(`invalid_snippet_arguments\\nA snippet function was passed invalid arguments. Snippets should only be instantiated via \\`{@render ...}\\`\\nhttps://svelte.dev/e/invalid_snippet_arguments`);\n\n\t\terror.name = 'Svelte error';\n\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/invalid_snippet_arguments`);\n\t}\n}\n\n/**\n * `%name%(...)` can only be used during component initialisation\n * @param {string} name\n * @returns {never}\n */\nexport function lifecycle_outside_component(name) {\n\tif (DEV) {\n\t\tconst error = new Error(`lifecycle_outside_component\\n\\`${name}(...)\\` can only be used during component initialisation\\nhttps://svelte.dev/e/lifecycle_outside_component`);\n\n\t\terror.name = 'Svelte error';\n\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/lifecycle_outside_component`);\n\t}\n}\n\n/**\n * Attempted to render a snippet without a `{@render}` block. This would cause the snippet code to be stringified instead of its content being rendered to the DOM. To fix this, change `{snippet}` to `{@render snippet()}`.\n * @returns {never}\n */\nexport function snippet_without_render_tag() {\n\tif (DEV) {\n\t\tconst error = new Error(`snippet_without_render_tag\\nAttempted to render a snippet without a \\`{@render}\\` block. This would cause the snippet code to be stringified instead of its content being rendered to the DOM. To fix this, change \\`{snippet}\\` to \\`{@render snippet()}\\`.\\nhttps://svelte.dev/e/snippet_without_render_tag`);\n\n\t\terror.name = 'Svelte error';\n\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/snippet_without_render_tag`);\n\t}\n}\n\n/**\n * `%name%` is not a store with a `subscribe` method\n * @param {string} name\n * @returns {never}\n */\nexport function store_invalid_shape(name) {\n\tif (DEV) {\n\t\tconst error = new Error(`store_invalid_shape\\n\\`${name}\\` is not a store with a \\`subscribe\\` method\\nhttps://svelte.dev/e/store_invalid_shape`);\n\n\t\terror.name = 'Svelte error';\n\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/store_invalid_shape`);\n\t}\n}\n\n/**\n * The `this` prop on `<svelte:element>` must be a string, if defined\n * @returns {never}\n */\nexport function svelte_element_invalid_this_value() {\n\tif (DEV) {\n\t\tconst error = new Error(`svelte_element_invalid_this_value\\nThe \\`this\\` prop on \\`<svelte:element>\\` must be a string, if defined\\nhttps://svelte.dev/e/svelte_element_invalid_this_value`);\n\n\t\terror.name = 'Svelte error';\n\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/svelte_element_invalid_this_value`);\n\t}\n}","/** @import { Derived, Effect, Source } from '#client' */\n/** @import { Batch } from './batch.js'; */\nimport { DEV } from 'esm-env';\nimport {\n\tERROR_VALUE,\n\tCLEAN,\n\tDERIVED,\n\tDIRTY,\n\tEFFECT_PRESERVED,\n\tMAYBE_DIRTY,\n\tSTALE_REACTION,\n\tUNOWNED,\n\tASYNC\n} from '#client/constants';\nimport {\n\tactive_reaction,\n\tactive_effect,\n\tset_signal_status,\n\tskip_reaction,\n\tupdate_reaction,\n\tincrement_write_version,\n\tset_active_effect,\n\tpush_reaction_value,\n\tis_destroying_effect\n} from '../runtime.js';\nimport { equals, safe_equals } from './equality.js';\nimport * as e from '../errors.js';\nimport * as w from '../warnings.js';\nimport { async_effect, destroy_effect } from './effects.js';\nimport { inspect_effects, internal_set, set_inspect_effects, source } from './sources.js';\nimport { get_stack } from '../dev/tracing.js';\nimport { tracing_mode_flag } from '../../flags/index.js';\nimport { Boundary } from '../dom/blocks/boundary.js';\nimport { component_context } from '../context.js';\nimport { UNINITIALIZED } from '../../../constants.js';\nimport { batch_deriveds, current_batch } from './batch.js';\nimport { unset_context } from './async.js';\n\n/** @type {Effect | null} */\nexport let current_async_effect = null;\n\n/** @param {Effect | null} v */\nexport function set_from_async_derived(v) {\n\tcurrent_async_effect = v;\n}\n\nexport const recent_async_deriveds = new Set();\n\n/**\n * @template V\n * @param {() => V} fn\n * @returns {Derived<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function derived(fn) {\n\tvar flags = DERIVED | DIRTY;\n\tvar parent_derived =\n\t\tactive_reaction !== null && (active_reaction.f & DERIVED) !== 0\n\t\t\t? /** @type {Derived} */ (active_reaction)\n\t\t\t: null;\n\n\tif (active_effect === null || (parent_derived !== null && (parent_derived.f & UNOWNED) !== 0)) {\n\t\tflags |= UNOWNED;\n\t} else {\n\t\t// Since deriveds are evaluated lazily, any effects created inside them are\n\t\t// created too late to ensure that the parent effect is added to the tree\n\t\tactive_effect.f |= EFFECT_PRESERVED;\n\t}\n\n\t/** @type {Derived<V>} */\n\tconst signal = {\n\t\tctx: component_context,\n\t\tdeps: null,\n\t\teffects: null,\n\t\tequals,\n\t\tf: flags,\n\t\tfn,\n\t\treactions: null,\n\t\trv: 0,\n\t\tv: /** @type {V} */ (UNINITIALIZED),\n\t\twv: 0,\n\t\tparent: parent_derived ?? active_effect,\n\t\tac: null\n\t};\n\n\tif (DEV && tracing_mode_flag) {\n\t\tsignal.created = get_stack('CreatedAt');\n\t}\n\n\treturn signal;\n}\n\n/**\n * @template V\n * @param {() => V | Promise<V>} fn\n * @param {string} [location] If provided, print a warning if the value is not read immediately after update\n * @returns {Promise<Source<V>>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function async_derived(fn, location) {\n\tlet parent = /** @type {Effect | null} */ (active_effect);\n\n\tif (parent === null) {\n\t\te.async_derived_orphan();\n\t}\n\n\tvar boundary = /** @type {Boundary} */ (parent.b);\n\n\tvar promise = /** @type {Promise<V>} */ (/** @type {unknown} */ (undefined));\n\tvar signal = source(/** @type {V} */ (UNINITIALIZED));\n\n\t/** @type {Promise<V> | null} */\n\tvar prev = null;\n\n\t// only suspend in async deriveds created on initialisation\n\tvar should_suspend = !active_reaction;\n\n\tasync_effect(() => {\n\t\tif (DEV) current_async_effect = active_effect;\n\n\t\ttry {\n\t\t\tvar p = fn();\n\t\t} catch (error) {\n\t\t\tp = Promise.reject(error);\n\t\t}\n\n\t\tif (DEV) current_async_effect = null;\n\n\t\tvar r = () => p;\n\t\tpromise = prev?.then(r, r) ?? Promise.resolve(p);\n\n\t\tprev = promise;\n\n\t\tvar batch = /** @type {Batch} */ (current_batch);\n\t\tvar pending = boundary.pending;\n\n\t\tif (should_suspend) {\n\t\t\tboundary.update_pending_count(1);\n\t\t\tif (!pending) batch.increment();\n\t\t}\n\n\t\t/**\n\t\t * @param {any} value\n\t\t * @param {unknown} error\n\t\t */\n\t\tconst handler = (value, error = undefined) => {\n\t\t\tprev = null;\n\n\t\t\tcurrent_async_effect = null;\n\n\t\t\tif (!pending) batch.activate();\n\n\t\t\tif (error) {\n\t\t\t\tif (error !== STALE_REACTION) {\n\t\t\t\t\tsignal.f |= ERROR_VALUE;\n\n\t\t\t\t\t// @ts-expect-error the error is the wrong type, but we don't care\n\t\t\t\t\tinternal_set(signal, error);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ((signal.f & ERROR_VALUE) !== 0) {\n\t\t\t\t\tsignal.f ^= ERROR_VALUE;\n\t\t\t\t}\n\n\t\t\t\tinternal_set(signal, value);\n\n\t\t\t\tif (DEV && location !== undefined) {\n\t\t\t\t\trecent_async_deriveds.add(signal);\n\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tif (recent_async_deriveds.has(signal)) {\n\t\t\t\t\t\t\tw.await_waterfall(/** @type {string} */ (signal.label), location);\n\t\t\t\t\t\t\trecent_async_deriveds.delete(signal);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (should_suspend) {\n\t\t\t\tboundary.update_pending_count(-1);\n\t\t\t\tif (!pending) batch.decrement();\n\t\t\t}\n\n\t\t\tunset_context();\n\t\t};\n\n\t\tpromise.then(handler, (e) => handler(null, e || 'unknown'));\n\n\t\tif (batch) {\n\t\t\treturn () => {\n\t\t\t\tqueueMicrotask(() => batch.neuter());\n\t\t\t};\n\t\t}\n\t});\n\n\tif (DEV) {\n\t\t// add a flag that lets this be printed as a derived\n\t\t// when using `$inspect.trace()`\n\t\tsignal.f |= ASYNC;\n\t}\n\n\treturn new Promise((fulfil) => {\n\t\t/** @param {Promise<V>} p */\n\t\tfunction next(p) {\n\t\t\tfunction go() {\n\t\t\t\tif (p === promise) {\n\t\t\t\t\tfulfil(signal);\n\t\t\t\t} else {\n\t\t\t\t\t// if the effect re-runs before the initial promise\n\t\t\t\t\t// resolves, delay resolution until we have a value\n\t\t\t\t\tnext(promise);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tp.then(go, go);\n\t\t}\n\n\t\tnext(promise);\n\t});\n}\n\n/**\n * @template V\n * @param {() => V} fn\n * @returns {Derived<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function user_derived(fn) {\n\tconst d = derived(fn);\n\n\tpush_reaction_value(d);\n\n\treturn d;\n}\n\n/**\n * @template V\n * @param {() => V} fn\n * @returns {Derived<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function derived_safe_equal(fn) {\n\tconst signal = derived(fn);\n\tsignal.equals = safe_equals;\n\treturn signal;\n}\n\n/**\n * @param {Derived} derived\n * @returns {void}\n */\nexport function destroy_derived_effects(derived) {\n\tvar effects = derived.effects;\n\n\tif (effects !== null) {\n\t\tderived.effects = null;\n\n\t\tfor (var i = 0; i < effects.length; i += 1) {\n\t\t\tdestroy_effect(/** @type {Effect} */ (effects[i]));\n\t\t}\n\t}\n}\n\n/**\n * The currently updating deriveds, used to detect infinite recursion\n * in dev mode and provide a nicer error than 'too much recursion'\n * @type {Derived[]}\n */\nlet stack = [];\n\n/**\n * @param {Derived} derived\n * @returns {Effect | null}\n */\nfunction get_derived_parent_effect(derived) {\n\tvar parent = derived.parent;\n\twhile (parent !== null) {\n\t\tif ((parent.f & DERIVED) === 0) {\n\t\t\treturn /** @type {Effect} */ (parent);\n\t\t}\n\t\tparent = parent.parent;\n\t}\n\treturn null;\n}\n\n/**\n * @template T\n * @param {Derived} derived\n * @returns {T}\n */\nexport function execute_derived(derived) {\n\tvar value;\n\tvar prev_active_effect = active_effect;\n\n\tset_active_effect(get_derived_parent_effect(derived));\n\n\tif (DEV) {\n\t\tlet prev_inspect_effects = inspect_effects;\n\t\tset_inspect_effects(new Set());\n\t\ttry {\n\t\t\tif (stack.includes(derived)) {\n\t\t\t\te.derived_references_self();\n\t\t\t}\n\n\t\t\tstack.push(derived);\n\n\t\t\tdestroy_derived_effects(derived);\n\t\t\tvalue = update_reaction(derived);\n\t\t} finally {\n\t\t\tset_active_effect(prev_active_effect);\n\t\t\tset_inspect_effects(prev_inspect_effects);\n\t\t\tstack.pop();\n\t\t}\n\t} else {\n\t\ttry {\n\t\t\tdestroy_derived_effects(derived);\n\t\t\tvalue = update_reaction(derived);\n\t\t} finally {\n\t\t\tset_active_effect(prev_active_effect);\n\t\t}\n\t}\n\n\treturn value;\n}\n\n/**\n * @param {Derived} derived\n * @returns {void}\n */\nexport function update_derived(derived) {\n\tvar value = execute_derived(derived);\n\n\tif (!derived.equals(value)) {\n\t\tderived.v = value;\n\t\tderived.wv = increment_write_version();\n\t}\n\n\t// don't mark derived clean if we're reading it inside a\n\t// cleanup function, or it will cache a stale value\n\tif (is_destroying_effect) {\n\t\treturn;\n\t}\n\n\tif (batch_deriveds !== null) {\n\t\tbatch_deriveds.set(derived, derived.v);\n\t} else {\n\t\tvar status =\n\t\t\t(skip_reaction || (derived.f & UNOWNED) !== 0) && derived.deps !== null ? MAYBE_DIRTY : CLEAN;\n\n\t\tset_signal_status(derived, status);\n\t}\n}\n","/* This file is generated by scripts/process-messages/index.js. Do not edit! */\n\nimport { DEV } from 'esm-env';\n\nexport *  from '../shared/errors.js';\n\n/**\n * Cannot create a `$derived(...)` with an `await` expression outside of an effect tree\n * @returns {never}\n */\nexport function async_derived_orphan() {\n\tif (DEV) {\n\t\tconst error = new Error(`async_derived_orphan\\nCannot create a \\`$derived(...)\\` with an \\`await\\` expression outside of an effect tree\\nhttps://svelte.dev/e/async_derived_orphan`);\n\n\t\terror.name = 'Svelte error';\n\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/async_derived_orphan`);\n\t}\n}\n\n/**\n * Using `bind:value` together with a checkbox input is not allowed. Use `bind:checked` instead\n * @returns {never}\n */\nexport function bind_invalid_checkbox_value() {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_invalid_checkbox_value\\nUsing \\`bind:value\\` together with a checkbox input is not allowed. Use \\`bind:checked\\` instead\\nhttps://svelte.dev/e/bind_invalid_checkbox_value`);\n\n\t\terror.name = 'Svelte error';\n\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/bind_invalid_checkbox_value`);\n\t}\n}\n\n/**\n * Component %component% has an export named `%key%` that a consumer component is trying to access using `bind:%key%`, which is disallowed. Instead, use `bind:this` (e.g. `<%name% bind:this={component} />`) and then access the property on the bound component instance (e.g. `component.%key%`)\n * @param {string} component\n * @param {string} key\n * @param {string} name\n * @returns {never}\n */\nexport function bind_invalid_export(component, key, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_invalid_export\\nComponent ${component} has an export named \\`${key}\\` that a consumer component is trying to access using \\`bind:${key}\\`, which is disallowed. Instead, use \\`bind:this\\` (e.g. \\`<${name} bind:this={component} />\\`) and then access the property on the bound component instance (e.g. \\`component.${key}\\`)\\nhttps://svelte.dev/e/bind_invalid_export`);\n\n\t\terror.name = 'Svelte error';\n\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/bind_invalid_export`);\n\t}\n}\n\n/**\n * A component is attempting to bind to a non-bindable property `%key%` belonging to %component% (i.e. `<%name% bind:%key%={...}>`). To mark a property as bindable: `let { %key% = $bindable() } = $props()`\n * @param {string} key\n * @param {string} component\n * @param {string} name\n * @returns {never}\n */\nexport function bind_not_bindable(key, component, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_not_bindable\\nA component is attempting to bind to a non-bindable property \\`${key}\\` belonging to ${component} (i.e. \\`<${name} bind:${key}={...}>\\`). To mark a property as bindable: \\`let { ${key} = $bindable() } = $props()\\`\\nhttps://svelte.dev/e/bind_not_bindable`);\n\n\t\terror.name = 'Svelte error';\n\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/bind_not_bindable`);\n\t}\n}\n\n/**\n * Calling `%method%` on a component instance (of %component%) is no longer valid in Svelte 5\n * @param {string} method\n * @param {string} component\n * @returns {never}\n */\nexport function component_api_changed(method, component) {\n\tif (DEV) {\n\t\tconst error = new Error(`component_api_changed\\nCalling \\`${method}\\` on a component instance (of ${component}) is no longer valid in Svelte 5\\nhttps://svelte.dev/e/component_api_changed`);\n\n\t\terror.name = 'Svelte error';\n\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/component_api_changed`);\n\t}\n}\n\n/**\n * Attempted to instantiate %component% with `new %name%`, which is no longer valid in Svelte 5. If this component is not under your control, set the `compatibility.componentApi` compiler option to `4` to keep it working.\n * @param {string} component\n * @param {string} name\n * @returns {never}\n */\nexport function component_api_invalid_new(component, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`component_api_invalid_new\\nAttempted to instantiate ${component} with \\`new ${name}\\`, which is no longer valid in Svelte 5. If this component is not under your control, set the \\`compatibility.componentApi\\` compiler option to \\`4\\` to keep it working.\\nhttps://svelte.dev/e/component_api_invalid_new`);\n\n\t\terror.name = 'Svelte error';\n\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/component_api_invalid_new`);\n\t}\n}\n\n/**\n * A derived value cannot reference itself recursively\n * @returns {never}\n */\nexport function derived_references_self() {\n\tif (DEV) {\n\t\tconst error = new Error(`derived_references_self\\nA derived value cannot reference itself recursively\\nhttps://svelte.dev/e/derived_references_self`);\n\n\t\terror.name = 'Svelte error';\n\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/derived_references_self`);\n\t}\n}\n\n/**\n * Keyed each block has duplicate key `%value%` at indexes %a% and %b%\n * @param {string} a\n * @param {string} b\n * @param {string | undefined | null} [value]\n * @returns {never}\n */\nexport function each_key_duplicate(a, b, value) {\n\tif (DEV) {\n\t\tconst error = new Error(`each_key_duplicate\\n${value\n\t\t\t? `Keyed each block has duplicate key \\`${value}\\` at indexes ${a} and ${b}`\n\t\t\t: `Keyed each block has duplicate key at indexes ${a} and ${b}`}\\nhttps://svelte.dev/e/each_key_duplicate`);\n\n\t\terror.name = 'Svelte error';\n\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/each_key_duplicate`);\n\t}\n}\n\n/**\n * `%rune%` cannot be used inside an effect cleanup function\n * @param {string} rune\n * @returns {never}\n */\nexport function effect_in_teardown(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_in_teardown\\n\\`${rune}\\` cannot be used inside an effect cleanup function\\nhttps://svelte.dev/e/effect_in_teardown`);\n\n\t\terror.name = 'Svelte error';\n\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_in_teardown`);\n\t}\n}\n\n/**\n * Effect cannot be created inside a `$derived` value that was not itself created inside an effect\n * @returns {never}\n */\nexport function effect_in_unowned_derived() {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_in_unowned_derived\\nEffect cannot be created inside a \\`$derived\\` value that was not itself created inside an effect\\nhttps://svelte.dev/e/effect_in_unowned_derived`);\n\n\t\terror.name = 'Svelte error';\n\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_in_unowned_derived`);\n\t}\n}\n\n/**\n * `%rune%` can only be used inside an effect (e.g. during component initialisation)\n * @param {string} rune\n * @returns {never}\n */\nexport function effect_orphan(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_orphan\\n\\`${rune}\\` can only be used inside an effect (e.g. during component initialisation)\\nhttps://svelte.dev/e/effect_orphan`);\n\n\t\terror.name = 'Svelte error';\n\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_orphan`);\n\t}\n}\n\n/**\n * `$effect.pending()` can only be called inside an effect or derived\n * @returns {never}\n */\nexport function effect_pending_outside_reaction() {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_pending_outside_reaction\\n\\`$effect.pending()\\` can only be called inside an effect or derived\\nhttps://svelte.dev/e/effect_pending_outside_reaction`);\n\n\t\terror.name = 'Svelte error';\n\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_pending_outside_reaction`);\n\t}\n}\n\n/**\n * Maximum update depth exceeded. This typically indicates that an effect reads and writes the same piece of state\n * @returns {never}\n */\nexport function effect_update_depth_exceeded() {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_update_depth_exceeded\\nMaximum update depth exceeded. This typically indicates that an effect reads and writes the same piece of state\\nhttps://svelte.dev/e/effect_update_depth_exceeded`);\n\n\t\terror.name = 'Svelte error';\n\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_update_depth_exceeded`);\n\t}\n}\n\n/**\n * Cannot use `flushSync` inside an effect\n * @returns {never}\n */\nexport function flush_sync_in_effect() {\n\tif (DEV) {\n\t\tconst error = new Error(`flush_sync_in_effect\\nCannot use \\`flushSync\\` inside an effect\\nhttps://svelte.dev/e/flush_sync_in_effect`);\n\n\t\terror.name = 'Svelte error';\n\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/flush_sync_in_effect`);\n\t}\n}\n\n/**\n * `getAbortSignal()` can only be called inside an effect or derived\n * @returns {never}\n */\nexport function get_abort_signal_outside_reaction() {\n\tif (DEV) {\n\t\tconst error = new Error(`get_abort_signal_outside_reaction\\n\\`getAbortSignal()\\` can only be called inside an effect or derived\\nhttps://svelte.dev/e/get_abort_signal_outside_reaction`);\n\n\t\terror.name = 'Svelte error';\n\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/get_abort_signal_outside_reaction`);\n\t}\n}\n\n/**\n * Failed to hydrate the application\n * @returns {never}\n */\nexport function hydration_failed() {\n\tif (DEV) {\n\t\tconst error = new Error(`hydration_failed\\nFailed to hydrate the application\\nhttps://svelte.dev/e/hydration_failed`);\n\n\t\terror.name = 'Svelte error';\n\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/hydration_failed`);\n\t}\n}\n\n/**\n * Could not `{@render}` snippet due to the expression being `null` or `undefined`. Consider using optional chaining `{@render snippet?.()}`\n * @returns {never}\n */\nexport function invalid_snippet() {\n\tif (DEV) {\n\t\tconst error = new Error(`invalid_snippet\\nCould not \\`{@render}\\` snippet due to the expression being \\`null\\` or \\`undefined\\`. Consider using optional chaining \\`{@render snippet?.()}\\`\\nhttps://svelte.dev/e/invalid_snippet`);\n\n\t\terror.name = 'Svelte error';\n\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/invalid_snippet`);\n\t}\n}\n\n/**\n * `%name%(...)` cannot be used in runes mode\n * @param {string} name\n * @returns {never}\n */\nexport function lifecycle_legacy_only(name) {\n\tif (DEV) {\n\t\tconst error = new Error(`lifecycle_legacy_only\\n\\`${name}(...)\\` cannot be used in runes mode\\nhttps://svelte.dev/e/lifecycle_legacy_only`);\n\n\t\terror.name = 'Svelte error';\n\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/lifecycle_legacy_only`);\n\t}\n}\n\n/**\n * Cannot do `bind:%key%={undefined}` when `%key%` has a fallback value\n * @param {string} key\n * @returns {never}\n */\nexport function props_invalid_value(key) {\n\tif (DEV) {\n\t\tconst error = new Error(`props_invalid_value\\nCannot do \\`bind:${key}={undefined}\\` when \\`${key}\\` has a fallback value\\nhttps://svelte.dev/e/props_invalid_value`);\n\n\t\terror.name = 'Svelte error';\n\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/props_invalid_value`);\n\t}\n}\n\n/**\n * Rest element properties of `$props()` such as `%property%` are readonly\n * @param {string} property\n * @returns {never}\n */\nexport function props_rest_readonly(property) {\n\tif (DEV) {\n\t\tconst error = new Error(`props_rest_readonly\\nRest element properties of \\`$props()\\` such as \\`${property}\\` are readonly\\nhttps://svelte.dev/e/props_rest_readonly`);\n\n\t\terror.name = 'Svelte error';\n\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/props_rest_readonly`);\n\t}\n}\n\n/**\n * The `%rune%` rune is only available inside `.svelte` and `.svelte.js/ts` files\n * @param {string} rune\n * @returns {never}\n */\nexport function rune_outside_svelte(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`rune_outside_svelte\\nThe \\`${rune}\\` rune is only available inside \\`.svelte\\` and \\`.svelte.js/ts\\` files\\nhttps://svelte.dev/e/rune_outside_svelte`);\n\n\t\terror.name = 'Svelte error';\n\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/rune_outside_svelte`);\n\t}\n}\n\n/**\n * `setContext` must be called when a component first initializes, not in a subsequent effect or after an `await` expression\n * @returns {never}\n */\nexport function set_context_after_init() {\n\tif (DEV) {\n\t\tconst error = new Error(`set_context_after_init\\n\\`setContext\\` must be called when a component first initializes, not in a subsequent effect or after an \\`await\\` expression\\nhttps://svelte.dev/e/set_context_after_init`);\n\n\t\terror.name = 'Svelte error';\n\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/set_context_after_init`);\n\t}\n}\n\n/**\n * Property descriptors defined on `$state` objects must contain `value` and always be `enumerable`, `configurable` and `writable`.\n * @returns {never}\n */\nexport function state_descriptors_fixed() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_descriptors_fixed\\nProperty descriptors defined on \\`$state\\` objects must contain \\`value\\` and always be \\`enumerable\\`, \\`configurable\\` and \\`writable\\`.\\nhttps://svelte.dev/e/state_descriptors_fixed`);\n\n\t\terror.name = 'Svelte error';\n\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/state_descriptors_fixed`);\n\t}\n}\n\n/**\n * Cannot set prototype of `$state` object\n * @returns {never}\n */\nexport function state_prototype_fixed() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_prototype_fixed\\nCannot set prototype of \\`$state\\` object\\nhttps://svelte.dev/e/state_prototype_fixed`);\n\n\t\terror.name = 'Svelte error';\n\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/state_prototype_fixed`);\n\t}\n}\n\n/**\n * Updating state inside `$derived(...)`, `$inspect(...)` or a template expression is forbidden. If the value should not be reactive, declare it without `$state`\n * @returns {never}\n */\nexport function state_unsafe_mutation() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_unsafe_mutation\\nUpdating state inside \\`$derived(...)\\`, \\`$inspect(...)\\` or a template expression is forbidden. If the value should not be reactive, declare it without \\`$state\\`\\nhttps://svelte.dev/e/state_unsafe_mutation`);\n\n\t\terror.name = 'Svelte error';\n\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/state_unsafe_mutation`);\n\t}\n}\n\n/**\n * A `<svelte:boundary>` `reset` function cannot be called while an error is still being handled\n * @returns {never}\n */\nexport function svelte_boundary_reset_onerror() {\n\tif (DEV) {\n\t\tconst error = new Error(`svelte_boundary_reset_onerror\\nA \\`<svelte:boundary>\\` \\`reset\\` function cannot be called while an error is still being handled\\nhttps://svelte.dev/e/svelte_boundary_reset_onerror`);\n\n\t\terror.name = 'Svelte error';\n\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/svelte_boundary_reset_onerror`);\n\t}\n}","/** @import { ComponentContext, ComponentContextLegacy, Derived, Effect, TemplateNode, TransitionManager } from '#client' */\nimport {\n\tis_dirty,\n\tactive_effect,\n\tactive_reaction,\n\tupdate_effect,\n\tget,\n\tis_destroying_effect,\n\tremove_reactions,\n\tset_active_reaction,\n\tset_is_destroying_effect,\n\tset_signal_status,\n\tuntrack,\n\tuntracking\n} from '../runtime.js';\nimport {\n\tDIRTY,\n\tBRANCH_EFFECT,\n\tRENDER_EFFECT,\n\tEFFECT,\n\tDESTROYED,\n\tINERT,\n\tEFFECT_RAN,\n\tBLOCK_EFFECT,\n\tROOT_EFFECT,\n\tEFFECT_TRANSPARENT,\n\tDERIVED,\n\tUNOWNED,\n\tCLEAN,\n\tINSPECT_EFFECT,\n\tHEAD_EFFECT,\n\tMAYBE_DIRTY,\n\tEFFECT_PRESERVED,\n\tSTALE_REACTION,\n\tUSER_EFFECT,\n\tASYNC\n} from '#client/constants';\nimport * as e from '../errors.js';\nimport { DEV } from 'esm-env';\nimport { define_property } from '../../shared/utils.js';\nimport { get_next_sibling } from '../dom/operations.js';\nimport { component_context, dev_current_component_function, dev_stack } from '../context.js';\nimport { Batch, schedule_effect } from './batch.js';\nimport { flatten } from './async.js';\n\n/**\n * @param {'$effect' | '$effect.pre' | '$inspect'} rune\n */\nexport function validate_effect(rune) {\n\tif (active_effect === null && active_reaction === null) {\n\t\te.effect_orphan(rune);\n\t}\n\n\tif (active_reaction !== null && (active_reaction.f & UNOWNED) !== 0 && active_effect === null) {\n\t\te.effect_in_unowned_derived();\n\t}\n\n\tif (is_destroying_effect) {\n\t\te.effect_in_teardown(rune);\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @param {Effect} parent_effect\n */\nfunction push_effect(effect, parent_effect) {\n\tvar parent_last = parent_effect.last;\n\tif (parent_last === null) {\n\t\tparent_effect.last = parent_effect.first = effect;\n\t} else {\n\t\tparent_last.next = effect;\n\t\teffect.prev = parent_last;\n\t\tparent_effect.last = effect;\n\t}\n}\n\n/**\n * @param {number} type\n * @param {null | (() => void | (() => void))} fn\n * @param {boolean} sync\n * @param {boolean} push\n * @returns {Effect}\n */\nfunction create_effect(type, fn, sync, push = true) {\n\tvar parent = active_effect;\n\n\tif (DEV) {\n\t\t// Ensure the parent is never an inspect effect\n\t\twhile (parent !== null && (parent.f & INSPECT_EFFECT) !== 0) {\n\t\t\tparent = parent.parent;\n\t\t}\n\t}\n\n\tif (parent !== null && (parent.f & INERT) !== 0) {\n\t\ttype |= INERT;\n\t}\n\n\t/** @type {Effect} */\n\tvar effect = {\n\t\tctx: component_context,\n\t\tdeps: null,\n\t\tnodes_start: null,\n\t\tnodes_end: null,\n\t\tf: type | DIRTY,\n\t\tfirst: null,\n\t\tfn,\n\t\tlast: null,\n\t\tnext: null,\n\t\tparent,\n\t\tb: parent && parent.b,\n\t\tprev: null,\n\t\tteardown: null,\n\t\ttransitions: null,\n\t\twv: 0,\n\t\tac: null\n\t};\n\n\tif (DEV) {\n\t\teffect.component_function = dev_current_component_function;\n\t}\n\n\tif (sync) {\n\t\ttry {\n\t\t\tupdate_effect(effect);\n\t\t\teffect.f |= EFFECT_RAN;\n\t\t} catch (e) {\n\t\t\tdestroy_effect(effect);\n\t\t\tthrow e;\n\t\t}\n\t} else if (fn !== null) {\n\t\tschedule_effect(effect);\n\t}\n\n\t// if an effect has no dependencies, no DOM and no teardown function,\n\t// don't bother adding it to the effect tree\n\tvar inert =\n\t\tsync &&\n\t\teffect.deps === null &&\n\t\teffect.first === null &&\n\t\teffect.nodes_start === null &&\n\t\teffect.teardown === null &&\n\t\t(effect.f & EFFECT_PRESERVED) === 0;\n\n\tif (!inert && push) {\n\t\tif (parent !== null) {\n\t\t\tpush_effect(effect, parent);\n\t\t}\n\n\t\t// if we're in a derived, add the effect there too\n\t\tif (\n\t\t\tactive_reaction !== null &&\n\t\t\t(active_reaction.f & DERIVED) !== 0 &&\n\t\t\t(type & ROOT_EFFECT) === 0\n\t\t) {\n\t\t\tvar derived = /** @type {Derived} */ (active_reaction);\n\t\t\t(derived.effects ??= []).push(effect);\n\t\t}\n\t}\n\n\treturn effect;\n}\n\n/**\n * Internal representation of `$effect.tracking()`\n * @returns {boolean}\n */\nexport function effect_tracking() {\n\treturn active_reaction !== null && !untracking;\n}\n\n/**\n * @param {() => void} fn\n */\nexport function teardown(fn) {\n\tconst effect = create_effect(RENDER_EFFECT, null, false);\n\tset_signal_status(effect, CLEAN);\n\teffect.teardown = fn;\n\treturn effect;\n}\n\n/**\n * Internal representation of `$effect(...)`\n * @param {() => void | (() => void)} fn\n */\nexport function user_effect(fn) {\n\tvalidate_effect('$effect');\n\n\tif (DEV) {\n\t\tdefine_property(fn, 'name', {\n\t\t\tvalue: '$effect'\n\t\t});\n\t}\n\n\t// Non-nested `$effect(...)` in a component should be deferred\n\t// until the component is mounted\n\tvar flags = /** @type {Effect} */ (active_effect).f;\n\tvar defer = !active_reaction && (flags & BRANCH_EFFECT) !== 0 && (flags & EFFECT_RAN) === 0;\n\n\tif (defer) {\n\t\t// Top-level `$effect(...)` in an unmounted component — defer until mount\n\t\tvar context = /** @type {ComponentContext} */ (component_context);\n\t\t(context.e ??= []).push(fn);\n\t} else {\n\t\t// Everything else — create immediately\n\t\treturn create_user_effect(fn);\n\t}\n}\n\n/**\n * @param {() => void | (() => void)} fn\n */\nexport function create_user_effect(fn) {\n\treturn create_effect(EFFECT | USER_EFFECT, fn, false);\n}\n\n/**\n * Internal representation of `$effect.pre(...)`\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function user_pre_effect(fn) {\n\tvalidate_effect('$effect.pre');\n\tif (DEV) {\n\t\tdefine_property(fn, 'name', {\n\t\t\tvalue: '$effect.pre'\n\t\t});\n\t}\n\treturn create_effect(RENDER_EFFECT | USER_EFFECT, fn, true);\n}\n\n/** @param {() => void | (() => void)} fn */\nexport function inspect_effect(fn) {\n\treturn create_effect(INSPECT_EFFECT, fn, true);\n}\n\n/**\n * Internal representation of `$effect.root(...)`\n * @param {() => void | (() => void)} fn\n * @returns {() => void}\n */\nexport function effect_root(fn) {\n\tBatch.ensure();\n\tconst effect = create_effect(ROOT_EFFECT, fn, true);\n\n\treturn () => {\n\t\tdestroy_effect(effect);\n\t};\n}\n\n/**\n * An effect root whose children can transition out\n * @param {() => void} fn\n * @returns {(options?: { outro?: boolean }) => Promise<void>}\n */\nexport function component_root(fn) {\n\tBatch.ensure();\n\tconst effect = create_effect(ROOT_EFFECT, fn, true);\n\n\treturn (options = {}) => {\n\t\treturn new Promise((fulfil) => {\n\t\t\tif (options.outro) {\n\t\t\t\tpause_effect(effect, () => {\n\t\t\t\t\tdestroy_effect(effect);\n\t\t\t\t\tfulfil(undefined);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tdestroy_effect(effect);\n\t\t\t\tfulfil(undefined);\n\t\t\t}\n\t\t});\n\t};\n}\n\n/**\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function effect(fn) {\n\treturn create_effect(EFFECT, fn, false);\n}\n\n/**\n * Internal representation of `$: ..`\n * @param {() => any} deps\n * @param {() => void | (() => void)} fn\n */\nexport function legacy_pre_effect(deps, fn) {\n\tvar context = /** @type {ComponentContextLegacy} */ (component_context);\n\n\t/** @type {{ effect: null | Effect, ran: boolean, deps: () => any }} */\n\tvar token = { effect: null, ran: false, deps };\n\n\tcontext.l.$.push(token);\n\n\ttoken.effect = render_effect(() => {\n\t\tdeps();\n\n\t\t// If this legacy pre effect has already run before the end of the reset, then\n\t\t// bail out to emulate the same behavior.\n\t\tif (token.ran) return;\n\n\t\ttoken.ran = true;\n\t\tuntrack(fn);\n\t});\n}\n\nexport function legacy_pre_effect_reset() {\n\tvar context = /** @type {ComponentContextLegacy} */ (component_context);\n\n\trender_effect(() => {\n\t\t// Run dirty `$:` statements\n\t\tfor (var token of context.l.$) {\n\t\t\ttoken.deps();\n\n\t\t\tvar effect = token.effect;\n\n\t\t\t// If the effect is CLEAN, then make it MAYBE_DIRTY. This ensures we traverse through\n\t\t\t// the effects dependencies and correctly ensure each dependency is up-to-date.\n\t\t\tif ((effect.f & CLEAN) !== 0) {\n\t\t\t\tset_signal_status(effect, MAYBE_DIRTY);\n\t\t\t}\n\n\t\t\tif (is_dirty(effect)) {\n\t\t\t\tupdate_effect(effect);\n\t\t\t}\n\n\t\t\ttoken.ran = false;\n\t\t}\n\t});\n}\n\n/**\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function async_effect(fn) {\n\treturn create_effect(ASYNC | EFFECT_PRESERVED, fn, true);\n}\n\n/**\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function render_effect(fn, flags = 0) {\n\treturn create_effect(RENDER_EFFECT | flags, fn, true);\n}\n\n/**\n * @param {(...expressions: any) => void | (() => void)} fn\n * @param {Array<() => any>} sync\n * @param {Array<() => Promise<any>>} async\n */\nexport function template_effect(fn, sync = [], async = []) {\n\tflatten(sync, async, (values) => {\n\t\tcreate_effect(RENDER_EFFECT, () => fn(...values.map(get)), true);\n\t});\n}\n\n/**\n * @param {(() => void)} fn\n * @param {number} flags\n */\nexport function block(fn, flags = 0) {\n\tvar effect = create_effect(BLOCK_EFFECT | flags, fn, true);\n\tif (DEV) {\n\t\teffect.dev_stack = dev_stack;\n\t}\n\treturn effect;\n}\n\n/**\n * @param {(() => void)} fn\n * @param {boolean} [push]\n */\nexport function branch(fn, push = true) {\n\treturn create_effect(BRANCH_EFFECT, fn, true, push);\n}\n\n/**\n * @param {Effect} effect\n */\nexport function execute_effect_teardown(effect) {\n\tvar teardown = effect.teardown;\n\tif (teardown !== null) {\n\t\tconst previously_destroying_effect = is_destroying_effect;\n\t\tconst previous_reaction = active_reaction;\n\t\tset_is_destroying_effect(true);\n\t\tset_active_reaction(null);\n\t\ttry {\n\t\t\tteardown.call(null);\n\t\t} finally {\n\t\t\tset_is_destroying_effect(previously_destroying_effect);\n\t\t\tset_active_reaction(previous_reaction);\n\t\t}\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @param {boolean} remove_dom\n * @returns {void}\n */\nexport function destroy_effect_children(signal, remove_dom = false) {\n\tvar effect = signal.first;\n\tsignal.first = signal.last = null;\n\n\twhile (effect !== null) {\n\t\teffect.ac?.abort(STALE_REACTION);\n\n\t\tvar next = effect.next;\n\n\t\tif ((effect.f & ROOT_EFFECT) !== 0) {\n\t\t\t// this is now an independent root\n\t\t\teffect.parent = null;\n\t\t} else {\n\t\t\tdestroy_effect(effect, remove_dom);\n\t\t}\n\n\t\teffect = next;\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @returns {void}\n */\nexport function destroy_block_effect_children(signal) {\n\tvar effect = signal.first;\n\n\twhile (effect !== null) {\n\t\tvar next = effect.next;\n\t\tif ((effect.f & BRANCH_EFFECT) === 0) {\n\t\t\tdestroy_effect(effect);\n\t\t}\n\t\teffect = next;\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @param {boolean} [remove_dom]\n * @returns {void}\n */\nexport function destroy_effect(effect, remove_dom = true) {\n\tvar removed = false;\n\n\tif (\n\t\t(remove_dom || (effect.f & HEAD_EFFECT) !== 0) &&\n\t\teffect.nodes_start !== null &&\n\t\teffect.nodes_end !== null\n\t) {\n\t\tremove_effect_dom(effect.nodes_start, /** @type {TemplateNode} */ (effect.nodes_end));\n\t\tremoved = true;\n\t}\n\n\tdestroy_effect_children(effect, remove_dom && !removed);\n\tremove_reactions(effect, 0);\n\tset_signal_status(effect, DESTROYED);\n\n\tvar transitions = effect.transitions;\n\n\tif (transitions !== null) {\n\t\tfor (const transition of transitions) {\n\t\t\ttransition.stop();\n\t\t}\n\t}\n\n\texecute_effect_teardown(effect);\n\n\tvar parent = effect.parent;\n\n\t// If the parent doesn't have any children, then skip this work altogether\n\tif (parent !== null && parent.first !== null) {\n\t\tunlink_effect(effect);\n\t}\n\n\tif (DEV) {\n\t\teffect.component_function = null;\n\t}\n\n\t// `first` and `child` are nulled out in destroy_effect_children\n\t// we don't null out `parent` so that error propagation can work correctly\n\teffect.next =\n\t\teffect.prev =\n\t\teffect.teardown =\n\t\teffect.ctx =\n\t\teffect.deps =\n\t\teffect.fn =\n\t\teffect.nodes_start =\n\t\teffect.nodes_end =\n\t\teffect.ac =\n\t\t\tnull;\n}\n\n/**\n *\n * @param {TemplateNode | null} node\n * @param {TemplateNode} end\n */\nexport function remove_effect_dom(node, end) {\n\twhile (node !== null) {\n\t\t/** @type {TemplateNode | null} */\n\t\tvar next = node === end ? null : /** @type {TemplateNode} */ (get_next_sibling(node));\n\n\t\tnode.remove();\n\t\tnode = next;\n\t}\n}\n\n/**\n * Detach an effect from the effect tree, freeing up memory and\n * reducing the amount of work that happens on subsequent traversals\n * @param {Effect} effect\n */\nexport function unlink_effect(effect) {\n\tvar parent = effect.parent;\n\tvar prev = effect.prev;\n\tvar next = effect.next;\n\n\tif (prev !== null) prev.next = next;\n\tif (next !== null) next.prev = prev;\n\n\tif (parent !== null) {\n\t\tif (parent.first === effect) parent.first = next;\n\t\tif (parent.last === effect) parent.last = prev;\n\t}\n}\n\n/**\n * When a block effect is removed, we don't immediately destroy it or yank it\n * out of the DOM, because it might have transitions. Instead, we 'pause' it.\n * It stays around (in memory, and in the DOM) until outro transitions have\n * completed, and if the state change is reversed then we _resume_ it.\n * A paused effect does not update, and the DOM subtree becomes inert.\n * @param {Effect} effect\n * @param {() => void} [callback]\n */\nexport function pause_effect(effect, callback) {\n\t/** @type {TransitionManager[]} */\n\tvar transitions = [];\n\n\tpause_children(effect, transitions, true);\n\n\trun_out_transitions(transitions, () => {\n\t\tdestroy_effect(effect);\n\t\tif (callback) callback();\n\t});\n}\n\n/**\n * @param {TransitionManager[]} transitions\n * @param {() => void} fn\n */\nexport function run_out_transitions(transitions, fn) {\n\tvar remaining = transitions.length;\n\tif (remaining > 0) {\n\t\tvar check = () => --remaining || fn();\n\t\tfor (var transition of transitions) {\n\t\t\ttransition.out(check);\n\t\t}\n\t} else {\n\t\tfn();\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @param {TransitionManager[]} transitions\n * @param {boolean} local\n */\nexport function pause_children(effect, transitions, local) {\n\tif ((effect.f & INERT) !== 0) return;\n\teffect.f ^= INERT;\n\n\tif (effect.transitions !== null) {\n\t\tfor (const transition of effect.transitions) {\n\t\t\tif (transition.is_global || local) {\n\t\t\t\ttransitions.push(transition);\n\t\t\t}\n\t\t}\n\t}\n\n\tvar child = effect.first;\n\n\twhile (child !== null) {\n\t\tvar sibling = child.next;\n\t\tvar transparent = (child.f & EFFECT_TRANSPARENT) !== 0 || (child.f & BRANCH_EFFECT) !== 0;\n\t\t// TODO we don't need to call pause_children recursively with a linked list in place\n\t\t// it's slightly more involved though as we have to account for `transparent` changing\n\t\t// through the tree.\n\t\tpause_children(child, transitions, transparent ? local : false);\n\t\tchild = sibling;\n\t}\n}\n\n/**\n * The opposite of `pause_effect`. We call this if (for example)\n * `x` becomes falsy then truthy: `{#if x}...{/if}`\n * @param {Effect} effect\n */\nexport function resume_effect(effect) {\n\tresume_children(effect, true);\n}\n\n/**\n * @param {Effect} effect\n * @param {boolean} local\n */\nfunction resume_children(effect, local) {\n\tif ((effect.f & INERT) === 0) return;\n\teffect.f ^= INERT;\n\n\t// If a dependency of this effect changed while it was paused,\n\t// schedule the effect to update. we don't use `is_dirty`\n\t// here because we don't want to eagerly recompute a derived like\n\t// `{#if foo}{foo.bar()}{/if}` if `foo` is now `undefined\n\tif ((effect.f & CLEAN) === 0) {\n\t\tset_signal_status(effect, DIRTY);\n\t\tschedule_effect(effect);\n\t}\n\n\tvar child = effect.first;\n\n\twhile (child !== null) {\n\t\tvar sibling = child.next;\n\t\tvar transparent = (child.f & EFFECT_TRANSPARENT) !== 0 || (child.f & BRANCH_EFFECT) !== 0;\n\t\t// TODO we don't need to call resume_children recursively with a linked list in place\n\t\t// it's slightly more involved though as we have to account for `transparent` changing\n\t\t// through the tree.\n\t\tresume_children(child, transparent ? local : false);\n\t\tchild = sibling;\n\t}\n\n\tif (effect.transitions !== null) {\n\t\tfor (const transition of effect.transitions) {\n\t\t\tif (transition.is_global || local) {\n\t\t\t\ttransition.in();\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport function aborted() {\n\tvar effect = /** @type {Effect} */ (active_effect);\n\treturn (effect.f & DESTROYED) !== 0;\n}\n","/** @import { Effect, Value } from '#client' */\n\nimport { DESTROYED } from '#client/constants';\nimport { DEV } from 'esm-env';\nimport { component_context, is_runes, set_component_context } from '../context.js';\nimport { get_pending_boundary } from '../dom/blocks/boundary.js';\nimport { invoke_error_boundary } from '../error-handling.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tset_active_effect,\n\tset_active_reaction\n} from '../runtime.js';\nimport { current_batch } from './batch.js';\nimport {\n\tasync_derived,\n\tcurrent_async_effect,\n\tderived,\n\tderived_safe_equal,\n\tset_from_async_derived\n} from './deriveds.js';\n\n/**\n *\n * @param {Array<() => any>} sync\n * @param {Array<() => Promise<any>>} async\n * @param {(values: Value[]) => any} fn\n */\nexport function flatten(sync, async, fn) {\n\tconst d = is_runes() ? derived : derived_safe_equal;\n\n\tif (async.length === 0) {\n\t\tfn(sync.map(d));\n\t\treturn;\n\t}\n\n\tvar batch = current_batch;\n\tvar parent = /** @type {Effect} */ (active_effect);\n\n\tvar restore = capture();\n\tvar boundary = get_pending_boundary();\n\n\tPromise.all(async.map((expression) => async_derived(expression)))\n\t\t.then((result) => {\n\t\t\tbatch?.activate();\n\n\t\t\trestore();\n\n\t\t\ttry {\n\t\t\t\tfn([...sync.map(d), ...result]);\n\t\t\t} catch (error) {\n\t\t\t\t// ignore errors in blocks that have already been destroyed\n\t\t\t\tif ((parent.f & DESTROYED) === 0) {\n\t\t\t\t\tinvoke_error_boundary(error, parent);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbatch?.deactivate();\n\t\t\tunset_context();\n\t\t})\n\t\t.catch((error) => {\n\t\t\tboundary.error(error);\n\t\t});\n}\n\n/**\n * Captures the current effect context so that we can restore it after\n * some asynchronous work has happened (so that e.g. `await a + b`\n * causes `b` to be registered as a dependency).\n */\nfunction capture() {\n\tvar previous_effect = active_effect;\n\tvar previous_reaction = active_reaction;\n\tvar previous_component_context = component_context;\n\n\treturn function restore() {\n\t\tset_active_effect(previous_effect);\n\t\tset_active_reaction(previous_reaction);\n\t\tset_component_context(previous_component_context);\n\n\t\tif (DEV) {\n\t\t\tset_from_async_derived(null);\n\t\t}\n\t};\n}\n\n/**\n * Wraps an `await` expression in such a way that the effect context that was\n * active before the expression evaluated can be reapplied afterwards —\n * `await a + b` becomes `(await $.save(a))() + b`\n * @template T\n * @param {Promise<T>} promise\n * @returns {Promise<() => T>}\n */\nexport async function save(promise) {\n\tvar restore = capture();\n\tvar value = await promise;\n\n\treturn () => {\n\t\trestore();\n\t\treturn value;\n\t};\n}\n\n/**\n * Reset `current_async_effect` after the `promise` resolves, so\n * that we can emit `await_reactivity_loss` warnings\n * @template T\n * @param {Promise<T>} promise\n * @returns {Promise<() => T>}\n */\nexport async function track_reactivity_loss(promise) {\n\tvar previous_async_effect = current_async_effect;\n\tvar value = await promise;\n\n\treturn () => {\n\t\tset_from_async_derived(previous_async_effect);\n\t\treturn value;\n\t};\n}\n\nexport function unset_context() {\n\tset_active_effect(null);\n\tset_active_reaction(null);\n\tset_component_context(null);\n\tif (DEV) set_from_async_derived(null);\n}\n","/** @import { Derived, Effect, Source } from '#client' */\nimport {\n\tBLOCK_EFFECT,\n\tBRANCH_EFFECT,\n\tCLEAN,\n\tDESTROYED,\n\tDIRTY,\n\tEFFECT,\n\tASYNC,\n\tINERT,\n\tRENDER_EFFECT,\n\tROOT_EFFECT,\n\tUSER_EFFECT,\n\tMAYBE_DIRTY\n} from '#client/constants';\nimport { async_mode_flag } from '../../flags/index.js';\nimport { deferred, define_property } from '../../shared/utils.js';\nimport { get_pending_boundary } from '../dom/blocks/boundary.js';\nimport {\n\tactive_effect,\n\tis_dirty,\n\tis_updating_effect,\n\tset_is_updating_effect,\n\tset_signal_status,\n\tupdate_effect\n} from '../runtime.js';\nimport * as e from '../errors.js';\nimport { flush_tasks } from '../dom/task.js';\nimport { DEV } from 'esm-env';\nimport { invoke_error_boundary } from '../error-handling.js';\nimport { old_values } from './sources.js';\nimport { unlink_effect } from './effects.js';\nimport { unset_context } from './async.js';\n\n/** @type {Set<Batch>} */\nconst batches = new Set();\n\n/** @type {Batch | null} */\nexport let current_batch = null;\n\n/**\n * This is needed to avoid overwriting inputs in non-async mode\n * TODO 6.0 remove this, as non-async mode will go away\n * @type {Batch | null}\n */\nexport let previous_batch = null;\n\n/**\n * When time travelling, we re-evaluate deriveds based on the temporary\n * values of their dependencies rather than their actual values, and cache\n * the results in this map rather than on the deriveds themselves\n * @type {Map<Derived, any> | null}\n */\nexport let batch_deriveds = null;\n\n/** @type {Set<() => void>} */\nexport let effect_pending_updates = new Set();\n\n/** @type {Array<() => void>} */\nlet tasks = [];\n\nfunction dequeue() {\n\tconst task = /** @type {() => void} */ (tasks.shift());\n\n\tif (tasks.length > 0) {\n\t\tqueueMicrotask(dequeue);\n\t}\n\n\ttask();\n}\n\n/** @type {Effect[]} */\nlet queued_root_effects = [];\n\n/** @type {Effect | null} */\nlet last_scheduled_effect = null;\n\nlet is_flushing = false;\n\nlet is_flushing_sync = false;\nexport class Batch {\n\t/**\n\t * The current values of any sources that are updated in this batch\n\t * They keys of this map are identical to `this.#previous`\n\t * @type {Map<Source, any>}\n\t */\n\tcurrent = new Map();\n\n\t/**\n\t * The values of any sources that are updated in this batch _before_ those updates took place.\n\t * They keys of this map are identical to `this.#current`\n\t * @type {Map<Source, any>}\n\t */\n\t#previous = new Map();\n\n\t/**\n\t * When the batch is committed (and the DOM is updated), we need to remove old branches\n\t * and append new ones by calling the functions added inside (if/each/key/etc) blocks\n\t * @type {Set<() => void>}\n\t */\n\t#callbacks = new Set();\n\n\t/**\n\t * The number of async effects that are currently in flight\n\t */\n\t#pending = 0;\n\n\t/**\n\t * A deferred that resolves when the batch is committed, used with `settled()`\n\t * TODO replace with Promise.withResolvers once supported widely enough\n\t * @type {{ promise: Promise<void>, resolve: (value?: any) => void, reject: (reason: unknown) => void } | null}\n\t */\n\t#deferred = null;\n\n\t/**\n\t * True if an async effect inside this batch resolved and\n\t * its parent branch was already deleted\n\t */\n\t#neutered = false;\n\n\t/**\n\t * Async effects (created inside `async_derived`) encountered during processing.\n\t * These run after the rest of the batch has updated, since they should\n\t * always have the latest values\n\t * @type {Effect[]}\n\t */\n\t#async_effects = [];\n\n\t/**\n\t * The same as `#async_effects`, but for effects inside a newly-created\n\t * `<svelte:boundary>` — these do not prevent the batch from committing\n\t * @type {Effect[]}\n\t */\n\t#boundary_async_effects = [];\n\n\t/**\n\t * Template effects and `$effect.pre` effects, which run when\n\t * a batch is committed\n\t * @type {Effect[]}\n\t */\n\t#render_effects = [];\n\n\t/**\n\t * The same as `#render_effects`, but for `$effect` (which runs after)\n\t * @type {Effect[]}\n\t */\n\t#effects = [];\n\n\t/**\n\t * Block effects, which may need to re-run on subsequent flushes\n\t * in order to update internal sources (e.g. each block items)\n\t * @type {Effect[]}\n\t */\n\t#block_effects = [];\n\n\t/**\n\t * Deferred effects (which run after async work has completed) that are DIRTY\n\t * @type {Effect[]}\n\t */\n\t#dirty_effects = [];\n\n\t/**\n\t * Deferred effects that are MAYBE_DIRTY\n\t * @type {Effect[]}\n\t */\n\t#maybe_dirty_effects = [];\n\n\t/**\n\t * A set of branches that still exist, but will be destroyed when this batch\n\t * is committed — we skip over these during `process`\n\t * @type {Set<Effect>}\n\t */\n\tskipped_effects = new Set();\n\n\t/**\n\t *\n\t * @param {Effect[]} root_effects\n\t */\n\tprocess(root_effects) {\n\t\tqueued_root_effects = [];\n\n\t\tprevious_batch = null;\n\n\t\t/** @type {Map<Source, { v: unknown, wv: number }> | null} */\n\t\tvar current_values = null;\n\n\t\t// if there are multiple batches, we are 'time travelling' —\n\t\t// we need to undo the changes belonging to any batch\n\t\t// other than the current one\n\t\tif (batches.size > 1) {\n\t\t\tcurrent_values = new Map();\n\t\t\tbatch_deriveds = new Map();\n\n\t\t\tfor (const [source, current] of this.current) {\n\t\t\t\tcurrent_values.set(source, { v: source.v, wv: source.wv });\n\t\t\t\tsource.v = current;\n\t\t\t}\n\n\t\t\tfor (const batch of batches) {\n\t\t\t\tif (batch === this) continue;\n\n\t\t\t\tfor (const [source, previous] of batch.#previous) {\n\t\t\t\t\tif (!current_values.has(source)) {\n\t\t\t\t\t\tcurrent_values.set(source, { v: source.v, wv: source.wv });\n\t\t\t\t\t\tsource.v = previous;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (const root of root_effects) {\n\t\t\tthis.#traverse_effect_tree(root);\n\t\t}\n\n\t\t// if we didn't start any new async work, and no async work\n\t\t// is outstanding from a previous flush, commit\n\t\tif (this.#async_effects.length === 0 && this.#pending === 0) {\n\t\t\tthis.#commit();\n\n\t\t\tvar render_effects = this.#render_effects;\n\t\t\tvar effects = this.#effects;\n\n\t\t\tthis.#render_effects = [];\n\t\t\tthis.#effects = [];\n\t\t\tthis.#block_effects = [];\n\n\t\t\t// If sources are written to, then work needs to happen in a separate batch, else prior sources would be mixed with\n\t\t\t// newly updated sources, which could lead to infinite loops when effects run over and over again.\n\t\t\tprevious_batch = current_batch;\n\t\t\tcurrent_batch = null;\n\n\t\t\tflush_queued_effects(render_effects);\n\t\t\tflush_queued_effects(effects);\n\n\t\t\t// Reinstate the current batch if there was no new one created, as `process()` runs in a loop in `flush_effects()`.\n\t\t\t// That method expects `current_batch` to be set, and could run the loop again if effects result in new effects\n\t\t\t// being scheduled but without writes happening in which case no new batch is created.\n\t\t\tif (current_batch === null) {\n\t\t\t\tcurrent_batch = this;\n\t\t\t} else {\n\t\t\t\tbatches.delete(this);\n\t\t\t}\n\n\t\t\tthis.#deferred?.resolve();\n\t\t} else {\n\t\t\tthis.#defer_effects(this.#render_effects);\n\t\t\tthis.#defer_effects(this.#effects);\n\t\t\tthis.#defer_effects(this.#block_effects);\n\t\t}\n\n\t\tif (current_values) {\n\t\t\tfor (const [source, { v, wv }] of current_values) {\n\t\t\t\t// reset the source to the current value (unless\n\t\t\t\t// it got a newer value as a result of effects running)\n\t\t\t\tif (source.wv <= wv) {\n\t\t\t\t\tsource.v = v;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbatch_deriveds = null;\n\t\t}\n\n\t\tfor (const effect of this.#async_effects) {\n\t\t\tupdate_effect(effect);\n\t\t}\n\n\t\tfor (const effect of this.#boundary_async_effects) {\n\t\t\tupdate_effect(effect);\n\t\t}\n\n\t\tthis.#async_effects = [];\n\t\tthis.#boundary_async_effects = [];\n\t}\n\n\t/**\n\t * Traverse the effect tree, executing effects or stashing\n\t * them for later execution as appropriate\n\t * @param {Effect} root\n\t */\n\t#traverse_effect_tree(root) {\n\t\troot.f ^= CLEAN;\n\n\t\tvar effect = root.first;\n\n\t\twhile (effect !== null) {\n\t\t\tvar flags = effect.f;\n\t\t\tvar is_branch = (flags & (BRANCH_EFFECT | ROOT_EFFECT)) !== 0;\n\t\t\tvar is_skippable_branch = is_branch && (flags & CLEAN) !== 0;\n\n\t\t\tvar skip = is_skippable_branch || (flags & INERT) !== 0 || this.skipped_effects.has(effect);\n\n\t\t\tif (!skip && effect.fn !== null) {\n\t\t\t\tif (is_branch) {\n\t\t\t\t\teffect.f ^= CLEAN;\n\t\t\t\t} else if ((flags & CLEAN) === 0) {\n\t\t\t\t\tif ((flags & EFFECT) !== 0) {\n\t\t\t\t\t\tthis.#effects.push(effect);\n\t\t\t\t\t} else if (async_mode_flag && (flags & RENDER_EFFECT) !== 0) {\n\t\t\t\t\t\tthis.#render_effects.push(effect);\n\t\t\t\t\t} else if ((flags & ASYNC) !== 0) {\n\t\t\t\t\t\tvar effects = effect.b?.pending ? this.#boundary_async_effects : this.#async_effects;\n\t\t\t\t\t\teffects.push(effect);\n\t\t\t\t\t} else if (is_dirty(effect)) {\n\t\t\t\t\t\tif ((effect.f & BLOCK_EFFECT) !== 0) this.#block_effects.push(effect);\n\t\t\t\t\t\tupdate_effect(effect);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar child = effect.first;\n\n\t\t\t\tif (child !== null) {\n\t\t\t\t\teffect = child;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar parent = effect.parent;\n\t\t\teffect = effect.next;\n\n\t\t\twhile (effect === null && parent !== null) {\n\t\t\t\teffect = parent.next;\n\t\t\t\tparent = parent.parent;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {Effect[]} effects\n\t */\n\t#defer_effects(effects) {\n\t\tfor (const e of effects) {\n\t\t\tconst target = (e.f & DIRTY) !== 0 ? this.#dirty_effects : this.#maybe_dirty_effects;\n\t\t\ttarget.push(e);\n\n\t\t\t// mark as clean so they get scheduled if they depend on pending async state\n\t\t\tset_signal_status(e, CLEAN);\n\t\t}\n\n\t\teffects.length = 0;\n\t}\n\n\t/**\n\t * Associate a change to a given source with the current\n\t * batch, noting its previous and current values\n\t * @param {Source} source\n\t * @param {any} value\n\t */\n\tcapture(source, value) {\n\t\tif (!this.#previous.has(source)) {\n\t\t\tthis.#previous.set(source, value);\n\t\t}\n\n\t\tthis.current.set(source, source.v);\n\t}\n\n\tactivate() {\n\t\tcurrent_batch = this;\n\t}\n\n\tdeactivate() {\n\t\tcurrent_batch = null;\n\t\tprevious_batch = null;\n\n\t\tfor (const update of effect_pending_updates) {\n\t\t\teffect_pending_updates.delete(update);\n\t\t\tupdate();\n\n\t\t\tif (current_batch !== null) {\n\t\t\t\t// only do one at a time\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tneuter() {\n\t\tthis.#neutered = true;\n\t}\n\n\tflush() {\n\t\tif (queued_root_effects.length > 0) {\n\t\t\tflush_effects();\n\t\t} else {\n\t\t\tthis.#commit();\n\t\t}\n\n\t\tif (current_batch !== this) {\n\t\t\t// this can happen if a `flushSync` occurred during `flush_effects()`,\n\t\t\t// which is permitted in legacy mode despite being a terrible idea\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.#pending === 0) {\n\t\t\tbatches.delete(this);\n\t\t}\n\n\t\tthis.deactivate();\n\t}\n\n\t/**\n\t * Append and remove branches to/from the DOM\n\t */\n\t#commit() {\n\t\tif (!this.#neutered) {\n\t\t\tfor (const fn of this.#callbacks) {\n\t\t\t\tfn();\n\t\t\t}\n\t\t}\n\n\t\tthis.#callbacks.clear();\n\t}\n\n\tincrement() {\n\t\tthis.#pending += 1;\n\t}\n\n\tdecrement() {\n\t\tthis.#pending -= 1;\n\n\t\tif (this.#pending === 0) {\n\t\t\tfor (const e of this.#dirty_effects) {\n\t\t\t\tset_signal_status(e, DIRTY);\n\t\t\t\tschedule_effect(e);\n\t\t\t}\n\n\t\t\tfor (const e of this.#maybe_dirty_effects) {\n\t\t\t\tset_signal_status(e, MAYBE_DIRTY);\n\t\t\t\tschedule_effect(e);\n\t\t\t}\n\n\t\t\tthis.#render_effects = [];\n\t\t\tthis.#effects = [];\n\n\t\t\tthis.flush();\n\t\t} else {\n\t\t\tthis.deactivate();\n\t\t}\n\t}\n\n\t/** @param {() => void} fn */\n\tadd_callback(fn) {\n\t\tthis.#callbacks.add(fn);\n\t}\n\n\tsettled() {\n\t\treturn (this.#deferred ??= deferred()).promise;\n\t}\n\n\tstatic ensure() {\n\t\tif (current_batch === null) {\n\t\t\tconst batch = (current_batch = new Batch());\n\t\t\tbatches.add(current_batch);\n\n\t\t\tif (!is_flushing_sync) {\n\t\t\t\tBatch.enqueue(() => {\n\t\t\t\t\tif (current_batch !== batch) {\n\t\t\t\t\t\t// a flushSync happened in the meantime\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tbatch.flush();\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn current_batch;\n\t}\n\n\t/** @param {() => void} task */\n\tstatic enqueue(task) {\n\t\tif (tasks.length === 0) {\n\t\t\tqueueMicrotask(dequeue);\n\t\t}\n\n\t\ttasks.unshift(task);\n\t}\n}\n\n/**\n * Synchronously flush any pending updates.\n * Returns void if no callback is provided, otherwise returns the result of calling the callback.\n * @template [T=void]\n * @param {(() => T) | undefined} [fn]\n * @returns {T}\n */\nexport function flushSync(fn) {\n\tif (async_mode_flag && active_effect !== null) {\n\t\te.flush_sync_in_effect();\n\t}\n\n\tvar was_flushing_sync = is_flushing_sync;\n\tis_flushing_sync = true;\n\n\ttry {\n\t\tvar result;\n\n\t\tif (fn) {\n\t\t\tflush_effects();\n\t\t\tresult = fn();\n\t\t}\n\n\t\twhile (true) {\n\t\t\tflush_tasks();\n\n\t\t\tif (queued_root_effects.length === 0) {\n\t\t\t\tcurrent_batch?.flush();\n\n\t\t\t\t// we need to check again, in case we just updated an `$effect.pending()`\n\t\t\t\tif (queued_root_effects.length === 0) {\n\t\t\t\t\t// this would be reset in `flush_effects()` but since we are early returning here,\n\t\t\t\t\t// we need to reset it here as well in case the first time there's 0 queued root effects\n\t\t\t\t\tlast_scheduled_effect = null;\n\n\t\t\t\t\treturn /** @type {T} */ (result);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tflush_effects();\n\t\t}\n\t} finally {\n\t\tis_flushing_sync = was_flushing_sync;\n\t}\n}\n\nfunction flush_effects() {\n\tvar was_updating_effect = is_updating_effect;\n\tis_flushing = true;\n\n\ttry {\n\t\tvar flush_count = 0;\n\t\tset_is_updating_effect(true);\n\n\t\twhile (queued_root_effects.length > 0) {\n\t\t\tvar batch = Batch.ensure();\n\n\t\t\tif (flush_count++ > 1000) {\n\t\t\t\tif (DEV) {\n\t\t\t\t\tvar updates = new Map();\n\n\t\t\t\t\tfor (const source of batch.current.keys()) {\n\t\t\t\t\t\tfor (const [stack, update] of source.updated ?? []) {\n\t\t\t\t\t\t\tvar entry = updates.get(stack);\n\n\t\t\t\t\t\t\tif (!entry) {\n\t\t\t\t\t\t\t\tentry = { error: update.error, count: 0 };\n\t\t\t\t\t\t\t\tupdates.set(stack, entry);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tentry.count += update.count;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (const update of updates.values()) {\n\t\t\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\t\t\tconsole.error(update.error);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tinfinite_loop_guard();\n\t\t\t}\n\n\t\t\tbatch.process(queued_root_effects);\n\t\t\told_values.clear();\n\t\t}\n\t} finally {\n\t\tis_flushing = false;\n\t\tset_is_updating_effect(was_updating_effect);\n\n\t\tlast_scheduled_effect = null;\n\t}\n}\n\nfunction infinite_loop_guard() {\n\ttry {\n\t\te.effect_update_depth_exceeded();\n\t} catch (error) {\n\t\tif (DEV) {\n\t\t\t// stack contains no useful information, replace it\n\t\t\tdefine_property(error, 'stack', { value: '' });\n\t\t}\n\n\t\t// Best effort: invoke the boundary nearest the most recent\n\t\t// effect and hope that it's relevant to the infinite loop\n\t\tinvoke_error_boundary(error, last_scheduled_effect);\n\t}\n}\n\n/**\n * @param {Array<Effect>} effects\n * @returns {void}\n */\nfunction flush_queued_effects(effects) {\n\tvar length = effects.length;\n\tif (length === 0) return;\n\n\tvar i = 0;\n\n\twhile (i < length) {\n\t\tvar effect = effects[i++];\n\n\t\tif ((effect.f & (DESTROYED | INERT)) === 0 && is_dirty(effect)) {\n\t\t\tvar n = current_batch ? current_batch.current.size : 0;\n\n\t\t\tupdate_effect(effect);\n\n\t\t\t// Effects with no dependencies or teardown do not get added to the effect tree.\n\t\t\t// Deferred effects (e.g. `$effect(...)`) _are_ added to the tree because we\n\t\t\t// don't know if we need to keep them until they are executed. Doing the check\n\t\t\t// here (rather than in `update_effect`) allows us to skip the work for\n\t\t\t// immediate effects.\n\t\t\tif (effect.deps === null && effect.first === null && effect.nodes_start === null) {\n\t\t\t\t// if there's no teardown or abort controller we completely unlink\n\t\t\t\t// the effect from the graph\n\t\t\t\tif (effect.teardown === null && effect.ac === null) {\n\t\t\t\t\t// remove this effect from the graph\n\t\t\t\t\tunlink_effect(effect);\n\t\t\t\t} else {\n\t\t\t\t\t// keep the effect in the graph, but free up some memory\n\t\t\t\t\teffect.fn = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// if state is written in a user effect, abort and re-schedule, lest we run\n\t\t\t// effects that should be removed as a result of the state change\n\t\t\tif (\n\t\t\t\tcurrent_batch !== null &&\n\t\t\t\tcurrent_batch.current.size > n &&\n\t\t\t\t(effect.f & USER_EFFECT) !== 0\n\t\t\t) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\twhile (i < length) {\n\t\tschedule_effect(effects[i++]);\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @returns {void}\n */\nexport function schedule_effect(signal) {\n\tvar effect = (last_scheduled_effect = signal);\n\n\twhile (effect.parent !== null) {\n\t\teffect = effect.parent;\n\t\tvar flags = effect.f;\n\n\t\t// if the effect is being scheduled because a parent (each/await/etc) block\n\t\t// updated an internal source, bail out or we'll cause a second flush\n\t\tif (is_flushing && effect === active_effect && (flags & BLOCK_EFFECT) !== 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ((flags & (ROOT_EFFECT | BRANCH_EFFECT)) !== 0) {\n\t\t\tif ((flags & CLEAN) === 0) return;\n\t\t\teffect.f ^= CLEAN;\n\t\t}\n\t}\n\n\tqueued_root_effects.push(effect);\n}\n\nexport function suspend() {\n\tvar boundary = get_pending_boundary();\n\tvar batch = /** @type {Batch} */ (current_batch);\n\tvar pending = boundary.pending;\n\n\tboundary.update_pending_count(1);\n\tif (!pending) batch.increment();\n\n\treturn function unsuspend() {\n\t\tboundary.update_pending_count(-1);\n\n\t\tif (!pending) {\n\t\t\tbatch.activate();\n\t\t\tbatch.decrement();\n\t\t}\n\n\t\tunset_context();\n\t};\n}\n\n/**\n * Forcibly remove all current batches, to prevent cross-talk between tests\n */\nexport function clear() {\n\tbatches.clear();\n}\n","/** @import { Derived, Effect, Source, Value } from '#client' */\nimport { DEV } from 'esm-env';\nimport {\n\tactive_reaction,\n\tactive_effect,\n\tuntracked_writes,\n\tget,\n\tset_untracked_writes,\n\tset_signal_status,\n\tuntrack,\n\tincrement_write_version,\n\tupdate_effect,\n\tcurrent_sources,\n\tis_dirty,\n\tuntracking,\n\tis_destroying_effect,\n\tpush_reaction_value\n} from '../runtime.js';\nimport { equals, safe_equals } from './equality.js';\nimport {\n\tCLEAN,\n\tDERIVED,\n\tDIRTY,\n\tBRANCH_EFFECT,\n\tINSPECT_EFFECT,\n\tUNOWNED,\n\tMAYBE_DIRTY,\n\tBLOCK_EFFECT,\n\tROOT_EFFECT,\n\tASYNC\n} from '#client/constants';\nimport * as e from '../errors.js';\nimport { legacy_mode_flag, tracing_mode_flag } from '../../flags/index.js';\nimport { get_stack, tag_proxy } from '../dev/tracing.js';\nimport { component_context, is_runes } from '../context.js';\nimport { Batch, schedule_effect } from './batch.js';\nimport { proxy } from '../proxy.js';\nimport { execute_derived } from './deriveds.js';\n\nexport let inspect_effects = new Set();\n\n/** @type {Map<Source, any>} */\nexport const old_values = new Map();\n\n/**\n * @param {Set<any>} v\n */\nexport function set_inspect_effects(v) {\n\tinspect_effects = v;\n}\n\nlet inspect_effects_deferred = false;\n\nexport function set_inspect_effects_deferred() {\n\tinspect_effects_deferred = true;\n}\n\n/**\n * @template V\n * @param {V} v\n * @param {Error | null} [stack]\n * @returns {Source<V>}\n */\n// TODO rename this to `state` throughout the codebase\nexport function source(v, stack) {\n\t/** @type {Value} */\n\tvar signal = {\n\t\tf: 0, // TODO ideally we could skip this altogether, but it causes type errors\n\t\tv,\n\t\treactions: null,\n\t\tequals,\n\t\trv: 0,\n\t\twv: 0\n\t};\n\n\tif (DEV && tracing_mode_flag) {\n\t\tsignal.created = stack ?? get_stack('CreatedAt');\n\t\tsignal.updated = null;\n\t\tsignal.set_during_effect = false;\n\t\tsignal.trace = null;\n\t}\n\n\treturn signal;\n}\n\n/**\n * @template V\n * @param {V} v\n * @param {Error | null} [stack]\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function state(v, stack) {\n\tconst s = source(v, stack);\n\n\tpush_reaction_value(s);\n\n\treturn s;\n}\n\n/**\n * @template V\n * @param {V} initial_value\n * @param {boolean} [immutable]\n * @returns {Source<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function mutable_source(initial_value, immutable = false, trackable = true) {\n\tconst s = source(initial_value);\n\tif (!immutable) {\n\t\ts.equals = safe_equals;\n\t}\n\n\t// bind the signal to the component context, in case we need to\n\t// track updates to trigger beforeUpdate/afterUpdate callbacks\n\tif (legacy_mode_flag && trackable && component_context !== null && component_context.l !== null) {\n\t\t(component_context.l.s ??= []).push(s);\n\t}\n\n\treturn s;\n}\n\n/**\n * @template V\n * @param {Value<V>} source\n * @param {V} value\n */\nexport function mutate(source, value) {\n\tset(\n\t\tsource,\n\t\tuntrack(() => get(source))\n\t);\n\treturn value;\n}\n\n/**\n * @template V\n * @param {Source<V>} source\n * @param {V} value\n * @param {boolean} [should_proxy]\n * @returns {V}\n */\nexport function set(source, value, should_proxy = false) {\n\tif (\n\t\tactive_reaction !== null &&\n\t\t// since we are untracking the function inside `$inspect.with` we need to add this check\n\t\t// to ensure we error if state is set inside an inspect effect\n\t\t(!untracking || (active_reaction.f & INSPECT_EFFECT) !== 0) &&\n\t\tis_runes() &&\n\t\t(active_reaction.f & (DERIVED | BLOCK_EFFECT | ASYNC | INSPECT_EFFECT)) !== 0 &&\n\t\t!current_sources?.includes(source)\n\t) {\n\t\te.state_unsafe_mutation();\n\t}\n\n\tlet new_value = should_proxy ? proxy(value) : value;\n\n\tif (DEV) {\n\t\ttag_proxy(new_value, /** @type {string} */ (source.label));\n\t}\n\n\treturn internal_set(source, new_value);\n}\n\n/**\n * @template V\n * @param {Source<V>} source\n * @param {V} value\n * @returns {V}\n */\nexport function internal_set(source, value) {\n\tif (!source.equals(value)) {\n\t\tvar old_value = source.v;\n\n\t\tif (is_destroying_effect) {\n\t\t\told_values.set(source, value);\n\t\t} else {\n\t\t\told_values.set(source, old_value);\n\t\t}\n\n\t\tsource.v = value;\n\n\t\tvar batch = Batch.ensure();\n\t\tbatch.capture(source, old_value);\n\n\t\tif (DEV) {\n\t\t\tif (tracing_mode_flag || active_effect !== null) {\n\t\t\t\tconst error = get_stack('UpdatedAt');\n\n\t\t\t\tif (error !== null) {\n\t\t\t\t\tsource.updated ??= new Map();\n\t\t\t\t\tlet entry = source.updated.get(error.stack);\n\n\t\t\t\t\tif (!entry) {\n\t\t\t\t\t\tentry = { error, count: 0 };\n\t\t\t\t\t\tsource.updated.set(error.stack, entry);\n\t\t\t\t\t}\n\n\t\t\t\t\tentry.count++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (active_effect !== null) {\n\t\t\t\tsource.set_during_effect = true;\n\t\t\t}\n\t\t}\n\n\t\tif ((source.f & DERIVED) !== 0) {\n\t\t\t// if we are assigning to a dirty derived we set it to clean/maybe dirty but we also eagerly execute it to track the dependencies\n\t\t\tif ((source.f & DIRTY) !== 0) {\n\t\t\t\texecute_derived(/** @type {Derived} */ (source));\n\t\t\t}\n\t\t\tset_signal_status(source, (source.f & UNOWNED) === 0 ? CLEAN : MAYBE_DIRTY);\n\t\t}\n\n\t\tsource.wv = increment_write_version();\n\n\t\tmark_reactions(source, DIRTY);\n\n\t\t// It's possible that the current reaction might not have up-to-date dependencies\n\t\t// whilst it's actively running. So in the case of ensuring it registers the reaction\n\t\t// properly for itself, we need to ensure the current effect actually gets\n\t\t// scheduled. i.e: `$effect(() => x++)`\n\t\tif (\n\t\t\tis_runes() &&\n\t\t\tactive_effect !== null &&\n\t\t\t(active_effect.f & CLEAN) !== 0 &&\n\t\t\t(active_effect.f & (BRANCH_EFFECT | ROOT_EFFECT)) === 0\n\t\t) {\n\t\t\tif (untracked_writes === null) {\n\t\t\t\tset_untracked_writes([source]);\n\t\t\t} else {\n\t\t\t\tuntracked_writes.push(source);\n\t\t\t}\n\t\t}\n\n\t\tif (DEV && inspect_effects.size > 0 && !inspect_effects_deferred) {\n\t\t\tflush_inspect_effects();\n\t\t}\n\t}\n\n\treturn value;\n}\n\nexport function flush_inspect_effects() {\n\tinspect_effects_deferred = false;\n\n\tconst inspects = Array.from(inspect_effects);\n\n\tfor (const effect of inspects) {\n\t\t// Mark clean inspect-effects as maybe dirty and then check their dirtiness\n\t\t// instead of just updating the effects - this way we avoid overfiring.\n\t\tif ((effect.f & CLEAN) !== 0) {\n\t\t\tset_signal_status(effect, MAYBE_DIRTY);\n\t\t}\n\n\t\tif (is_dirty(effect)) {\n\t\t\tupdate_effect(effect);\n\t\t}\n\t}\n\n\tinspect_effects.clear();\n}\n\n/**\n * @template {number | bigint} T\n * @param {Source<T>} source\n * @param {1 | -1} [d]\n * @returns {T}\n */\nexport function update(source, d = 1) {\n\tvar value = get(source);\n\tvar result = d === 1 ? value++ : value--;\n\n\tset(source, value);\n\n\t// @ts-expect-error\n\treturn result;\n}\n\n/**\n * @template {number | bigint} T\n * @param {Source<T>} source\n * @param {1 | -1} [d]\n * @returns {T}\n */\nexport function update_pre(source, d = 1) {\n\tvar value = get(source);\n\n\t// @ts-expect-error\n\treturn set(source, d === 1 ? ++value : --value);\n}\n\n/**\n * Silently (without using `get`) increment a source\n * @param {Source<number>} source\n */\nexport function increment(source) {\n\tset(source, source.v + 1);\n}\n\n/**\n * @param {Value} signal\n * @param {number} status should be DIRTY or MAYBE_DIRTY\n * @returns {void}\n */\nfunction mark_reactions(signal, status) {\n\tvar reactions = signal.reactions;\n\tif (reactions === null) return;\n\n\tvar runes = is_runes();\n\tvar length = reactions.length;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tvar reaction = reactions[i];\n\t\tvar flags = reaction.f;\n\n\t\t// In legacy mode, skip the current effect to prevent infinite loops\n\t\tif (!runes && reaction === active_effect) continue;\n\n\t\t// Inspect effects need to run immediately, so that the stack trace makes sense\n\t\tif (DEV && (flags & INSPECT_EFFECT) !== 0) {\n\t\t\tinspect_effects.add(reaction);\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar not_dirty = (flags & DIRTY) === 0;\n\n\t\t// don't set a DIRTY reaction to MAYBE_DIRTY\n\t\tif (not_dirty) {\n\t\t\tset_signal_status(reaction, status);\n\t\t}\n\n\t\tif ((flags & DERIVED) !== 0) {\n\t\t\tmark_reactions(/** @type {Derived} */ (reaction), MAYBE_DIRTY);\n\t\t} else if (not_dirty) {\n\t\t\tschedule_effect(/** @type {Effect} */ (reaction));\n\t\t}\n\t}\n}\n","/** @import { Derived, Effect, Reaction, Signal, Source, Value } from '#client' */\nimport { DEV } from 'esm-env';\nimport { get_descriptors, get_prototype_of, index_of } from '../shared/utils.js';\nimport {\n\tdestroy_block_effect_children,\n\tdestroy_effect_children,\n\texecute_effect_teardown\n} from './reactivity/effects.js';\nimport {\n\tDIRTY,\n\tMAYBE_DIRTY,\n\tCLEAN,\n\tDERIVED,\n\tUNOWNED,\n\tDESTROYED,\n\tBRANCH_EFFECT,\n\tSTATE_SYMBOL,\n\tBLOCK_EFFECT,\n\tROOT_EFFECT,\n\tDISCONNECTED,\n\tREACTION_IS_UPDATING,\n\tSTALE_REACTION,\n\tERROR_VALUE\n} from './constants.js';\nimport { old_values } from './reactivity/sources.js';\nimport {\n\tdestroy_derived_effects,\n\texecute_derived,\n\tcurrent_async_effect,\n\trecent_async_deriveds,\n\tupdate_derived\n} from './reactivity/deriveds.js';\nimport { async_mode_flag, tracing_mode_flag } from '../flags/index.js';\nimport { tracing_expressions, get_stack } from './dev/tracing.js';\nimport {\n\tcomponent_context,\n\tdev_current_component_function,\n\tdev_stack,\n\tis_runes,\n\tset_component_context,\n\tset_dev_current_component_function,\n\tset_dev_stack\n} from './context.js';\nimport * as w from './warnings.js';\nimport { Batch, batch_deriveds, flushSync, schedule_effect } from './reactivity/batch.js';\nimport { handle_error } from './error-handling.js';\nimport { UNINITIALIZED } from '../../constants.js';\nimport { captured_signals } from './legacy.js';\n\nexport let is_updating_effect = false;\n\n/** @param {boolean} value */\nexport function set_is_updating_effect(value) {\n\tis_updating_effect = value;\n}\n\nexport let is_destroying_effect = false;\n\n/** @param {boolean} value */\nexport function set_is_destroying_effect(value) {\n\tis_destroying_effect = value;\n}\n\n/** @type {null | Reaction} */\nexport let active_reaction = null;\n\nexport let untracking = false;\n\n/** @param {null | Reaction} reaction */\nexport function set_active_reaction(reaction) {\n\tactive_reaction = reaction;\n}\n\n/** @type {null | Effect} */\nexport let active_effect = null;\n\n/** @param {null | Effect} effect */\nexport function set_active_effect(effect) {\n\tactive_effect = effect;\n}\n\n/**\n * When sources are created within a reaction, reading and writing\n * them within that reaction should not cause a re-run\n * @type {null | Source[]}\n */\nexport let current_sources = null;\n\n/** @param {Value} value */\nexport function push_reaction_value(value) {\n\tif (active_reaction !== null && (!async_mode_flag || (active_reaction.f & DERIVED) !== 0)) {\n\t\tif (current_sources === null) {\n\t\t\tcurrent_sources = [value];\n\t\t} else {\n\t\t\tcurrent_sources.push(value);\n\t\t}\n\t}\n}\n\n/**\n * The dependencies of the reaction that is currently being executed. In many cases,\n * the dependencies are unchanged between runs, and so this will be `null` unless\n * and until a new dependency is accessed — we track this via `skipped_deps`\n * @type {null | Value[]}\n */\nlet new_deps = null;\n\nlet skipped_deps = 0;\n\n/**\n * Tracks writes that the effect it's executed in doesn't listen to yet,\n * so that the dependency can be added to the effect later on if it then reads it\n * @type {null | Source[]}\n */\nexport let untracked_writes = null;\n\n/** @param {null | Source[]} value */\nexport function set_untracked_writes(value) {\n\tuntracked_writes = value;\n}\n\n/**\n * @type {number} Used by sources and deriveds for handling updates.\n * Version starts from 1 so that unowned deriveds differentiate between a created effect and a run one for tracing\n **/\nexport let write_version = 1;\n\n/** @type {number} Used to version each read of a source of derived to avoid duplicating depedencies inside a reaction */\nlet read_version = 0;\n\nexport let update_version = read_version;\n\n/** @param {number} value */\nexport function set_update_version(value) {\n\tupdate_version = value;\n}\n\n// If we are working with a get() chain that has no active container,\n// to prevent memory leaks, we skip adding the reaction.\nexport let skip_reaction = false;\n\nexport function increment_write_version() {\n\treturn ++write_version;\n}\n\n/**\n * Determines whether a derived or effect is dirty.\n * If it is MAYBE_DIRTY, will set the status to CLEAN\n * @param {Reaction} reaction\n * @returns {boolean}\n */\nexport function is_dirty(reaction) {\n\tvar flags = reaction.f;\n\n\tif ((flags & DIRTY) !== 0) {\n\t\treturn true;\n\t}\n\n\tif ((flags & MAYBE_DIRTY) !== 0) {\n\t\tvar dependencies = reaction.deps;\n\t\tvar is_unowned = (flags & UNOWNED) !== 0;\n\n\t\tif (dependencies !== null) {\n\t\t\tvar i;\n\t\t\tvar dependency;\n\t\t\tvar is_disconnected = (flags & DISCONNECTED) !== 0;\n\t\t\tvar is_unowned_connected = is_unowned && active_effect !== null && !skip_reaction;\n\t\t\tvar length = dependencies.length;\n\n\t\t\t// If we are working with a disconnected or an unowned signal that is now connected (due to an active effect)\n\t\t\t// then we need to re-connect the reaction to the dependency, unless the effect has already been destroyed\n\t\t\t// (which can happen if the derived is read by an async derived)\n\t\t\tif (\n\t\t\t\t(is_disconnected || is_unowned_connected) &&\n\t\t\t\t(active_effect === null || (active_effect.f & DESTROYED) === 0)\n\t\t\t) {\n\t\t\t\tvar derived = /** @type {Derived} */ (reaction);\n\t\t\t\tvar parent = derived.parent;\n\n\t\t\t\tfor (i = 0; i < length; i++) {\n\t\t\t\t\tdependency = dependencies[i];\n\n\t\t\t\t\t// We always re-add all reactions (even duplicates) if the derived was\n\t\t\t\t\t// previously disconnected, however we don't if it was unowned as we\n\t\t\t\t\t// de-duplicate dependencies in that case\n\t\t\t\t\tif (is_disconnected || !dependency?.reactions?.includes(derived)) {\n\t\t\t\t\t\t(dependency.reactions ??= []).push(derived);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (is_disconnected) {\n\t\t\t\t\tderived.f ^= DISCONNECTED;\n\t\t\t\t}\n\t\t\t\t// If the unowned derived is now fully connected to the graph again (it's unowned and reconnected, has a parent\n\t\t\t\t// and the parent is not unowned), then we can mark it as connected again, removing the need for the unowned\n\t\t\t\t// flag\n\t\t\t\tif (is_unowned_connected && parent !== null && (parent.f & UNOWNED) === 0) {\n\t\t\t\t\tderived.f ^= UNOWNED;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (i = 0; i < length; i++) {\n\t\t\t\tdependency = dependencies[i];\n\n\t\t\t\tif (is_dirty(/** @type {Derived} */ (dependency))) {\n\t\t\t\t\tupdate_derived(/** @type {Derived} */ (dependency));\n\t\t\t\t}\n\n\t\t\t\tif (dependency.wv > reaction.wv) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Unowned signals should never be marked as clean unless they\n\t\t// are used within an active_effect without skip_reaction\n\t\tif (!is_unowned || (active_effect !== null && !skip_reaction)) {\n\t\t\tset_signal_status(reaction, CLEAN);\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/**\n * @param {Value} signal\n * @param {Effect} effect\n * @param {boolean} [root]\n */\nfunction schedule_possible_effect_self_invalidation(signal, effect, root = true) {\n\tvar reactions = signal.reactions;\n\tif (reactions === null) return;\n\n\tif (!async_mode_flag && current_sources?.includes(signal)) {\n\t\treturn;\n\t}\n\n\tfor (var i = 0; i < reactions.length; i++) {\n\t\tvar reaction = reactions[i];\n\n\t\tif ((reaction.f & DERIVED) !== 0) {\n\t\t\tschedule_possible_effect_self_invalidation(/** @type {Derived} */ (reaction), effect, false);\n\t\t} else if (effect === reaction) {\n\t\t\tif (root) {\n\t\t\t\tset_signal_status(reaction, DIRTY);\n\t\t\t} else if ((reaction.f & CLEAN) !== 0) {\n\t\t\t\tset_signal_status(reaction, MAYBE_DIRTY);\n\t\t\t}\n\t\t\tschedule_effect(/** @type {Effect} */ (reaction));\n\t\t}\n\t}\n}\n\n/** @param {Reaction} reaction */\nexport function update_reaction(reaction) {\n\tvar previous_deps = new_deps;\n\tvar previous_skipped_deps = skipped_deps;\n\tvar previous_untracked_writes = untracked_writes;\n\tvar previous_reaction = active_reaction;\n\tvar previous_skip_reaction = skip_reaction;\n\tvar previous_sources = current_sources;\n\tvar previous_component_context = component_context;\n\tvar previous_untracking = untracking;\n\tvar previous_update_version = update_version;\n\n\tvar flags = reaction.f;\n\n\tnew_deps = /** @type {null | Value[]} */ (null);\n\tskipped_deps = 0;\n\tuntracked_writes = null;\n\tskip_reaction =\n\t\t(flags & UNOWNED) !== 0 && (untracking || !is_updating_effect || active_reaction === null);\n\tactive_reaction = (flags & (BRANCH_EFFECT | ROOT_EFFECT)) === 0 ? reaction : null;\n\n\tcurrent_sources = null;\n\tset_component_context(reaction.ctx);\n\tuntracking = false;\n\tupdate_version = ++read_version;\n\n\tif (reaction.ac !== null) {\n\t\treaction.ac.abort(STALE_REACTION);\n\t\treaction.ac = null;\n\t}\n\n\ttry {\n\t\treaction.f |= REACTION_IS_UPDATING;\n\t\tvar result = /** @type {Function} */ (0, reaction.fn)();\n\t\tvar deps = reaction.deps;\n\n\t\tif (new_deps !== null) {\n\t\t\tvar i;\n\n\t\t\tremove_reactions(reaction, skipped_deps);\n\n\t\t\tif (deps !== null && skipped_deps > 0) {\n\t\t\t\tdeps.length = skipped_deps + new_deps.length;\n\t\t\t\tfor (i = 0; i < new_deps.length; i++) {\n\t\t\t\t\tdeps[skipped_deps + i] = new_deps[i];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treaction.deps = deps = new_deps;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\t!skip_reaction ||\n\t\t\t\t// Deriveds that already have reactions can cleanup, so we still add them as reactions\n\t\t\t\t((flags & DERIVED) !== 0 &&\n\t\t\t\t\t/** @type {import('#client').Derived} */ (reaction).reactions !== null)\n\t\t\t) {\n\t\t\t\tfor (i = skipped_deps; i < deps.length; i++) {\n\t\t\t\t\t(deps[i].reactions ??= []).push(reaction);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (deps !== null && skipped_deps < deps.length) {\n\t\t\tremove_reactions(reaction, skipped_deps);\n\t\t\tdeps.length = skipped_deps;\n\t\t}\n\n\t\t// If we're inside an effect and we have untracked writes, then we need to\n\t\t// ensure that if any of those untracked writes result in re-invalidation\n\t\t// of the current effect, then that happens accordingly\n\t\tif (\n\t\t\tis_runes() &&\n\t\t\tuntracked_writes !== null &&\n\t\t\t!untracking &&\n\t\t\tdeps !== null &&\n\t\t\t(reaction.f & (DERIVED | MAYBE_DIRTY | DIRTY)) === 0\n\t\t) {\n\t\t\tfor (i = 0; i < /** @type {Source[]} */ (untracked_writes).length; i++) {\n\t\t\t\tschedule_possible_effect_self_invalidation(\n\t\t\t\t\tuntracked_writes[i],\n\t\t\t\t\t/** @type {Effect} */ (reaction)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t// If we are returning to an previous reaction then\n\t\t// we need to increment the read version to ensure that\n\t\t// any dependencies in this reaction aren't marked with\n\t\t// the same version\n\t\tif (previous_reaction !== null && previous_reaction !== reaction) {\n\t\t\tread_version++;\n\n\t\t\tif (untracked_writes !== null) {\n\t\t\t\tif (previous_untracked_writes === null) {\n\t\t\t\t\tprevious_untracked_writes = untracked_writes;\n\t\t\t\t} else {\n\t\t\t\t\tprevious_untracked_writes.push(.../** @type {Source[]} */ (untracked_writes));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ((reaction.f & ERROR_VALUE) !== 0) {\n\t\t\treaction.f ^= ERROR_VALUE;\n\t\t}\n\n\t\treturn result;\n\t} catch (error) {\n\t\treturn handle_error(error);\n\t} finally {\n\t\treaction.f ^= REACTION_IS_UPDATING;\n\t\tnew_deps = previous_deps;\n\t\tskipped_deps = previous_skipped_deps;\n\t\tuntracked_writes = previous_untracked_writes;\n\t\tactive_reaction = previous_reaction;\n\t\tskip_reaction = previous_skip_reaction;\n\t\tcurrent_sources = previous_sources;\n\t\tset_component_context(previous_component_context);\n\t\tuntracking = previous_untracking;\n\t\tupdate_version = previous_update_version;\n\t}\n}\n\n/**\n * @template V\n * @param {Reaction} signal\n * @param {Value<V>} dependency\n * @returns {void}\n */\nfunction remove_reaction(signal, dependency) {\n\tlet reactions = dependency.reactions;\n\tif (reactions !== null) {\n\t\tvar index = index_of.call(reactions, signal);\n\t\tif (index !== -1) {\n\t\t\tvar new_length = reactions.length - 1;\n\t\t\tif (new_length === 0) {\n\t\t\t\treactions = dependency.reactions = null;\n\t\t\t} else {\n\t\t\t\t// Swap with last element and then remove.\n\t\t\t\treactions[index] = reactions[new_length];\n\t\t\t\treactions.pop();\n\t\t\t}\n\t\t}\n\t}\n\n\t// If the derived has no reactions, then we can disconnect it from the graph,\n\t// allowing it to either reconnect in the future, or be GC'd by the VM.\n\tif (\n\t\treactions === null &&\n\t\t(dependency.f & DERIVED) !== 0 &&\n\t\t// Destroying a child effect while updating a parent effect can cause a dependency to appear\n\t\t// to be unused, when in fact it is used by the currently-updating parent. Checking `new_deps`\n\t\t// allows us to skip the expensive work of disconnecting and immediately reconnecting it\n\t\t(new_deps === null || !new_deps.includes(dependency))\n\t) {\n\t\tset_signal_status(dependency, MAYBE_DIRTY);\n\t\t// If we are working with a derived that is owned by an effect, then mark it as being\n\t\t// disconnected.\n\t\tif ((dependency.f & (UNOWNED | DISCONNECTED)) === 0) {\n\t\t\tdependency.f ^= DISCONNECTED;\n\t\t}\n\t\t// Disconnect any reactions owned by this reaction\n\t\tdestroy_derived_effects(/** @type {Derived} **/ (dependency));\n\t\tremove_reactions(/** @type {Derived} **/ (dependency), 0);\n\t}\n}\n\n/**\n * @param {Reaction} signal\n * @param {number} start_index\n * @returns {void}\n */\nexport function remove_reactions(signal, start_index) {\n\tvar dependencies = signal.deps;\n\tif (dependencies === null) return;\n\n\tfor (var i = start_index; i < dependencies.length; i++) {\n\t\tremove_reaction(signal, dependencies[i]);\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @returns {void}\n */\nexport function update_effect(effect) {\n\tvar flags = effect.f;\n\n\tif ((flags & DESTROYED) !== 0) {\n\t\treturn;\n\t}\n\n\tset_signal_status(effect, CLEAN);\n\n\tvar previous_effect = active_effect;\n\tvar was_updating_effect = is_updating_effect;\n\n\tactive_effect = effect;\n\tis_updating_effect = true;\n\n\tif (DEV) {\n\t\tvar previous_component_fn = dev_current_component_function;\n\t\tset_dev_current_component_function(effect.component_function);\n\t\tvar previous_stack = /** @type {any} */ (dev_stack);\n\t\t// only block effects have a dev stack, keep the current one otherwise\n\t\tset_dev_stack(effect.dev_stack ?? dev_stack);\n\t}\n\n\ttry {\n\t\tif ((flags & BLOCK_EFFECT) !== 0) {\n\t\t\tdestroy_block_effect_children(effect);\n\t\t} else {\n\t\t\tdestroy_effect_children(effect);\n\t\t}\n\n\t\texecute_effect_teardown(effect);\n\t\tvar teardown = update_reaction(effect);\n\t\teffect.teardown = typeof teardown === 'function' ? teardown : null;\n\t\teffect.wv = write_version;\n\n\t\t// In DEV, increment versions of any sources that were written to during the effect,\n\t\t// so that they are correctly marked as dirty when the effect re-runs\n\t\tif (DEV && tracing_mode_flag && (effect.f & DIRTY) !== 0 && effect.deps !== null) {\n\t\t\tfor (var dep of effect.deps) {\n\t\t\t\tif (dep.set_during_effect) {\n\t\t\t\t\tdep.wv = increment_write_version();\n\t\t\t\t\tdep.set_during_effect = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} finally {\n\t\tis_updating_effect = was_updating_effect;\n\t\tactive_effect = previous_effect;\n\n\t\tif (DEV) {\n\t\t\tset_dev_current_component_function(previous_component_fn);\n\t\t\tset_dev_stack(previous_stack);\n\t\t}\n\t}\n}\n\n/**\n * Returns a promise that resolves once any pending state changes have been applied.\n * @returns {Promise<void>}\n */\nexport async function tick() {\n\tif (async_mode_flag) {\n\t\treturn new Promise((f) => requestAnimationFrame(() => f()));\n\t}\n\n\tawait Promise.resolve();\n\n\t// By calling flushSync we guarantee that any pending state changes are applied after one tick.\n\t// TODO look into whether we can make flushing subsequent updates synchronously in the future.\n\tflushSync();\n}\n\n/**\n * Returns a promise that resolves once any state changes, and asynchronous work resulting from them,\n * have resolved and the DOM has been updated\n * @returns {Promise<void>}\n * @since 5.36\n */\nexport function settled() {\n\treturn Batch.ensure().settled();\n}\n\n/**\n * @template V\n * @param {Value<V>} signal\n * @returns {V}\n */\nexport function get(signal) {\n\tvar flags = signal.f;\n\tvar is_derived = (flags & DERIVED) !== 0;\n\n\tcaptured_signals?.add(signal);\n\n\t// Register the dependency on the current reaction signal.\n\tif (active_reaction !== null && !untracking) {\n\t\t// if we're in a derived that is being read inside an _async_ derived,\n\t\t// it's possible that the effect was already destroyed. In this case,\n\t\t// we don't add the dependency, because that would create a memory leak\n\t\tvar destroyed = active_effect !== null && (active_effect.f & DESTROYED) !== 0;\n\n\t\tif (!destroyed && !current_sources?.includes(signal)) {\n\t\t\tvar deps = active_reaction.deps;\n\n\t\t\tif ((active_reaction.f & REACTION_IS_UPDATING) !== 0) {\n\t\t\t\t// we're in the effect init/update cycle\n\t\t\t\tif (signal.rv < read_version) {\n\t\t\t\t\tsignal.rv = read_version;\n\n\t\t\t\t\t// If the signal is accessing the same dependencies in the same\n\t\t\t\t\t// order as it did last time, increment `skipped_deps`\n\t\t\t\t\t// rather than updating `new_deps`, which creates GC cost\n\t\t\t\t\tif (new_deps === null && deps !== null && deps[skipped_deps] === signal) {\n\t\t\t\t\t\tskipped_deps++;\n\t\t\t\t\t} else if (new_deps === null) {\n\t\t\t\t\t\tnew_deps = [signal];\n\t\t\t\t\t} else if (!skip_reaction || !new_deps.includes(signal)) {\n\t\t\t\t\t\t// Normally we can push duplicated dependencies to `new_deps`, but if we're inside\n\t\t\t\t\t\t// an unowned derived because skip_reaction is true, then we need to ensure that\n\t\t\t\t\t\t// we don't have duplicates\n\t\t\t\t\t\tnew_deps.push(signal);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// we're adding a dependency outside the init/update cycle\n\t\t\t\t// (i.e. after an `await`)\n\t\t\t\t(active_reaction.deps ??= []).push(signal);\n\n\t\t\t\tvar reactions = signal.reactions;\n\n\t\t\t\tif (reactions === null) {\n\t\t\t\t\tsignal.reactions = [active_reaction];\n\t\t\t\t} else if (!reactions.includes(active_reaction)) {\n\t\t\t\t\treactions.push(active_reaction);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else if (\n\t\tis_derived &&\n\t\t/** @type {Derived} */ (signal).deps === null &&\n\t\t/** @type {Derived} */ (signal).effects === null\n\t) {\n\t\tvar derived = /** @type {Derived} */ (signal);\n\t\tvar parent = derived.parent;\n\n\t\tif (parent !== null && (parent.f & UNOWNED) === 0) {\n\t\t\t// If the derived is owned by another derived then mark it as unowned\n\t\t\t// as the derived value might have been referenced in a different context\n\t\t\t// since and thus its parent might not be its true owner anymore\n\t\t\tderived.f ^= UNOWNED;\n\t\t}\n\t}\n\n\tif (DEV) {\n\t\tif (current_async_effect) {\n\t\t\tvar tracking = (current_async_effect.f & REACTION_IS_UPDATING) !== 0;\n\t\t\tvar was_read = current_async_effect.deps?.includes(signal);\n\n\t\t\tif (!tracking && !untracking && !was_read) {\n\t\t\t\tw.await_reactivity_loss(/** @type {string} */ (signal.label));\n\n\t\t\t\tvar trace = get_stack('TracedAt');\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tif (trace) console.warn(trace);\n\t\t\t}\n\t\t}\n\n\t\trecent_async_deriveds.delete(signal);\n\n\t\tif (\n\t\t\ttracing_mode_flag &&\n\t\t\t!untracking &&\n\t\t\ttracing_expressions !== null &&\n\t\t\tactive_reaction !== null &&\n\t\t\ttracing_expressions.reaction === active_reaction\n\t\t) {\n\t\t\t// Used when mapping state between special blocks like `each`\n\t\t\tif (signal.trace) {\n\t\t\t\tsignal.trace();\n\t\t\t} else {\n\t\t\t\ttrace = get_stack('TracedAt');\n\n\t\t\t\tif (trace) {\n\t\t\t\t\tvar entry = tracing_expressions.entries.get(signal);\n\n\t\t\t\t\tif (entry === undefined) {\n\t\t\t\t\t\tentry = { traces: [] };\n\t\t\t\t\t\ttracing_expressions.entries.set(signal, entry);\n\t\t\t\t\t}\n\n\t\t\t\t\tvar last = entry.traces[entry.traces.length - 1];\n\n\t\t\t\t\t// traces can be duplicated, e.g. by `snapshot` invoking both\n\t\t\t\t\t// both `getOwnPropertyDescriptor` and `get` traps at once\n\t\t\t\t\tif (trace.stack !== last?.stack) {\n\t\t\t\t\t\tentry.traces.push(trace);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif (is_destroying_effect) {\n\t\tif (old_values.has(signal)) {\n\t\t\treturn old_values.get(signal);\n\t\t}\n\n\t\tif (is_derived) {\n\t\t\tderived = /** @type {Derived} */ (signal);\n\n\t\t\tvar value = derived.v;\n\n\t\t\t// if the derived is dirty and has reactions, or depends on the values that just changed, re-execute\n\t\t\t// (a derived can be maybe_dirty due to the effect destroy removing its last reaction)\n\t\t\tif (\n\t\t\t\t((derived.f & CLEAN) === 0 && derived.reactions !== null) ||\n\t\t\t\tdepends_on_old_values(derived)\n\t\t\t) {\n\t\t\t\tvalue = execute_derived(derived);\n\t\t\t}\n\n\t\t\told_values.set(derived, value);\n\n\t\t\treturn value;\n\t\t}\n\t} else if (is_derived) {\n\t\tderived = /** @type {Derived} */ (signal);\n\n\t\tif (batch_deriveds?.has(derived)) {\n\t\t\treturn batch_deriveds.get(derived);\n\t\t}\n\n\t\tif (is_dirty(derived)) {\n\t\t\tupdate_derived(derived);\n\t\t}\n\t}\n\n\tif ((signal.f & ERROR_VALUE) !== 0) {\n\t\tthrow signal.v;\n\t}\n\n\treturn signal.v;\n}\n\n/** @param {Derived} derived */\nfunction depends_on_old_values(derived) {\n\tif (derived.v === UNINITIALIZED) return true; // we don't know, so assume the worst\n\tif (derived.deps === null) return false;\n\n\tfor (const dep of derived.deps) {\n\t\tif (old_values.has(dep)) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif ((dep.f & DERIVED) !== 0 && depends_on_old_values(/** @type {Derived} */ (dep))) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/**\n * Like `get`, but checks for `undefined`. Used for `var` declarations because they can be accessed before being declared\n * @template V\n * @param {Value<V> | undefined} signal\n * @returns {V | undefined}\n */\nexport function safe_get(signal) {\n\treturn signal && get(signal);\n}\n\n/**\n * When used inside a [`$derived`](https://svelte.dev/docs/svelte/$derived) or [`$effect`](https://svelte.dev/docs/svelte/$effect),\n * any state read inside `fn` will not be treated as a dependency.\n *\n * ```ts\n * $effect(() => {\n *   // this will run when `data` changes, but not when `time` changes\n *   save(data, {\n *     timestamp: untrack(() => time)\n *   });\n * });\n * ```\n * @template T\n * @param {() => T} fn\n * @returns {T}\n */\nexport function untrack(fn) {\n\tvar previous_untracking = untracking;\n\ttry {\n\t\tuntracking = true;\n\t\treturn fn();\n\t} finally {\n\t\tuntracking = previous_untracking;\n\t}\n}\n\nconst STATUS_MASK = ~(DIRTY | MAYBE_DIRTY | CLEAN);\n\n/**\n * @param {Signal} signal\n * @param {number} status\n * @returns {void}\n */\nexport function set_signal_status(signal, status) {\n\tsignal.f = (signal.f & STATUS_MASK) | status;\n}\n\n/**\n * @param {Record<string, unknown>} obj\n * @param {string[]} keys\n * @returns {Record<string, unknown>}\n */\nexport function exclude_from_object(obj, keys) {\n\t/** @type {Record<string, unknown>} */\n\tvar result = {};\n\n\tfor (var key in obj) {\n\t\tif (!keys.includes(key)) {\n\t\t\tresult[key] = obj[key];\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * Possibly traverse an object and read all its properties so that they're all reactive in case this is `$state`.\n * Does only check first level of an object for performance reasons (heuristic should be good for 99% of all cases).\n * @param {any} value\n * @returns {void}\n */\nexport function deep_read_state(value) {\n\tif (typeof value !== 'object' || !value || value instanceof EventTarget) {\n\t\treturn;\n\t}\n\n\tif (STATE_SYMBOL in value) {\n\t\tdeep_read(value);\n\t} else if (!Array.isArray(value)) {\n\t\tfor (let key in value) {\n\t\t\tconst prop = value[key];\n\t\t\tif (typeof prop === 'object' && prop && STATE_SYMBOL in prop) {\n\t\t\t\tdeep_read(prop);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Deeply traverse an object and read all its properties\n * so that they're all reactive in case this is `$state`\n * @param {any} value\n * @param {Set<any>} visited\n * @returns {void}\n */\nexport function deep_read(value, visited = new Set()) {\n\tif (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\t// We don't want to traverse DOM elements\n\t\t!(value instanceof EventTarget) &&\n\t\t!visited.has(value)\n\t) {\n\t\tvisited.add(value);\n\t\t// When working with a possible SvelteDate, this\n\t\t// will ensure we capture changes to it.\n\t\tif (value instanceof Date) {\n\t\t\tvalue.getTime();\n\t\t}\n\t\tfor (let key in value) {\n\t\t\ttry {\n\t\t\t\tdeep_read(value[key], visited);\n\t\t\t} catch (e) {\n\t\t\t\t// continue\n\t\t\t}\n\t\t}\n\t\tconst proto = get_prototype_of(value);\n\t\tif (\n\t\t\tproto !== Object.prototype &&\n\t\t\tproto !== Array.prototype &&\n\t\t\tproto !== Map.prototype &&\n\t\t\tproto !== Set.prototype &&\n\t\t\tproto !== Date.prototype\n\t\t) {\n\t\t\tconst descriptors = get_descriptors(proto);\n\t\t\tfor (let key in descriptors) {\n\t\t\t\tconst get = descriptors[key].get;\n\t\t\t\tif (get) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tget.call(value);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t// continue\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","/** @import { Source } from '#client' */\nimport { DEV } from 'esm-env';\nimport {\n\tget,\n\tactive_effect,\n\tupdate_version,\n\tactive_reaction,\n\tset_update_version,\n\tset_active_reaction\n} from './runtime.js';\nimport {\n\tarray_prototype,\n\tget_descriptor,\n\tget_prototype_of,\n\tis_array,\n\tobject_prototype\n} from '../shared/utils.js';\nimport {\n\tstate as source,\n\tset,\n\tincrement,\n\tflush_inspect_effects,\n\tset_inspect_effects_deferred\n} from './reactivity/sources.js';\nimport { PROXY_PATH_SYMBOL, STATE_SYMBOL } from '#client/constants';\nimport { UNINITIALIZED } from '../../constants.js';\nimport * as e from './errors.js';\nimport { get_stack, tag } from './dev/tracing.js';\nimport { tracing_mode_flag } from '../flags/index.js';\n\n// TODO move all regexes into shared module?\nconst regex_is_valid_identifier = /^[a-zA-Z_$][a-zA-Z_$0-9]*$/;\n\n/**\n * @template T\n * @param {T} value\n * @returns {T}\n */\nexport function proxy(value) {\n\t// if non-proxyable, or is already a proxy, return `value`\n\tif (typeof value !== 'object' || value === null || STATE_SYMBOL in value) {\n\t\treturn value;\n\t}\n\n\tconst prototype = get_prototype_of(value);\n\n\tif (prototype !== object_prototype && prototype !== array_prototype) {\n\t\treturn value;\n\t}\n\n\t/** @type {Map<any, Source<any>>} */\n\tvar sources = new Map();\n\tvar is_proxied_array = is_array(value);\n\tvar version = source(0);\n\n\tvar stack = DEV && tracing_mode_flag ? get_stack('CreatedAt') : null;\n\tvar parent_version = update_version;\n\n\t/**\n\t * Executes the proxy in the context of the reaction it was originally created in, if any\n\t * @template T\n\t * @param {() => T} fn\n\t */\n\tvar with_parent = (fn) => {\n\t\tif (update_version === parent_version) {\n\t\t\treturn fn();\n\t\t}\n\n\t\t// child source is being created after the initial proxy —\n\t\t// prevent it from being associated with the current reaction\n\t\tvar reaction = active_reaction;\n\t\tvar version = update_version;\n\n\t\tset_active_reaction(null);\n\t\tset_update_version(parent_version);\n\n\t\tvar result = fn();\n\n\t\tset_active_reaction(reaction);\n\t\tset_update_version(version);\n\n\t\treturn result;\n\t};\n\n\tif (is_proxied_array) {\n\t\t// We need to create the length source eagerly to ensure that\n\t\t// mutations to the array are properly synced with our proxy\n\t\tsources.set('length', source(/** @type {any[]} */ (value).length, stack));\n\t\tif (DEV) {\n\t\t\tvalue = /** @type {any} */ (inspectable_array(/** @type {any[]} */ (value)));\n\t\t}\n\t}\n\n\t/** Used in dev for $inspect.trace() */\n\tvar path = '';\n\n\t/** @param {string} new_path */\n\tfunction update_path(new_path) {\n\t\tpath = new_path;\n\n\t\ttag(version, `${path} version`);\n\n\t\t// rename all child sources and child proxies\n\t\tfor (const [prop, source] of sources) {\n\t\t\ttag(source, get_label(path, prop));\n\t\t}\n\t}\n\n\treturn new Proxy(/** @type {any} */ (value), {\n\t\tdefineProperty(_, prop, descriptor) {\n\t\t\tif (\n\t\t\t\t!('value' in descriptor) ||\n\t\t\t\tdescriptor.configurable === false ||\n\t\t\t\tdescriptor.enumerable === false ||\n\t\t\t\tdescriptor.writable === false\n\t\t\t) {\n\t\t\t\t// we disallow non-basic descriptors, because unless they are applied to the\n\t\t\t\t// target object — which we avoid, so that state can be forked — we will run\n\t\t\t\t// afoul of the various invariants\n\t\t\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/getOwnPropertyDescriptor#invariants\n\t\t\t\te.state_descriptors_fixed();\n\t\t\t}\n\t\t\tvar s = sources.get(prop);\n\t\t\tif (s === undefined) {\n\t\t\t\ts = with_parent(() => {\n\t\t\t\t\tvar s = source(descriptor.value, stack);\n\t\t\t\t\tsources.set(prop, s);\n\t\t\t\t\tif (DEV && typeof prop === 'string') {\n\t\t\t\t\t\ttag(s, get_label(path, prop));\n\t\t\t\t\t}\n\t\t\t\t\treturn s;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tset(s, descriptor.value, true);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\tdeleteProperty(target, prop) {\n\t\t\tvar s = sources.get(prop);\n\n\t\t\tif (s === undefined) {\n\t\t\t\tif (prop in target) {\n\t\t\t\t\tconst s = with_parent(() => source(UNINITIALIZED, stack));\n\t\t\t\t\tsources.set(prop, s);\n\t\t\t\t\tincrement(version);\n\n\t\t\t\t\tif (DEV) {\n\t\t\t\t\t\ttag(s, get_label(path, prop));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tset(s, UNINITIALIZED);\n\t\t\t\tincrement(version);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\tget(target, prop, receiver) {\n\t\t\tif (prop === STATE_SYMBOL) {\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\tif (DEV && prop === PROXY_PATH_SYMBOL) {\n\t\t\t\treturn update_path;\n\t\t\t}\n\n\t\t\tvar s = sources.get(prop);\n\t\t\tvar exists = prop in target;\n\n\t\t\t// create a source, but only if it's an own property and not a prototype property\n\t\t\tif (s === undefined && (!exists || get_descriptor(target, prop)?.writable)) {\n\t\t\t\ts = with_parent(() => {\n\t\t\t\t\tvar p = proxy(exists ? target[prop] : UNINITIALIZED);\n\t\t\t\t\tvar s = source(p, stack);\n\n\t\t\t\t\tif (DEV) {\n\t\t\t\t\t\ttag(s, get_label(path, prop));\n\t\t\t\t\t}\n\n\t\t\t\t\treturn s;\n\t\t\t\t});\n\n\t\t\t\tsources.set(prop, s);\n\t\t\t}\n\n\t\t\tif (s !== undefined) {\n\t\t\t\tvar v = get(s);\n\t\t\t\treturn v === UNINITIALIZED ? undefined : v;\n\t\t\t}\n\n\t\t\treturn Reflect.get(target, prop, receiver);\n\t\t},\n\n\t\tgetOwnPropertyDescriptor(target, prop) {\n\t\t\tvar descriptor = Reflect.getOwnPropertyDescriptor(target, prop);\n\n\t\t\tif (descriptor && 'value' in descriptor) {\n\t\t\t\tvar s = sources.get(prop);\n\t\t\t\tif (s) descriptor.value = get(s);\n\t\t\t} else if (descriptor === undefined) {\n\t\t\t\tvar source = sources.get(prop);\n\t\t\t\tvar value = source?.v;\n\n\t\t\t\tif (source !== undefined && value !== UNINITIALIZED) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tenumerable: true,\n\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t\twritable: true\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn descriptor;\n\t\t},\n\n\t\thas(target, prop) {\n\t\t\tif (prop === STATE_SYMBOL) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tvar s = sources.get(prop);\n\t\t\tvar has = (s !== undefined && s.v !== UNINITIALIZED) || Reflect.has(target, prop);\n\n\t\t\tif (\n\t\t\t\ts !== undefined ||\n\t\t\t\t(active_effect !== null && (!has || get_descriptor(target, prop)?.writable))\n\t\t\t) {\n\t\t\t\tif (s === undefined) {\n\t\t\t\t\ts = with_parent(() => {\n\t\t\t\t\t\tvar p = has ? proxy(target[prop]) : UNINITIALIZED;\n\t\t\t\t\t\tvar s = source(p, stack);\n\n\t\t\t\t\t\tif (DEV) {\n\t\t\t\t\t\t\ttag(s, get_label(path, prop));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn s;\n\t\t\t\t\t});\n\n\t\t\t\t\tsources.set(prop, s);\n\t\t\t\t}\n\n\t\t\t\tvar value = get(s);\n\t\t\t\tif (value === UNINITIALIZED) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn has;\n\t\t},\n\n\t\tset(target, prop, value, receiver) {\n\t\t\tvar s = sources.get(prop);\n\t\t\tvar has = prop in target;\n\n\t\t\t// variable.length = value -> clear all signals with index >= value\n\t\t\tif (is_proxied_array && prop === 'length') {\n\t\t\t\tfor (var i = value; i < /** @type {Source<number>} */ (s).v; i += 1) {\n\t\t\t\t\tvar other_s = sources.get(i + '');\n\t\t\t\t\tif (other_s !== undefined) {\n\t\t\t\t\t\tset(other_s, UNINITIALIZED);\n\t\t\t\t\t} else if (i in target) {\n\t\t\t\t\t\t// If the item exists in the original, we need to create a uninitialized source,\n\t\t\t\t\t\t// else a later read of the property would result in a source being created with\n\t\t\t\t\t\t// the value of the original item at that index.\n\t\t\t\t\t\tother_s = with_parent(() => source(UNINITIALIZED, stack));\n\t\t\t\t\t\tsources.set(i + '', other_s);\n\n\t\t\t\t\t\tif (DEV) {\n\t\t\t\t\t\t\ttag(other_s, get_label(path, i));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we haven't yet created a source for this property, we need to ensure\n\t\t\t// we do so otherwise if we read it later, then the write won't be tracked and\n\t\t\t// the heuristics of effects will be different vs if we had read the proxied\n\t\t\t// object property before writing to that property.\n\t\t\tif (s === undefined) {\n\t\t\t\tif (!has || get_descriptor(target, prop)?.writable) {\n\t\t\t\t\ts = with_parent(() => source(undefined, stack));\n\t\t\t\t\tset(s, proxy(value));\n\n\t\t\t\t\tsources.set(prop, s);\n\n\t\t\t\t\tif (DEV) {\n\t\t\t\t\t\ttag(s, get_label(path, prop));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\thas = s.v !== UNINITIALIZED;\n\n\t\t\t\tvar p = with_parent(() => proxy(value));\n\t\t\t\tset(s, p);\n\t\t\t}\n\n\t\t\tvar descriptor = Reflect.getOwnPropertyDescriptor(target, prop);\n\n\t\t\t// Set the new value before updating any signals so that any listeners get the new value\n\t\t\tif (descriptor?.set) {\n\t\t\t\tdescriptor.set.call(receiver, value);\n\t\t\t}\n\n\t\t\tif (!has) {\n\t\t\t\t// If we have mutated an array directly, we might need to\n\t\t\t\t// signal that length has also changed. Do it before updating metadata\n\t\t\t\t// to ensure that iterating over the array as a result of a metadata update\n\t\t\t\t// will not cause the length to be out of sync.\n\t\t\t\tif (is_proxied_array && typeof prop === 'string') {\n\t\t\t\t\tvar ls = /** @type {Source<number>} */ (sources.get('length'));\n\t\t\t\t\tvar n = Number(prop);\n\n\t\t\t\t\tif (Number.isInteger(n) && n >= ls.v) {\n\t\t\t\t\t\tset(ls, n + 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tincrement(version);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\townKeys(target) {\n\t\t\tget(version);\n\n\t\t\tvar own_keys = Reflect.ownKeys(target).filter((key) => {\n\t\t\t\tvar source = sources.get(key);\n\t\t\t\treturn source === undefined || source.v !== UNINITIALIZED;\n\t\t\t});\n\n\t\t\tfor (var [key, source] of sources) {\n\t\t\t\tif (source.v !== UNINITIALIZED && !(key in target)) {\n\t\t\t\t\town_keys.push(key);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn own_keys;\n\t\t},\n\n\t\tsetPrototypeOf() {\n\t\t\te.state_prototype_fixed();\n\t\t}\n\t});\n}\n\n/**\n * @param {string} path\n * @param {string | symbol} prop\n */\nfunction get_label(path, prop) {\n\tif (typeof prop === 'symbol') return `${path}[Symbol(${prop.description ?? ''})]`;\n\tif (regex_is_valid_identifier.test(prop)) return `${path}.${prop}`;\n\treturn /^\\d+$/.test(prop) ? `${path}[${prop}]` : `${path}['${prop}']`;\n}\n\n/**\n * @param {any} value\n */\nexport function get_proxied_value(value) {\n\ttry {\n\t\tif (value !== null && typeof value === 'object' && STATE_SYMBOL in value) {\n\t\t\treturn value[STATE_SYMBOL];\n\t\t}\n\t} catch {\n\t\t// the above if check can throw an error if the value in question\n\t\t// is the contentWindow of an iframe on another domain, in which\n\t\t// case we want to just return the value (because it's definitely\n\t\t// not a proxied value) so we don't break any JavaScript interacting\n\t\t// with that iframe (such as various payment companies client side\n\t\t// JavaScript libraries interacting with their iframes on the same\n\t\t// domain)\n\t}\n\n\treturn value;\n}\n\n/**\n * @param {any} a\n * @param {any} b\n */\nexport function is(a, b) {\n\treturn Object.is(get_proxied_value(a), get_proxied_value(b));\n}\n\nconst ARRAY_MUTATING_METHODS = new Set([\n\t'copyWithin',\n\t'fill',\n\t'pop',\n\t'push',\n\t'reverse',\n\t'shift',\n\t'sort',\n\t'splice',\n\t'unshift'\n]);\n\n/**\n * Wrap array mutating methods so $inspect is triggered only once and\n * to prevent logging an array in intermediate state (e.g. with an empty slot)\n * @param {any[]} array\n */\nfunction inspectable_array(array) {\n\treturn new Proxy(array, {\n\t\tget(target, prop, receiver) {\n\t\t\tvar value = Reflect.get(target, prop, receiver);\n\t\t\tif (!ARRAY_MUTATING_METHODS.has(/** @type {string} */ (prop))) {\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @this {any[]}\n\t\t\t * @param {any[]} args\n\t\t\t */\n\t\t\treturn function (...args) {\n\t\t\t\tset_inspect_effects_deferred();\n\t\t\t\tvar result = value.apply(this, args);\n\t\t\t\tflush_inspect_effects();\n\t\t\t\treturn result;\n\t\t\t};\n\t\t}\n\t});\n}\n","/** @import { Effect, TemplateNode } from '#client' */\nimport { hydrate_node, hydrating, set_hydrate_node } from './hydration.js';\nimport { DEV } from 'esm-env';\nimport { init_array_prototype_warnings } from '../dev/equality.js';\nimport { get_descriptor, is_extensible } from '../../shared/utils.js';\nimport { active_effect } from '../runtime.js';\nimport { async_mode_flag } from '../../flags/index.js';\nimport { TEXT_NODE, EFFECT_RAN } from '#client/constants';\n\n// export these for reference in the compiled code, making global name deduplication unnecessary\n/** @type {Window} */\nexport var $window;\n\n/** @type {Document} */\nexport var $document;\n\n/** @type {boolean} */\nexport var is_firefox;\n\n/** @type {() => Node | null} */\nvar first_child_getter;\n/** @type {() => Node | null} */\nvar next_sibling_getter;\n\n/**\n * Initialize these lazily to avoid issues when using the runtime in a server context\n * where these globals are not available while avoiding a separate server entry point\n */\nexport function init_operations() {\n\tif ($window !== undefined) {\n\t\treturn;\n\t}\n\n\t$window = window;\n\t$document = document;\n\tis_firefox = /Firefox/.test(navigator.userAgent);\n\n\tvar element_prototype = Element.prototype;\n\tvar node_prototype = Node.prototype;\n\tvar text_prototype = Text.prototype;\n\n\t// @ts-ignore\n\tfirst_child_getter = get_descriptor(node_prototype, 'firstChild').get;\n\t// @ts-ignore\n\tnext_sibling_getter = get_descriptor(node_prototype, 'nextSibling').get;\n\n\tif (is_extensible(element_prototype)) {\n\t\t// the following assignments improve perf of lookups on DOM nodes\n\t\t// @ts-expect-error\n\t\telement_prototype.__click = undefined;\n\t\t// @ts-expect-error\n\t\telement_prototype.__className = undefined;\n\t\t// @ts-expect-error\n\t\telement_prototype.__attributes = null;\n\t\t// @ts-expect-error\n\t\telement_prototype.__style = undefined;\n\t\t// @ts-expect-error\n\t\telement_prototype.__e = undefined;\n\t}\n\n\tif (is_extensible(text_prototype)) {\n\t\t// @ts-expect-error\n\t\ttext_prototype.__t = undefined;\n\t}\n\n\tif (DEV) {\n\t\t// @ts-expect-error\n\t\telement_prototype.__svelte_meta = null;\n\n\t\tinit_array_prototype_warnings();\n\t}\n}\n\n/**\n * @param {string} value\n * @returns {Text}\n */\nexport function create_text(value = '') {\n\treturn document.createTextNode(value);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {Node | null}\n */\n/*@__NO_SIDE_EFFECTS__*/\nexport function get_first_child(node) {\n\treturn first_child_getter.call(node);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {Node | null}\n */\n/*@__NO_SIDE_EFFECTS__*/\nexport function get_next_sibling(node) {\n\treturn next_sibling_getter.call(node);\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @template {Node} N\n * @param {N} node\n * @param {boolean} is_text\n * @returns {Node | null}\n */\nexport function child(node, is_text) {\n\tif (!hydrating) {\n\t\treturn get_first_child(node);\n\t}\n\n\tvar child = /** @type {TemplateNode} */ (get_first_child(hydrate_node));\n\n\t// Child can be null if we have an element with a single child, like `<p>{text}</p>`, where `text` is empty\n\tif (child === null) {\n\t\tchild = hydrate_node.appendChild(create_text());\n\t} else if (is_text && child.nodeType !== TEXT_NODE) {\n\t\tvar text = create_text();\n\t\tchild?.before(text);\n\t\tset_hydrate_node(text);\n\t\treturn text;\n\t}\n\n\tset_hydrate_node(child);\n\treturn child;\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @param {DocumentFragment | TemplateNode[]} fragment\n * @param {boolean} is_text\n * @returns {Node | null}\n */\nexport function first_child(fragment, is_text) {\n\tif (!hydrating) {\n\t\t// when not hydrating, `fragment` is a `DocumentFragment` (the result of calling `open_frag`)\n\t\tvar first = /** @type {DocumentFragment} */ (get_first_child(/** @type {Node} */ (fragment)));\n\n\t\t// TODO prevent user comments with the empty string when preserveComments is true\n\t\tif (first instanceof Comment && first.data === '') return get_next_sibling(first);\n\n\t\treturn first;\n\t}\n\n\t// if an {expression} is empty during SSR, there might be no\n\t// text node to hydrate — we must therefore create one\n\tif (is_text && hydrate_node?.nodeType !== TEXT_NODE) {\n\t\tvar text = create_text();\n\n\t\thydrate_node?.before(text);\n\t\tset_hydrate_node(text);\n\t\treturn text;\n\t}\n\n\treturn hydrate_node;\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @param {TemplateNode} node\n * @param {number} count\n * @param {boolean} is_text\n * @returns {Node | null}\n */\nexport function sibling(node, count = 1, is_text = false) {\n\tlet next_sibling = hydrating ? hydrate_node : node;\n\tvar last_sibling;\n\n\twhile (count--) {\n\t\tlast_sibling = next_sibling;\n\t\tnext_sibling = /** @type {TemplateNode} */ (get_next_sibling(next_sibling));\n\t}\n\n\tif (!hydrating) {\n\t\treturn next_sibling;\n\t}\n\n\t// if a sibling {expression} is empty during SSR, there might be no\n\t// text node to hydrate — we must therefore create one\n\tif (is_text && next_sibling?.nodeType !== TEXT_NODE) {\n\t\tvar text = create_text();\n\t\t// If the next sibling is `null` and we're handling text then it's because\n\t\t// the SSR content was empty for the text, so we need to generate a new text\n\t\t// node and insert it after the last sibling\n\t\tif (next_sibling === null) {\n\t\t\tlast_sibling?.after(text);\n\t\t} else {\n\t\t\tnext_sibling.before(text);\n\t\t}\n\t\tset_hydrate_node(text);\n\t\treturn text;\n\t}\n\n\tset_hydrate_node(next_sibling);\n\treturn /** @type {TemplateNode} */ (next_sibling);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {void}\n */\nexport function clear_text_content(node) {\n\tnode.textContent = '';\n}\n\n/**\n * Returns `true` if we're updating the current block, for example `condition` in\n * an `{#if condition}` block just changed. In this case, the branch should be\n * appended (or removed) at the same time as other updates within the\n * current `<svelte:boundary>`\n */\nexport function should_defer_append() {\n\tif (!async_mode_flag) return false;\n\n\tvar flags = /** @type {Effect} */ (active_effect).f;\n\treturn (flags & EFFECT_RAN) !== 0;\n}\n\n/**\n *\n * @param {string} tag\n * @param {string} [namespace]\n * @param {string} [is]\n * @returns\n */\nexport function create_element(tag, namespace, is) {\n\tlet options = is ? { is } : undefined;\n\tif (namespace) {\n\t\treturn document.createElementNS(namespace, tag, options);\n\t}\n\treturn document.createElement(tag, options);\n}\n\nexport function create_fragment() {\n\treturn document.createDocumentFragment();\n}\n\n/**\n * @param {string} data\n * @returns\n */\nexport function create_comment(data = '') {\n\treturn document.createComment(data);\n}\n\n/**\n * @param {Element} element\n * @param {string} key\n * @param {string} value\n * @returns\n */\nexport function set_attribute(element, key, value = '') {\n\tif (key.startsWith('xlink:')) {\n\t\telement.setAttributeNS('http://www.w3.org/1999/xlink', key, value);\n\t\treturn;\n\t}\n\treturn element.setAttribute(key, value);\n}\n","const regex_return_characters = /\\r/g;\n\n/**\n * @param {string} str\n * @returns {string}\n */\nexport function hash(str) {\n\tstr = str.replace(regex_return_characters, '');\n\tlet hash = 5381;\n\tlet i = str.length;\n\n\twhile (i--) hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n\treturn (hash >>> 0).toString(36);\n}\n\nconst VOID_ELEMENT_NAMES = [\n\t'area',\n\t'base',\n\t'br',\n\t'col',\n\t'command',\n\t'embed',\n\t'hr',\n\t'img',\n\t'input',\n\t'keygen',\n\t'link',\n\t'meta',\n\t'param',\n\t'source',\n\t'track',\n\t'wbr'\n];\n\n/**\n * Returns `true` if `name` is of a void element\n * @param {string} name\n */\nexport function is_void(name) {\n\treturn VOID_ELEMENT_NAMES.includes(name) || name.toLowerCase() === '!doctype';\n}\n\nconst RESERVED_WORDS = [\n\t'arguments',\n\t'await',\n\t'break',\n\t'case',\n\t'catch',\n\t'class',\n\t'const',\n\t'continue',\n\t'debugger',\n\t'default',\n\t'delete',\n\t'do',\n\t'else',\n\t'enum',\n\t'eval',\n\t'export',\n\t'extends',\n\t'false',\n\t'finally',\n\t'for',\n\t'function',\n\t'if',\n\t'implements',\n\t'import',\n\t'in',\n\t'instanceof',\n\t'interface',\n\t'let',\n\t'new',\n\t'null',\n\t'package',\n\t'private',\n\t'protected',\n\t'public',\n\t'return',\n\t'static',\n\t'super',\n\t'switch',\n\t'this',\n\t'throw',\n\t'true',\n\t'try',\n\t'typeof',\n\t'var',\n\t'void',\n\t'while',\n\t'with',\n\t'yield'\n];\n\n/**\n * Returns `true` if `word` is a reserved JavaScript keyword\n * @param {string} word\n */\nexport function is_reserved(word) {\n\treturn RESERVED_WORDS.includes(word);\n}\n\n/**\n * @param {string} name\n */\nexport function is_capture_event(name) {\n\treturn name.endsWith('capture') && name !== 'gotpointercapture' && name !== 'lostpointercapture';\n}\n\n/** List of Element events that will be delegated */\nconst DELEGATED_EVENTS = [\n\t'beforeinput',\n\t'click',\n\t'change',\n\t'dblclick',\n\t'contextmenu',\n\t'focusin',\n\t'focusout',\n\t'input',\n\t'keydown',\n\t'keyup',\n\t'mousedown',\n\t'mousemove',\n\t'mouseout',\n\t'mouseover',\n\t'mouseup',\n\t'pointerdown',\n\t'pointermove',\n\t'pointerout',\n\t'pointerover',\n\t'pointerup',\n\t'touchend',\n\t'touchmove',\n\t'touchstart'\n];\n\n/**\n * Returns `true` if `event_name` is a delegated event\n * @param {string} event_name\n */\nexport function is_delegated(event_name) {\n\treturn DELEGATED_EVENTS.includes(event_name);\n}\n\n/**\n * Attributes that are boolean, i.e. they are present or not present.\n */\nconst DOM_BOOLEAN_ATTRIBUTES = [\n\t'allowfullscreen',\n\t'async',\n\t'autofocus',\n\t'autoplay',\n\t'checked',\n\t'controls',\n\t'default',\n\t'disabled',\n\t'formnovalidate',\n\t'hidden',\n\t'indeterminate',\n\t'inert',\n\t'ismap',\n\t'loop',\n\t'multiple',\n\t'muted',\n\t'nomodule',\n\t'novalidate',\n\t'open',\n\t'playsinline',\n\t'readonly',\n\t'required',\n\t'reversed',\n\t'seamless',\n\t'selected',\n\t'webkitdirectory',\n\t'defer',\n\t'disablepictureinpicture',\n\t'disableremoteplayback'\n];\n\n/**\n * Returns `true` if `name` is a boolean attribute\n * @param {string} name\n */\nexport function is_boolean_attribute(name) {\n\treturn DOM_BOOLEAN_ATTRIBUTES.includes(name);\n}\n\n/**\n * @type {Record<string, string>}\n * List of attribute names that should be aliased to their property names\n * because they behave differently between setting them as an attribute and\n * setting them as a property.\n */\nconst ATTRIBUTE_ALIASES = {\n\t// no `class: 'className'` because we handle that separately\n\tformnovalidate: 'formNoValidate',\n\tismap: 'isMap',\n\tnomodule: 'noModule',\n\tplaysinline: 'playsInline',\n\treadonly: 'readOnly',\n\tdefaultvalue: 'defaultValue',\n\tdefaultchecked: 'defaultChecked',\n\tsrcobject: 'srcObject',\n\tnovalidate: 'noValidate',\n\tallowfullscreen: 'allowFullscreen',\n\tdisablepictureinpicture: 'disablePictureInPicture',\n\tdisableremoteplayback: 'disableRemotePlayback'\n};\n\n/**\n * @param {string} name\n */\nexport function normalize_attribute(name) {\n\tname = name.toLowerCase();\n\treturn ATTRIBUTE_ALIASES[name] ?? name;\n}\n\nconst DOM_PROPERTIES = [\n\t...DOM_BOOLEAN_ATTRIBUTES,\n\t'formNoValidate',\n\t'isMap',\n\t'noModule',\n\t'playsInline',\n\t'readOnly',\n\t'value',\n\t'volume',\n\t'defaultValue',\n\t'defaultChecked',\n\t'srcObject',\n\t'noValidate',\n\t'allowFullscreen',\n\t'disablePictureInPicture',\n\t'disableRemotePlayback'\n];\n\n/**\n * @param {string} name\n */\nexport function is_dom_property(name) {\n\treturn DOM_PROPERTIES.includes(name);\n}\n\nconst NON_STATIC_PROPERTIES = ['autofocus', 'muted', 'defaultValue', 'defaultChecked'];\n\n/**\n * Returns `true` if the given attribute cannot be set through the template\n * string, i.e. needs some kind of JavaScript handling to work.\n * @param {string} name\n */\nexport function cannot_be_set_statically(name) {\n\treturn NON_STATIC_PROPERTIES.includes(name);\n}\n\n/**\n * Subset of delegated events which should be passive by default.\n * These two are already passive via browser defaults on window, document and body.\n * But since\n * - we're delegating them\n * - they happen often\n * - they apply to mobile which is generally less performant\n * we're marking them as passive by default for other elements, too.\n */\nconst PASSIVE_EVENTS = ['touchstart', 'touchmove'];\n\n/**\n * Returns `true` if `name` is a passive event\n * @param {string} name\n */\nexport function is_passive_event(name) {\n\treturn PASSIVE_EVENTS.includes(name);\n}\n\nconst CONTENT_EDITABLE_BINDINGS = ['textContent', 'innerHTML', 'innerText'];\n\n/** @param {string} name */\nexport function is_content_editable_binding(name) {\n\treturn CONTENT_EDITABLE_BINDINGS.includes(name);\n}\n\nconst LOAD_ERROR_ELEMENTS = [\n\t'body',\n\t'embed',\n\t'iframe',\n\t'img',\n\t'link',\n\t'object',\n\t'script',\n\t'style',\n\t'track'\n];\n\n/**\n * Returns `true` if the element emits `load` and `error` events\n * @param {string} name\n */\nexport function is_load_error_element(name) {\n\treturn LOAD_ERROR_ELEMENTS.includes(name);\n}\n\nconst SVG_ELEMENTS = [\n\t'altGlyph',\n\t'altGlyphDef',\n\t'altGlyphItem',\n\t'animate',\n\t'animateColor',\n\t'animateMotion',\n\t'animateTransform',\n\t'circle',\n\t'clipPath',\n\t'color-profile',\n\t'cursor',\n\t'defs',\n\t'desc',\n\t'discard',\n\t'ellipse',\n\t'feBlend',\n\t'feColorMatrix',\n\t'feComponentTransfer',\n\t'feComposite',\n\t'feConvolveMatrix',\n\t'feDiffuseLighting',\n\t'feDisplacementMap',\n\t'feDistantLight',\n\t'feDropShadow',\n\t'feFlood',\n\t'feFuncA',\n\t'feFuncB',\n\t'feFuncG',\n\t'feFuncR',\n\t'feGaussianBlur',\n\t'feImage',\n\t'feMerge',\n\t'feMergeNode',\n\t'feMorphology',\n\t'feOffset',\n\t'fePointLight',\n\t'feSpecularLighting',\n\t'feSpotLight',\n\t'feTile',\n\t'feTurbulence',\n\t'filter',\n\t'font',\n\t'font-face',\n\t'font-face-format',\n\t'font-face-name',\n\t'font-face-src',\n\t'font-face-uri',\n\t'foreignObject',\n\t'g',\n\t'glyph',\n\t'glyphRef',\n\t'hatch',\n\t'hatchpath',\n\t'hkern',\n\t'image',\n\t'line',\n\t'linearGradient',\n\t'marker',\n\t'mask',\n\t'mesh',\n\t'meshgradient',\n\t'meshpatch',\n\t'meshrow',\n\t'metadata',\n\t'missing-glyph',\n\t'mpath',\n\t'path',\n\t'pattern',\n\t'polygon',\n\t'polyline',\n\t'radialGradient',\n\t'rect',\n\t'set',\n\t'solidcolor',\n\t'stop',\n\t'svg',\n\t'switch',\n\t'symbol',\n\t'text',\n\t'textPath',\n\t'tref',\n\t'tspan',\n\t'unknown',\n\t'use',\n\t'view',\n\t'vkern'\n];\n\n/** @param {string} name */\nexport function is_svg(name) {\n\treturn SVG_ELEMENTS.includes(name);\n}\n\nconst MATHML_ELEMENTS = [\n\t'annotation',\n\t'annotation-xml',\n\t'maction',\n\t'math',\n\t'merror',\n\t'mfrac',\n\t'mi',\n\t'mmultiscripts',\n\t'mn',\n\t'mo',\n\t'mover',\n\t'mpadded',\n\t'mphantom',\n\t'mprescripts',\n\t'mroot',\n\t'mrow',\n\t'ms',\n\t'mspace',\n\t'msqrt',\n\t'mstyle',\n\t'msub',\n\t'msubsup',\n\t'msup',\n\t'mtable',\n\t'mtd',\n\t'mtext',\n\t'mtr',\n\t'munder',\n\t'munderover',\n\t'semantics'\n];\n\n/** @param {string} name */\nexport function is_mathml(name) {\n\treturn MATHML_ELEMENTS.includes(name);\n}\n\nconst STATE_CREATION_RUNES = /** @type {const} */ ([\n\t'$state',\n\t'$state.raw',\n\t'$derived',\n\t'$derived.by'\n]);\n\nconst RUNES = /** @type {const} */ ([\n\t...STATE_CREATION_RUNES,\n\t'$state.snapshot',\n\t'$props',\n\t'$props.id',\n\t'$bindable',\n\t'$effect',\n\t'$effect.pre',\n\t'$effect.tracking',\n\t'$effect.root',\n\t'$effect.pending',\n\t'$inspect',\n\t'$inspect().with',\n\t'$inspect.trace',\n\t'$host'\n]);\n\n/** @typedef {RUNES[number]} RuneName */\n\n/**\n * @param {string} name\n * @returns {name is RuneName}\n */\nexport function is_rune(name) {\n\treturn RUNES.includes(/** @type {RuneName} */ (name));\n}\n\n/** @typedef {STATE_CREATION_RUNES[number]} StateCreationRuneName */\n\n/**\n * @param {string} name\n * @returns {name is StateCreationRuneName}\n */\nexport function is_state_creation_rune(name) {\n\treturn STATE_CREATION_RUNES.includes(/** @type {StateCreationRuneName} */ (name));\n}\n\n/** List of elements that require raw contents and should not have SSR comments put in them */\nconst RAW_TEXT_ELEMENTS = /** @type {const} */ (['textarea', 'script', 'style', 'title']);\n\n/** @param {string} name */\nexport function is_raw_text_element(name) {\n\treturn RAW_TEXT_ELEMENTS.includes(/** @type {RAW_TEXT_ELEMENTS[number]} */ (name));\n}\n\n/**\n * Prevent devtools trying to make `location` a clickable link by inserting a zero-width space\n * @template {string | undefined} T\n * @param {T} location\n * @returns {T};\n */\nexport function sanitize_location(location) {\n\treturn /** @type {T} */ (location?.replace(/\\//g, '/\\u200b'));\n}\n","import { teardown } from '../../reactivity/effects.js';\nimport { define_property, is_array } from '../../../shared/utils.js';\nimport { hydrating } from '../hydration.js';\nimport { queue_micro_task } from '../task.js';\nimport { FILENAME } from '../../../../constants.js';\nimport * as w from '../../warnings.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tset_active_effect,\n\tset_active_reaction\n} from '../../runtime.js';\nimport { without_reactive_context } from './bindings/shared.js';\n\n/** @type {Set<string>} */\nexport const all_registered_events = new Set();\n\n/** @type {Set<(events: Array<string>) => void>} */\nexport const root_event_handles = new Set();\n\n/**\n * SSR adds onload and onerror attributes to catch those events before the hydration.\n * This function detects those cases, removes the attributes and replays the events.\n * @param {HTMLElement} dom\n */\nexport function replay_events(dom) {\n\tif (!hydrating) return;\n\n\tdom.removeAttribute('onload');\n\tdom.removeAttribute('onerror');\n\t// @ts-expect-error\n\tconst event = dom.__e;\n\tif (event !== undefined) {\n\t\t// @ts-expect-error\n\t\tdom.__e = undefined;\n\t\tqueueMicrotask(() => {\n\t\t\tif (dom.isConnected) {\n\t\t\t\tdom.dispatchEvent(event);\n\t\t\t}\n\t\t});\n\t}\n}\n\n/**\n * @param {string} event_name\n * @param {EventTarget} dom\n * @param {EventListener} [handler]\n * @param {AddEventListenerOptions} [options]\n */\nexport function create_event(event_name, dom, handler, options = {}) {\n\t/**\n\t * @this {EventTarget}\n\t */\n\tfunction target_handler(/** @type {Event} */ event) {\n\t\tif (!options.capture) {\n\t\t\t// Only call in the bubble phase, else delegated events would be called before the capturing events\n\t\t\thandle_event_propagation.call(dom, event);\n\t\t}\n\t\tif (!event.cancelBubble) {\n\t\t\treturn without_reactive_context(() => {\n\t\t\t\treturn handler?.call(this, event);\n\t\t\t});\n\t\t}\n\t}\n\n\t// Chrome has a bug where pointer events don't work when attached to a DOM element that has been cloned\n\t// with cloneNode() and the DOM element is disconnected from the document. To ensure the event works, we\n\t// defer the attachment till after it's been appended to the document. TODO: remove this once Chrome fixes\n\t// this bug. The same applies to wheel events and touch events.\n\tif (\n\t\tevent_name.startsWith('pointer') ||\n\t\tevent_name.startsWith('touch') ||\n\t\tevent_name === 'wheel'\n\t) {\n\t\tqueue_micro_task(() => {\n\t\t\tdom.addEventListener(event_name, target_handler, options);\n\t\t});\n\t} else {\n\t\tdom.addEventListener(event_name, target_handler, options);\n\t}\n\n\treturn target_handler;\n}\n\n/**\n * Attaches an event handler to an element and returns a function that removes the handler. Using this\n * rather than `addEventListener` will preserve the correct order relative to handlers added declaratively\n * (with attributes like `onclick`), which use event delegation for performance reasons\n *\n * @param {EventTarget} element\n * @param {string} type\n * @param {EventListener} handler\n * @param {AddEventListenerOptions} [options]\n */\nexport function on(element, type, handler, options = {}) {\n\tvar target_handler = create_event(type, element, handler, options);\n\n\treturn () => {\n\t\telement.removeEventListener(type, target_handler, options);\n\t};\n}\n\n/**\n * @param {string} event_name\n * @param {Element} dom\n * @param {EventListener} [handler]\n * @param {boolean} [capture]\n * @param {boolean} [passive]\n * @returns {void}\n */\nexport function event(event_name, dom, handler, capture, passive) {\n\tvar options = { capture, passive };\n\tvar target_handler = create_event(event_name, dom, handler, options);\n\n\tif (\n\t\tdom === document.body ||\n\t\t// @ts-ignore\n\t\tdom === window ||\n\t\t// @ts-ignore\n\t\tdom === document ||\n\t\t// Firefox has quirky behavior, it can happen that we still get \"canplay\" events when the element is already removed\n\t\tdom instanceof HTMLMediaElement\n\t) {\n\t\tteardown(() => {\n\t\t\tdom.removeEventListener(event_name, target_handler, options);\n\t\t});\n\t}\n}\n\n/**\n * @param {Array<string>} events\n * @returns {void}\n */\nexport function delegate(events) {\n\tfor (var i = 0; i < events.length; i++) {\n\t\tall_registered_events.add(events[i]);\n\t}\n\n\tfor (var fn of root_event_handles) {\n\t\tfn(events);\n\t}\n}\n\n// used to store the reference to the currently propagated event\n// to prevent garbage collection between microtasks in Firefox\n// If the event object is GCed too early, the expando __root property\n// set on the event object is lost, causing the event delegation\n// to process the event twice\nlet last_propagated_event = null;\n\n/**\n * @this {EventTarget}\n * @param {Event} event\n * @returns {void}\n */\nexport function handle_event_propagation(event) {\n\tvar handler_element = this;\n\tvar owner_document = /** @type {Node} */ (handler_element).ownerDocument;\n\tvar event_name = event.type;\n\tvar path = event.composedPath?.() || [];\n\tvar current_target = /** @type {null | Element} */ (path[0] || event.target);\n\n\tlast_propagated_event = event;\n\n\t// composedPath contains list of nodes the event has propagated through.\n\t// We check __root to skip all nodes below it in case this is a\n\t// parent of the __root node, which indicates that there's nested\n\t// mounted apps. In this case we don't want to trigger events multiple times.\n\tvar path_idx = 0;\n\n\t// the `last_propagated_event === event` check is redundant, but\n\t// without it the variable will be DCE'd and things will\n\t// fail mysteriously in Firefox\n\t// @ts-expect-error is added below\n\tvar handled_at = last_propagated_event === event && event.__root;\n\n\tif (handled_at) {\n\t\tvar at_idx = path.indexOf(handled_at);\n\t\tif (\n\t\t\tat_idx !== -1 &&\n\t\t\t(handler_element === document || handler_element === /** @type {any} */ (window))\n\t\t) {\n\t\t\t// This is the fallback document listener or a window listener, but the event was already handled\n\t\t\t// -> ignore, but set handle_at to document/window so that we're resetting the event\n\t\t\t// chain in case someone manually dispatches the same event object again.\n\t\t\t// @ts-expect-error\n\t\t\tevent.__root = handler_element;\n\t\t\treturn;\n\t\t}\n\n\t\t// We're deliberately not skipping if the index is higher, because\n\t\t// someone could create an event programmatically and emit it multiple times,\n\t\t// in which case we want to handle the whole propagation chain properly each time.\n\t\t// (this will only be a false negative if the event is dispatched multiple times and\n\t\t// the fallback document listener isn't reached in between, but that's super rare)\n\t\tvar handler_idx = path.indexOf(handler_element);\n\t\tif (handler_idx === -1) {\n\t\t\t// handle_idx can theoretically be -1 (happened in some JSDOM testing scenarios with an event listener on the window object)\n\t\t\t// so guard against that, too, and assume that everything was handled at this point.\n\t\t\treturn;\n\t\t}\n\n\t\tif (at_idx <= handler_idx) {\n\t\t\tpath_idx = at_idx;\n\t\t}\n\t}\n\n\tcurrent_target = /** @type {Element} */ (path[path_idx] || event.target);\n\t// there can only be one delegated event per element, and we either already handled the current target,\n\t// or this is the very first target in the chain which has a non-delegated listener, in which case it's safe\n\t// to handle a possible delegated event on it later (through the root delegation listener for example).\n\tif (current_target === handler_element) return;\n\n\t// Proxy currentTarget to correct target\n\tdefine_property(event, 'currentTarget', {\n\t\tconfigurable: true,\n\t\tget() {\n\t\t\treturn current_target || owner_document;\n\t\t}\n\t});\n\n\t// This started because of Chromium issue https://chromestatus.com/feature/5128696823545856,\n\t// where removal or moving of of the DOM can cause sync `blur` events to fire, which can cause logic\n\t// to run inside the current `active_reaction`, which isn't what we want at all. However, on reflection,\n\t// it's probably best that all event handled by Svelte have this behaviour, as we don't really want\n\t// an event handler to run in the context of another reaction or effect.\n\tvar previous_reaction = active_reaction;\n\tvar previous_effect = active_effect;\n\tset_active_reaction(null);\n\tset_active_effect(null);\n\n\ttry {\n\t\t/**\n\t\t * @type {unknown}\n\t\t */\n\t\tvar throw_error;\n\t\t/**\n\t\t * @type {unknown[]}\n\t\t */\n\t\tvar other_errors = [];\n\n\t\twhile (current_target !== null) {\n\t\t\t/** @type {null | Element} */\n\t\t\tvar parent_element =\n\t\t\t\tcurrent_target.assignedSlot ||\n\t\t\t\tcurrent_target.parentNode ||\n\t\t\t\t/** @type {any} */ (current_target).host ||\n\t\t\t\tnull;\n\n\t\t\ttry {\n\t\t\t\t// @ts-expect-error\n\t\t\t\tvar delegated = current_target['__' + event_name];\n\n\t\t\t\tif (\n\t\t\t\t\tdelegated != null &&\n\t\t\t\t\t(!(/** @type {any} */ (current_target).disabled) ||\n\t\t\t\t\t\t// DOM could've been updated already by the time this is reached, so we check this as well\n\t\t\t\t\t\t// -> the target could not have been disabled because it emits the event in the first place\n\t\t\t\t\t\tevent.target === current_target)\n\t\t\t\t) {\n\t\t\t\t\tif (is_array(delegated)) {\n\t\t\t\t\t\tvar [fn, ...data] = delegated;\n\t\t\t\t\t\tfn.apply(current_target, [event, ...data]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdelegated.call(current_target, event);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (throw_error) {\n\t\t\t\t\tother_errors.push(error);\n\t\t\t\t} else {\n\t\t\t\t\tthrow_error = error;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (event.cancelBubble || parent_element === handler_element || parent_element === null) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcurrent_target = parent_element;\n\t\t}\n\n\t\tif (throw_error) {\n\t\t\tfor (let error of other_errors) {\n\t\t\t\t// Throw the rest of the errors, one-by-one on a microtask\n\t\t\t\tqueueMicrotask(() => {\n\t\t\t\t\tthrow error;\n\t\t\t\t});\n\t\t\t}\n\t\t\tthrow throw_error;\n\t\t}\n\t} finally {\n\t\t// @ts-expect-error is used above\n\t\tevent.__root = handler_element;\n\t\t// @ts-ignore remove proxy on currentTarget\n\t\tdelete event.currentTarget;\n\t\tset_active_reaction(previous_reaction);\n\t\tset_active_effect(previous_effect);\n\t}\n}\n\n/**\n * In dev, warn if an event handler is not a function, as it means the\n * user probably called the handler or forgot to add a `() =>`\n * @param {() => (event: Event, ...args: any) => void} thunk\n * @param {EventTarget} element\n * @param {[Event, ...any]} args\n * @param {any} component\n * @param {[number, number]} [loc]\n * @param {boolean} [remove_parens]\n */\nexport function apply(\n\tthunk,\n\telement,\n\targs,\n\tcomponent,\n\tloc,\n\thas_side_effects = false,\n\tremove_parens = false\n) {\n\tlet handler;\n\tlet error;\n\n\ttry {\n\t\thandler = thunk();\n\t} catch (e) {\n\t\terror = e;\n\t}\n\n\tif (typeof handler !== 'function' && (has_side_effects || handler != null || error)) {\n\t\tconst filename = component?.[FILENAME];\n\t\tconst location = loc ? ` at ${filename}:${loc[0]}:${loc[1]}` : ` in ${filename}`;\n\t\tconst phase = args[0]?.eventPhase < Event.BUBBLING_PHASE ? 'capture' : '';\n\t\tconst event_name = args[0]?.type + phase;\n\t\tconst description = `\\`${event_name}\\` handler${location}`;\n\t\tconst suggestion = remove_parens ? 'remove the trailing `()`' : 'add a leading `() =>`';\n\n\t\tw.event_handler_invalid(description, suggestion);\n\n\t\tif (error) {\n\t\t\tthrow error;\n\t\t}\n\t}\n\thandler?.apply(element, args);\n}\n","/** @import { Effect, TemplateNode } from '#client' */\n/** @import { TemplateStructure } from './types' */\nimport { hydrate_next, hydrate_node, hydrating, set_hydrate_node } from './hydration.js';\nimport {\n\tcreate_text,\n\tget_first_child,\n\tis_firefox,\n\tcreate_element,\n\tcreate_fragment,\n\tcreate_comment,\n\tset_attribute\n} from './operations.js';\nimport { create_fragment_from_html } from './reconciler.js';\nimport { active_effect } from '../runtime.js';\nimport {\n\tNAMESPACE_MATHML,\n\tNAMESPACE_SVG,\n\tTEMPLATE_FRAGMENT,\n\tTEMPLATE_USE_IMPORT_NODE,\n\tTEMPLATE_USE_MATHML,\n\tTEMPLATE_USE_SVG\n} from '../../../constants.js';\nimport { COMMENT_NODE, DOCUMENT_FRAGMENT_NODE, TEXT_NODE } from '#client/constants';\n\n/**\n * @param {TemplateNode} start\n * @param {TemplateNode | null} end\n */\nexport function assign_nodes(start, end) {\n\tvar effect = /** @type {Effect} */ (active_effect);\n\tif (effect.nodes_start === null) {\n\t\teffect.nodes_start = start;\n\t\teffect.nodes_end = end;\n\t}\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function from_html(content, flags) {\n\tvar is_fragment = (flags & TEMPLATE_FRAGMENT) !== 0;\n\tvar use_import_node = (flags & TEMPLATE_USE_IMPORT_NODE) !== 0;\n\n\t/** @type {Node} */\n\tvar node;\n\n\t/**\n\t * Whether or not the first item is a text/element node. If not, we need to\n\t * create an additional comment node to act as `effect.nodes.start`\n\t */\n\tvar has_start = !content.startsWith('<!>');\n\n\treturn () => {\n\t\tif (hydrating) {\n\t\t\tassign_nodes(hydrate_node, null);\n\t\t\treturn hydrate_node;\n\t\t}\n\n\t\tif (node === undefined) {\n\t\t\tnode = create_fragment_from_html(has_start ? content : '<!>' + content);\n\t\t\tif (!is_fragment) node = /** @type {Node} */ (get_first_child(node));\n\t\t}\n\n\t\tvar clone = /** @type {TemplateNode} */ (\n\t\t\tuse_import_node || is_firefox ? document.importNode(node, true) : node.cloneNode(true)\n\t\t);\n\n\t\tif (is_fragment) {\n\t\t\tvar start = /** @type {TemplateNode} */ (get_first_child(clone));\n\t\t\tvar end = /** @type {TemplateNode} */ (clone.lastChild);\n\n\t\t\tassign_nodes(start, end);\n\t\t} else {\n\t\t\tassign_nodes(clone, clone);\n\t\t}\n\n\t\treturn clone;\n\t};\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @param {'svg' | 'math'} ns\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nfunction from_namespace(content, flags, ns = 'svg') {\n\t/**\n\t * Whether or not the first item is a text/element node. If not, we need to\n\t * create an additional comment node to act as `effect.nodes.start`\n\t */\n\tvar has_start = !content.startsWith('<!>');\n\n\tvar is_fragment = (flags & TEMPLATE_FRAGMENT) !== 0;\n\tvar wrapped = `<${ns}>${has_start ? content : '<!>' + content}</${ns}>`;\n\n\t/** @type {Element | DocumentFragment} */\n\tvar node;\n\n\treturn () => {\n\t\tif (hydrating) {\n\t\t\tassign_nodes(hydrate_node, null);\n\t\t\treturn hydrate_node;\n\t\t}\n\n\t\tif (!node) {\n\t\t\tvar fragment = /** @type {DocumentFragment} */ (create_fragment_from_html(wrapped));\n\t\t\tvar root = /** @type {Element} */ (get_first_child(fragment));\n\n\t\t\tif (is_fragment) {\n\t\t\t\tnode = document.createDocumentFragment();\n\t\t\t\twhile (get_first_child(root)) {\n\t\t\t\t\tnode.appendChild(/** @type {Node} */ (get_first_child(root)));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode = /** @type {Element} */ (get_first_child(root));\n\t\t\t}\n\t\t}\n\n\t\tvar clone = /** @type {TemplateNode} */ (node.cloneNode(true));\n\n\t\tif (is_fragment) {\n\t\t\tvar start = /** @type {TemplateNode} */ (get_first_child(clone));\n\t\t\tvar end = /** @type {TemplateNode} */ (clone.lastChild);\n\n\t\t\tassign_nodes(start, end);\n\t\t} else {\n\t\t\tassign_nodes(clone, clone);\n\t\t}\n\n\t\treturn clone;\n\t};\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function from_svg(content, flags) {\n\treturn from_namespace(content, flags, 'svg');\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function from_mathml(content, flags) {\n\treturn from_namespace(content, flags, 'math');\n}\n\n/**\n * @param {TemplateStructure[]} structure\n * @param {NAMESPACE_SVG | NAMESPACE_MATHML | undefined} [ns]\n */\nfunction fragment_from_tree(structure, ns) {\n\tvar fragment = create_fragment();\n\n\tfor (var item of structure) {\n\t\tif (typeof item === 'string') {\n\t\t\tfragment.append(create_text(item));\n\t\t\tcontinue;\n\t\t}\n\n\t\t// if `preserveComments === true`, comments are represented as `['// <data>']`\n\t\tif (item === undefined || item[0][0] === '/') {\n\t\t\tfragment.append(create_comment(item ? item[0].slice(3) : ''));\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst [name, attributes, ...children] = item;\n\n\t\tconst namespace = name === 'svg' ? NAMESPACE_SVG : name === 'math' ? NAMESPACE_MATHML : ns;\n\n\t\tvar element = create_element(name, namespace, attributes?.is);\n\n\t\tfor (var key in attributes) {\n\t\t\tset_attribute(element, key, attributes[key]);\n\t\t}\n\n\t\tif (children.length > 0) {\n\t\t\tvar target =\n\t\t\t\telement.tagName === 'TEMPLATE'\n\t\t\t\t\t? /** @type {HTMLTemplateElement} */ (element).content\n\t\t\t\t\t: element;\n\n\t\t\ttarget.append(\n\t\t\t\tfragment_from_tree(children, element.tagName === 'foreignObject' ? undefined : namespace)\n\t\t\t);\n\t\t}\n\n\t\tfragment.append(element);\n\t}\n\n\treturn fragment;\n}\n\n/**\n * @param {TemplateStructure[]} structure\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function from_tree(structure, flags) {\n\tvar is_fragment = (flags & TEMPLATE_FRAGMENT) !== 0;\n\tvar use_import_node = (flags & TEMPLATE_USE_IMPORT_NODE) !== 0;\n\n\t/** @type {Node} */\n\tvar node;\n\n\treturn () => {\n\t\tif (hydrating) {\n\t\t\tassign_nodes(hydrate_node, null);\n\t\t\treturn hydrate_node;\n\t\t}\n\n\t\tif (node === undefined) {\n\t\t\tconst ns =\n\t\t\t\t(flags & TEMPLATE_USE_SVG) !== 0\n\t\t\t\t\t? NAMESPACE_SVG\n\t\t\t\t\t: (flags & TEMPLATE_USE_MATHML) !== 0\n\t\t\t\t\t\t? NAMESPACE_MATHML\n\t\t\t\t\t\t: undefined;\n\n\t\t\tnode = fragment_from_tree(structure, ns);\n\t\t\tif (!is_fragment) node = /** @type {Node} */ (get_first_child(node));\n\t\t}\n\n\t\tvar clone = /** @type {TemplateNode} */ (\n\t\t\tuse_import_node || is_firefox ? document.importNode(node, true) : node.cloneNode(true)\n\t\t);\n\n\t\tif (is_fragment) {\n\t\t\tvar start = /** @type {TemplateNode} */ (get_first_child(clone));\n\t\t\tvar end = /** @type {TemplateNode} */ (clone.lastChild);\n\n\t\t\tassign_nodes(start, end);\n\t\t} else {\n\t\t\tassign_nodes(clone, clone);\n\t\t}\n\n\t\treturn clone;\n\t};\n}\n\n/**\n * @param {() => Element | DocumentFragment} fn\n */\nexport function with_script(fn) {\n\treturn () => run_scripts(fn());\n}\n\n/**\n * Creating a document fragment from HTML that contains script tags will not execute\n * the scripts. We need to replace the script tags with new ones so that they are executed.\n * @param {Element | DocumentFragment} node\n * @returns {Node | Node[]}\n */\nfunction run_scripts(node) {\n\t// scripts were SSR'd, in which case they will run\n\tif (hydrating) return node;\n\n\tconst is_fragment = node.nodeType === DOCUMENT_FRAGMENT_NODE;\n\tconst scripts =\n\t\t/** @type {HTMLElement} */ (node).tagName === 'SCRIPT'\n\t\t\t? [/** @type {HTMLScriptElement} */ (node)]\n\t\t\t: node.querySelectorAll('script');\n\tconst effect = /** @type {Effect} */ (active_effect);\n\n\tfor (const script of scripts) {\n\t\tconst clone = document.createElement('script');\n\t\tfor (var attribute of script.attributes) {\n\t\t\tclone.setAttribute(attribute.name, attribute.value);\n\t\t}\n\n\t\tclone.textContent = script.textContent;\n\n\t\t// The script has changed - if it's at the edges, the effect now points at dead nodes\n\t\tif (is_fragment ? node.firstChild === script : node === script) {\n\t\t\teffect.nodes_start = clone;\n\t\t}\n\t\tif (is_fragment ? node.lastChild === script : node === script) {\n\t\t\teffect.nodes_end = clone;\n\t\t}\n\n\t\tscript.replaceWith(clone);\n\t}\n\treturn node;\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @param {any} value\n */\nexport function text(value = '') {\n\tif (!hydrating) {\n\t\tvar t = create_text(value + '');\n\t\tassign_nodes(t, t);\n\t\treturn t;\n\t}\n\n\tvar node = hydrate_node;\n\n\tif (node.nodeType !== TEXT_NODE) {\n\t\t// if an {expression} is empty during SSR, we need to insert an empty text node\n\t\tnode.before((node = create_text()));\n\t\tset_hydrate_node(node);\n\t}\n\n\tassign_nodes(node, node);\n\treturn node;\n}\n\nexport function comment() {\n\t// we're not delegating to `template` here for performance reasons\n\tif (hydrating) {\n\t\tassign_nodes(hydrate_node, null);\n\t\treturn hydrate_node;\n\t}\n\n\tvar frag = document.createDocumentFragment();\n\tvar start = document.createComment('');\n\tvar anchor = create_text();\n\tfrag.append(start, anchor);\n\n\tassign_nodes(start, anchor);\n\n\treturn frag;\n}\n\n/**\n * Assign the created (or in hydration mode, traversed) dom elements to the current block\n * and insert the elements into the dom (in client mode).\n * @param {Text | Comment | Element} anchor\n * @param {DocumentFragment | Element} dom\n */\nexport function append(anchor, dom) {\n\tif (hydrating) {\n\t\t/** @type {Effect} */ (active_effect).nodes_end = hydrate_node;\n\t\thydrate_next();\n\t\treturn;\n\t}\n\n\tif (anchor === null) {\n\t\t// edge case — void `<svelte:element>` with content\n\t\treturn;\n\t}\n\n\tanchor.before(/** @type {Node} */ (dom));\n}\n\n/**\n * Create (or hydrate) an unique UID for the component instance.\n */\nexport function props_id() {\n\tif (\n\t\thydrating &&\n\t\thydrate_node &&\n\t\thydrate_node.nodeType === COMMENT_NODE &&\n\t\thydrate_node.textContent?.startsWith(`#`)\n\t) {\n\t\tconst id = hydrate_node.textContent.substring(1);\n\t\thydrate_next();\n\t\treturn id;\n\t}\n\n\t// @ts-expect-error This way we ensure the id is unique even across Svelte runtimes\n\t(window.__svelte ??= {}).uid ??= 1;\n\n\t// @ts-expect-error\n\treturn `c${window.__svelte.uid++}`;\n}\n","/** @param {string} html */\nexport function create_fragment_from_html(html) {\n\tvar elem = document.createElement('template');\n\telem.innerHTML = html.replaceAll('<!>', '<!---->'); // XHTML compliance\n\treturn elem.content;\n}\n","/** @import { ComponentContext, Effect, TemplateNode } from '#client' */\n/** @import { Component, ComponentType, SvelteComponent, MountOptions } from '../../index.js' */\nimport { DEV } from 'esm-env';\nimport {\n\tclear_text_content,\n\tcreate_text,\n\tget_first_child,\n\tget_next_sibling,\n\tinit_operations\n} from './dom/operations.js';\nimport { HYDRATION_END, HYDRATION_ERROR, HYDRATION_START } from '../../constants.js';\nimport { active_effect } from './runtime.js';\nimport { push, pop, component_context } from './context.js';\nimport { component_root, branch } from './reactivity/effects.js';\nimport {\n\thydrate_next,\n\thydrate_node,\n\thydrating,\n\tset_hydrate_node,\n\tset_hydrating\n} from './dom/hydration.js';\nimport { array_from } from '../shared/utils.js';\nimport {\n\tall_registered_events,\n\thandle_event_propagation,\n\troot_event_handles\n} from './dom/elements/events.js';\nimport { reset_head_anchor } from './dom/blocks/svelte-head.js';\nimport * as w from './warnings.js';\nimport * as e from './errors.js';\nimport { assign_nodes } from './dom/template.js';\nimport { is_passive_event } from '../../utils.js';\nimport { COMMENT_NODE } from './constants.js';\n\n/**\n * This is normally true — block effects should run their intro transitions —\n * but is false during hydration (unless `options.intro` is `true`) and\n * when creating the children of a `<svelte:element>` that just changed tag\n */\nexport let should_intro = true;\n\n/** @param {boolean} value */\nexport function set_should_intro(value) {\n\tshould_intro = value;\n}\n\n/**\n * @param {Element} text\n * @param {string} value\n * @returns {void}\n */\nexport function set_text(text, value) {\n\t// For objects, we apply string coercion (which might make things like $state array references in the template reactive) before diffing\n\tvar str = value == null ? '' : typeof value === 'object' ? value + '' : value;\n\t// @ts-expect-error\n\tif (str !== (text.__t ??= text.nodeValue)) {\n\t\t// @ts-expect-error\n\t\ttext.__t = str;\n\t\ttext.nodeValue = str + '';\n\t}\n}\n\n/**\n * Mounts a component to the given target and returns the exports and potentially the props (if compiled with `accessors: true`) of the component.\n * Transitions will play during the initial render unless the `intro` option is set to `false`.\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @param {ComponentType<SvelteComponent<Props>> | Component<Props, Exports, any>} component\n * @param {MountOptions<Props>} options\n * @returns {Exports}\n */\nexport function mount(component, options) {\n\treturn _mount(component, options);\n}\n\n/**\n * Hydrates a component on the given target and returns the exports and potentially the props (if compiled with `accessors: true`) of the component\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @param {ComponentType<SvelteComponent<Props>> | Component<Props, Exports, any>} component\n * @param {{} extends Props ? {\n * \t\ttarget: Document | Element | ShadowRoot;\n * \t\tprops?: Props;\n * \t\tevents?: Record<string, (e: any) => any>;\n *  \tcontext?: Map<any, any>;\n * \t\tintro?: boolean;\n * \t\trecover?: boolean;\n * \t} : {\n * \t\ttarget: Document | Element | ShadowRoot;\n * \t\tprops: Props;\n * \t\tevents?: Record<string, (e: any) => any>;\n *  \tcontext?: Map<any, any>;\n * \t\tintro?: boolean;\n * \t\trecover?: boolean;\n * \t}} options\n * @returns {Exports}\n */\nexport function hydrate(component, options) {\n\tinit_operations();\n\toptions.intro = options.intro ?? false;\n\tconst target = options.target;\n\tconst was_hydrating = hydrating;\n\tconst previous_hydrate_node = hydrate_node;\n\n\ttry {\n\t\tvar anchor = /** @type {TemplateNode} */ (get_first_child(target));\n\t\twhile (\n\t\t\tanchor &&\n\t\t\t(anchor.nodeType !== COMMENT_NODE || /** @type {Comment} */ (anchor).data !== HYDRATION_START)\n\t\t) {\n\t\t\tanchor = /** @type {TemplateNode} */ (get_next_sibling(anchor));\n\t\t}\n\n\t\tif (!anchor) {\n\t\t\tthrow HYDRATION_ERROR;\n\t\t}\n\n\t\tset_hydrating(true);\n\t\tset_hydrate_node(/** @type {Comment} */ (anchor));\n\t\thydrate_next();\n\n\t\tconst instance = _mount(component, { ...options, anchor });\n\n\t\tif (\n\t\t\thydrate_node === null ||\n\t\t\thydrate_node.nodeType !== COMMENT_NODE ||\n\t\t\t/** @type {Comment} */ (hydrate_node).data !== HYDRATION_END\n\t\t) {\n\t\t\tw.hydration_mismatch();\n\t\t\tthrow HYDRATION_ERROR;\n\t\t}\n\n\t\tset_hydrating(false);\n\n\t\treturn /**  @type {Exports} */ (instance);\n\t} catch (error) {\n\t\tif (error === HYDRATION_ERROR) {\n\t\t\tif (options.recover === false) {\n\t\t\t\te.hydration_failed();\n\t\t\t}\n\n\t\t\t// If an error occured above, the operations might not yet have been initialised.\n\t\t\tinit_operations();\n\t\t\tclear_text_content(target);\n\n\t\t\tset_hydrating(false);\n\t\t\treturn mount(component, options);\n\t\t}\n\n\t\tthrow error;\n\t} finally {\n\t\tset_hydrating(was_hydrating);\n\t\tset_hydrate_node(previous_hydrate_node);\n\t\treset_head_anchor();\n\t}\n}\n\n/** @type {Map<string, number>} */\nconst document_listeners = new Map();\n\n/**\n * @template {Record<string, any>} Exports\n * @param {ComponentType<SvelteComponent<any>> | Component<any>} Component\n * @param {MountOptions} options\n * @returns {Exports}\n */\nfunction _mount(Component, { target, anchor, props = {}, events, context, intro = true }) {\n\tinit_operations();\n\n\tvar registered_events = new Set();\n\n\t/** @param {Array<string>} events */\n\tvar event_handle = (events) => {\n\t\tfor (var i = 0; i < events.length; i++) {\n\t\t\tvar event_name = events[i];\n\n\t\t\tif (registered_events.has(event_name)) continue;\n\t\t\tregistered_events.add(event_name);\n\n\t\t\tvar passive = is_passive_event(event_name);\n\n\t\t\t// Add the event listener to both the container and the document.\n\t\t\t// The container listener ensures we catch events from within in case\n\t\t\t// the outer content stops propagation of the event.\n\t\t\ttarget.addEventListener(event_name, handle_event_propagation, { passive });\n\n\t\t\tvar n = document_listeners.get(event_name);\n\n\t\t\tif (n === undefined) {\n\t\t\t\t// The document listener ensures we catch events that originate from elements that were\n\t\t\t\t// manually moved outside of the container (e.g. via manual portals).\n\t\t\t\tdocument.addEventListener(event_name, handle_event_propagation, { passive });\n\t\t\t\tdocument_listeners.set(event_name, 1);\n\t\t\t} else {\n\t\t\t\tdocument_listeners.set(event_name, n + 1);\n\t\t\t}\n\t\t}\n\t};\n\n\tevent_handle(array_from(all_registered_events));\n\troot_event_handles.add(event_handle);\n\n\t/** @type {Exports} */\n\t// @ts-expect-error will be defined because the render effect runs synchronously\n\tvar component = undefined;\n\n\tvar unmount = component_root(() => {\n\t\tvar anchor_node = anchor ?? target.appendChild(create_text());\n\n\t\tbranch(() => {\n\t\t\tif (context) {\n\t\t\t\tpush({});\n\t\t\t\tvar ctx = /** @type {ComponentContext} */ (component_context);\n\t\t\t\tctx.c = context;\n\t\t\t}\n\n\t\t\tif (events) {\n\t\t\t\t// We can't spread the object or else we'd lose the state proxy stuff, if it is one\n\t\t\t\t/** @type {any} */ (props).$$events = events;\n\t\t\t}\n\n\t\t\tif (hydrating) {\n\t\t\t\tassign_nodes(/** @type {TemplateNode} */ (anchor_node), null);\n\t\t\t}\n\n\t\t\tshould_intro = intro;\n\t\t\t// @ts-expect-error the public typings are not what the actual function looks like\n\t\t\tcomponent = Component(anchor_node, props) || {};\n\t\t\tshould_intro = true;\n\n\t\t\tif (hydrating) {\n\t\t\t\t/** @type {Effect} */ (active_effect).nodes_end = hydrate_node;\n\t\t\t}\n\n\t\t\tif (context) {\n\t\t\t\tpop();\n\t\t\t}\n\t\t});\n\n\t\treturn () => {\n\t\t\tfor (var event_name of registered_events) {\n\t\t\t\ttarget.removeEventListener(event_name, handle_event_propagation);\n\n\t\t\t\tvar n = /** @type {number} */ (document_listeners.get(event_name));\n\n\t\t\t\tif (--n === 0) {\n\t\t\t\t\tdocument.removeEventListener(event_name, handle_event_propagation);\n\t\t\t\t\tdocument_listeners.delete(event_name);\n\t\t\t\t} else {\n\t\t\t\t\tdocument_listeners.set(event_name, n);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\troot_event_handles.delete(event_handle);\n\n\t\t\tif (anchor_node !== anchor) {\n\t\t\t\tanchor_node.parentNode?.removeChild(anchor_node);\n\t\t\t}\n\t\t};\n\t});\n\n\tmounted_components.set(component, unmount);\n\treturn component;\n}\n\n/**\n * References of the components that were mounted or hydrated.\n * Uses a `WeakMap` to avoid memory leaks.\n */\nlet mounted_components = new WeakMap();\n\n/**\n * Unmounts a component that was previously mounted using `mount` or `hydrate`.\n *\n * Since 5.13.0, if `options.outro` is `true`, [transitions](https://svelte.dev/docs/svelte/transition) will play before the component is removed from the DOM.\n *\n * Returns a `Promise` that resolves after transitions have completed if `options.outro` is true, or immediately otherwise (prior to 5.13.0, returns `void`).\n *\n * ```js\n * import { mount, unmount } from 'svelte';\n * import App from './App.svelte';\n *\n * const app = mount(App, { target: document.body });\n *\n * // later...\n * unmount(app, { outro: true });\n * ```\n * @param {Record<string, any>} component\n * @param {{ outro?: boolean }} [options]\n * @returns {Promise<void>}\n */\nexport function unmount(component, options) {\n\tconst fn = mounted_components.get(component);\n\n\tif (fn) {\n\t\tmounted_components.delete(component);\n\t\treturn fn(options);\n\t}\n\n\tif (DEV) {\n\t\tw.lifecycle_double_unmount();\n\t}\n\n\treturn Promise.resolve();\n}\n","/** @import { Effect, TemplateNode } from '#client' */\n/** @import { Batch } from '../../reactivity/batch.js'; */\nimport { EFFECT_TRANSPARENT } from '#client/constants';\nimport {\n\thydrate_next,\n\thydrate_node,\n\thydrating,\n\tread_hydration_instruction,\n\tremove_nodes,\n\tset_hydrate_node,\n\tset_hydrating\n} from '../hydration.js';\nimport { block, branch, pause_effect, resume_effect } from '../../reactivity/effects.js';\nimport { HYDRATION_START_ELSE, UNINITIALIZED } from '../../../../constants.js';\nimport { create_text, should_defer_append } from '../operations.js';\nimport { current_batch } from '../../reactivity/batch.js';\n\n// TODO reinstate https://github.com/sveltejs/svelte/pull/15250\n\n/**\n * @param {TemplateNode} node\n * @param {(branch: (fn: (anchor: Node) => void, flag?: boolean) => void) => void} fn\n * @param {boolean} [elseif] True if this is an `{:else if ...}` block rather than an `{#if ...}`, as that affects which transitions are considered 'local'\n * @returns {void}\n */\nexport function if_block(node, fn, elseif = false) {\n\tif (hydrating) {\n\t\thydrate_next();\n\t}\n\n\tvar anchor = node;\n\n\t/** @type {Effect | null} */\n\tvar consequent_effect = null;\n\n\t/** @type {Effect | null} */\n\tvar alternate_effect = null;\n\n\t/** @type {UNINITIALIZED | boolean | null} */\n\tvar condition = UNINITIALIZED;\n\n\tvar flags = elseif ? EFFECT_TRANSPARENT : 0;\n\n\tvar has_branch = false;\n\n\tconst set_branch = (/** @type {(anchor: Node) => void} */ fn, flag = true) => {\n\t\thas_branch = true;\n\t\tupdate_branch(flag, fn);\n\t};\n\n\t/** @type {DocumentFragment | null} */\n\tvar offscreen_fragment = null;\n\n\tfunction commit() {\n\t\tif (offscreen_fragment !== null) {\n\t\t\t// remove the anchor\n\t\t\t/** @type {Text} */ (offscreen_fragment.lastChild).remove();\n\n\t\t\tanchor.before(offscreen_fragment);\n\t\t\toffscreen_fragment = null;\n\t\t}\n\n\t\tvar active = condition ? consequent_effect : alternate_effect;\n\t\tvar inactive = condition ? alternate_effect : consequent_effect;\n\n\t\tif (active) {\n\t\t\tresume_effect(active);\n\t\t}\n\n\t\tif (inactive) {\n\t\t\tpause_effect(inactive, () => {\n\t\t\t\tif (condition) {\n\t\t\t\t\talternate_effect = null;\n\t\t\t\t} else {\n\t\t\t\t\tconsequent_effect = null;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tconst update_branch = (\n\t\t/** @type {boolean | null} */ new_condition,\n\t\t/** @type {null | ((anchor: Node) => void)} */ fn\n\t) => {\n\t\tif (condition === (condition = new_condition)) return;\n\n\t\t/** Whether or not there was a hydration mismatch. Needs to be a `let` or else it isn't treeshaken out */\n\t\tlet mismatch = false;\n\n\t\tif (hydrating) {\n\t\t\tconst is_else = read_hydration_instruction(anchor) === HYDRATION_START_ELSE;\n\n\t\t\tif (!!condition === is_else) {\n\t\t\t\t// Hydration mismatch: remove everything inside the anchor and start fresh.\n\t\t\t\t// This could happen with `{#if browser}...{/if}`, for example\n\t\t\t\tanchor = remove_nodes();\n\n\t\t\t\tset_hydrate_node(anchor);\n\t\t\t\tset_hydrating(false);\n\t\t\t\tmismatch = true;\n\t\t\t}\n\t\t}\n\n\t\tvar defer = should_defer_append();\n\t\tvar target = anchor;\n\n\t\tif (defer) {\n\t\t\toffscreen_fragment = document.createDocumentFragment();\n\t\t\toffscreen_fragment.append((target = create_text()));\n\t\t}\n\n\t\tif (condition) {\n\t\t\tconsequent_effect ??= fn && branch(() => fn(target));\n\t\t} else {\n\t\t\talternate_effect ??= fn && branch(() => fn(target));\n\t\t}\n\n\t\tif (defer) {\n\t\t\tvar batch = /** @type {Batch} */ (current_batch);\n\n\t\t\tvar active = condition ? consequent_effect : alternate_effect;\n\t\t\tvar inactive = condition ? alternate_effect : consequent_effect;\n\n\t\t\tif (active) batch.skipped_effects.delete(active);\n\t\t\tif (inactive) batch.skipped_effects.add(inactive);\n\n\t\t\tbatch.add_callback(commit);\n\t\t} else {\n\t\t\tcommit();\n\t\t}\n\n\t\tif (mismatch) {\n\t\t\t// continue in hydration mode\n\t\t\tset_hydrating(true);\n\t\t}\n\t};\n\n\tblock(() => {\n\t\thas_branch = false;\n\t\tfn(set_branch);\n\t\tif (!has_branch) {\n\t\t\tupdate_branch(null, null);\n\t\t}\n\t}, flags);\n\n\tif (hydrating) {\n\t\tanchor = hydrate_node;\n\t}\n}\n","import { DEV } from 'esm-env';\nimport { register_style } from '../dev/css.js';\nimport { effect } from '../reactivity/effects.js';\n\n/**\n * @param {Node} anchor\n * @param {{ hash: string, code: string }} css\n */\nexport function append_styles(anchor, css) {\n\t// Use `queue_micro_task` to ensure `anchor` is in the DOM, otherwise getRootNode() will yield wrong results\n\teffect(() => {\n\t\tvar root = anchor.getRootNode();\n\n\t\tvar target = /** @type {ShadowRoot} */ (root).host\n\t\t\t? /** @type {ShadowRoot} */ (root)\n\t\t\t: /** @type {Document} */ (root).head ?? /** @type {Document} */ (root.ownerDocument).head;\n\n\t\t// Always querying the DOM is roughly the same perf as additionally checking for presence in a map first assuming\n\t\t// that you'll get cache hits half of the time, so we just always query the dom for simplicity and code savings.\n\t\tif (!target.querySelector('#' + css.hash)) {\n\t\t\tconst style = document.createElement('style');\n\t\t\tstyle.id = css.hash;\n\t\t\tstyle.textContent = css.code;\n\n\t\t\ttarget.appendChild(style);\n\n\t\t\tif (DEV) {\n\t\t\t\tregister_style(css.hash, style);\n\t\t\t}\n\t\t}\n\t});\n}\n","/** @import { ActionPayload } from '#client' */\nimport { effect, render_effect } from '../../reactivity/effects.js';\nimport { safe_not_equal } from '../../reactivity/equality.js';\nimport { deep_read_state, untrack } from '../../runtime.js';\n\n/**\n * @template P\n * @param {Element} dom\n * @param {(dom: Element, value?: P) => ActionPayload<P>} action\n * @param {() => P} [get_value]\n * @returns {void}\n */\nexport function action(dom, action, get_value) {\n\teffect(() => {\n\t\tvar payload = untrack(() => action(dom, get_value?.()) || {});\n\n\t\tif (get_value && payload?.update) {\n\t\t\tvar inited = false;\n\t\t\t/** @type {P} */\n\t\t\tvar prev = /** @type {any} */ ({}); // initialize with something so it's never equal on first run\n\n\t\t\trender_effect(() => {\n\t\t\t\tvar value = get_value();\n\n\t\t\t\t// Action's update method is coarse-grained, i.e. when anything in the passed value changes, update.\n\t\t\t\t// This works in legacy mode because of mutable_source being updated as a whole, but when using $state\n\t\t\t\t// together with actions and mutation, it wouldn't notice the change without a deep read.\n\t\t\t\tdeep_read_state(value);\n\n\t\t\t\tif (inited && safe_not_equal(prev, value)) {\n\t\t\t\t\tprev = value;\n\t\t\t\t\t/** @type {Function} */ (payload.update)(value);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tinited = true;\n\t\t}\n\n\t\tif (payload?.destroy) {\n\t\t\treturn () => /** @type {Function} */ (payload.destroy)();\n\t\t}\n\t});\n}\n","import { escape_html } from '../../escaping.js';\nimport { clsx as _clsx } from 'clsx';\n\n/**\n * `<div translate={false}>` should be rendered as `<div translate=\"no\">` and _not_\n * `<div translate=\"false\">`, which is equivalent to `<div translate=\"yes\">`. There\n * may be other odd cases that need to be added to this list in future\n * @type {Record<string, Map<any, string>>}\n */\nconst replacements = {\n\ttranslate: new Map([\n\t\t[true, 'yes'],\n\t\t[false, 'no']\n\t])\n};\n\n/**\n * @template V\n * @param {string} name\n * @param {V} value\n * @param {boolean} [is_boolean]\n * @returns {string}\n */\nexport function attr(name, value, is_boolean = false) {\n\tif (value == null || (!value && is_boolean)) return '';\n\tconst normalized = (name in replacements && replacements[name].get(value)) || value;\n\tconst assignment = is_boolean ? '' : `=\"${escape_html(normalized, true)}\"`;\n\treturn ` ${name}${assignment}`;\n}\n\n/**\n * Small wrapper around clsx to preserve Svelte's (weird) handling of falsy values.\n * TODO Svelte 6 revisit this, and likely turn all falsy values into the empty string (what clsx also does)\n * @param  {any} value\n */\nexport function clsx(value) {\n\tif (typeof value === 'object') {\n\t\treturn _clsx(value);\n\t} else {\n\t\treturn value ?? '';\n\t}\n}\n\nconst whitespace = [...' \\t\\n\\r\\f\\u00a0\\u000b\\ufeff'];\n\n/**\n * @param {any} value\n * @param {string | null} [hash]\n * @param {Record<string, boolean>} [directives]\n * @returns {string | null}\n */\nexport function to_class(value, hash, directives) {\n\tvar classname = value == null ? '' : '' + value;\n\n\tif (hash) {\n\t\tclassname = classname ? classname + ' ' + hash : hash;\n\t}\n\n\tif (directives) {\n\t\tfor (var key in directives) {\n\t\t\tif (directives[key]) {\n\t\t\t\tclassname = classname ? classname + ' ' + key : key;\n\t\t\t} else if (classname.length) {\n\t\t\t\tvar len = key.length;\n\t\t\t\tvar a = 0;\n\n\t\t\t\twhile ((a = classname.indexOf(key, a)) >= 0) {\n\t\t\t\t\tvar b = a + len;\n\n\t\t\t\t\tif (\n\t\t\t\t\t\t(a === 0 || whitespace.includes(classname[a - 1])) &&\n\t\t\t\t\t\t(b === classname.length || whitespace.includes(classname[b]))\n\t\t\t\t\t) {\n\t\t\t\t\t\tclassname = (a === 0 ? '' : classname.substring(0, a)) + classname.substring(b + 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ta = b;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn classname === '' ? null : classname;\n}\n\n/**\n *\n * @param {Record<string,any>} styles\n * @param {boolean} important\n */\nfunction append_styles(styles, important = false) {\n\tvar separator = important ? ' !important;' : ';';\n\tvar css = '';\n\n\tfor (var key in styles) {\n\t\tvar value = styles[key];\n\t\tif (value != null && value !== '') {\n\t\t\tcss += ' ' + key + ': ' + value + separator;\n\t\t}\n\t}\n\n\treturn css;\n}\n\n/**\n * @param {string} name\n * @returns {string}\n */\nfunction to_css_name(name) {\n\tif (name[0] !== '-' || name[1] !== '-') {\n\t\treturn name.toLowerCase();\n\t}\n\treturn name;\n}\n\n/**\n * @param {any} value\n * @param {Record<string, any> | [Record<string, any>, Record<string, any>]} [styles]\n * @returns {string | null}\n */\nexport function to_style(value, styles) {\n\tif (styles) {\n\t\tvar new_style = '';\n\n\t\t/** @type {Record<string,any> | undefined} */\n\t\tvar normal_styles;\n\n\t\t/** @type {Record<string,any> | undefined} */\n\t\tvar important_styles;\n\n\t\tif (Array.isArray(styles)) {\n\t\t\tnormal_styles = styles[0];\n\t\t\timportant_styles = styles[1];\n\t\t} else {\n\t\t\tnormal_styles = styles;\n\t\t}\n\n\t\tif (value) {\n\t\t\tvalue = String(value)\n\t\t\t\t.replaceAll(/\\s*\\/\\*.*?\\*\\/\\s*/g, '')\n\t\t\t\t.trim();\n\n\t\t\t/** @type {boolean | '\"' | \"'\"} */\n\t\t\tvar in_str = false;\n\t\t\tvar in_apo = 0;\n\t\t\tvar in_comment = false;\n\n\t\t\tvar reserved_names = [];\n\n\t\t\tif (normal_styles) {\n\t\t\t\treserved_names.push(...Object.keys(normal_styles).map(to_css_name));\n\t\t\t}\n\t\t\tif (important_styles) {\n\t\t\t\treserved_names.push(...Object.keys(important_styles).map(to_css_name));\n\t\t\t}\n\n\t\t\tvar start_index = 0;\n\t\t\tvar name_index = -1;\n\n\t\t\tconst len = value.length;\n\t\t\tfor (var i = 0; i < len; i++) {\n\t\t\t\tvar c = value[i];\n\n\t\t\t\tif (in_comment) {\n\t\t\t\t\tif (c === '/' && value[i - 1] === '*') {\n\t\t\t\t\t\tin_comment = false;\n\t\t\t\t\t}\n\t\t\t\t} else if (in_str) {\n\t\t\t\t\tif (in_str === c) {\n\t\t\t\t\t\tin_str = false;\n\t\t\t\t\t}\n\t\t\t\t} else if (c === '/' && value[i + 1] === '*') {\n\t\t\t\t\tin_comment = true;\n\t\t\t\t} else if (c === '\"' || c === \"'\") {\n\t\t\t\t\tin_str = c;\n\t\t\t\t} else if (c === '(') {\n\t\t\t\t\tin_apo++;\n\t\t\t\t} else if (c === ')') {\n\t\t\t\t\tin_apo--;\n\t\t\t\t}\n\n\t\t\t\tif (!in_comment && in_str === false && in_apo === 0) {\n\t\t\t\t\tif (c === ':' && name_index === -1) {\n\t\t\t\t\t\tname_index = i;\n\t\t\t\t\t} else if (c === ';' || i === len - 1) {\n\t\t\t\t\t\tif (name_index !== -1) {\n\t\t\t\t\t\t\tvar name = to_css_name(value.substring(start_index, name_index).trim());\n\n\t\t\t\t\t\t\tif (!reserved_names.includes(name)) {\n\t\t\t\t\t\t\t\tif (c !== ';') {\n\t\t\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tvar property = value.substring(start_index, i).trim();\n\t\t\t\t\t\t\t\tnew_style += ' ' + property + ';';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstart_index = i + 1;\n\t\t\t\t\t\tname_index = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (normal_styles) {\n\t\t\tnew_style += append_styles(normal_styles);\n\t\t}\n\n\t\tif (important_styles) {\n\t\t\tnew_style += append_styles(important_styles, true);\n\t\t}\n\n\t\tnew_style = new_style.trim();\n\t\treturn new_style === '' ? null : new_style;\n\t}\n\n\treturn value == null ? null : String(value);\n}\n","import { to_class } from '../../../shared/attributes.js';\nimport { hydrating } from '../hydration.js';\n\n/**\n * @param {Element} dom\n * @param {boolean | number} is_html\n * @param {string | null} value\n * @param {string} [hash]\n * @param {Record<string, any>} [prev_classes]\n * @param {Record<string, any>} [next_classes]\n * @returns {Record<string, boolean> | undefined}\n */\nexport function set_class(dom, is_html, value, hash, prev_classes, next_classes) {\n\t// @ts-expect-error need to add __className to patched prototype\n\tvar prev = dom.__className;\n\n\tif (\n\t\thydrating ||\n\t\tprev !== value ||\n\t\tprev === undefined // for edge case of `class={undefined}`\n\t) {\n\t\tvar next_class_name = to_class(value, hash, next_classes);\n\n\t\tif (!hydrating || next_class_name !== dom.getAttribute('class')) {\n\t\t\t// Removing the attribute when the value is only an empty string causes\n\t\t\t// performance issues vs simply making the className an empty string. So\n\t\t\t// we should only remove the class if the value is nullish\n\t\t\t// and there no hash/directives :\n\t\t\tif (next_class_name == null) {\n\t\t\t\tdom.removeAttribute('class');\n\t\t\t} else if (is_html) {\n\t\t\t\tdom.className = next_class_name;\n\t\t\t} else {\n\t\t\t\tdom.setAttribute('class', next_class_name);\n\t\t\t}\n\t\t}\n\n\t\t// @ts-expect-error need to add __className to patched prototype\n\t\tdom.__className = value;\n\t} else if (next_classes && prev_classes !== next_classes) {\n\t\tfor (var key in next_classes) {\n\t\t\tvar is_present = !!next_classes[key];\n\n\t\t\tif (prev_classes == null || is_present !== !!prev_classes[key]) {\n\t\t\t\tdom.classList.toggle(key, is_present);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn next_classes;\n}\n","import { PUBLIC_VERSION } from '../version.js';\n\nif (typeof window !== 'undefined') {\n\t// @ts-expect-error\n\t((window.__svelte ??= {}).v ??= new Set()).add(PUBLIC_VERSION);\n}\n","// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n * @type {string}\n */\nexport const VERSION = '5.37.3';\nexport const PUBLIC_VERSION = '5';\n","/**\n * Wallet state store using Svelte 5 runes\n */\n\nexport interface WalletState {\n  address: string | null;\n  chainId: number;\n  isConnected: boolean;\n  balance: string;\n}\n\nexport interface SubscriptionState {\n  isActive: boolean;\n  plan: string | null;\n  expiresAt: number | null;\n}\n\nclass WalletStore {\n  // Reactive state using Svelte 5 $state rune\n  address = $state<string | null>(null);\n  chainId = $state<number>(1);\n  isConnecting = $state(false);\n  balance = $state<string>('0.00');\n  \n  // Subscription state\n  subscription = $state<SubscriptionState>({\n    isActive: false,\n    plan: null,\n    expiresAt: null\n  });\n  \n  // Derived state\n  get isConnected() {\n    return this.address !== null;\n  }\n  \n  get displayAddress() {\n    if (!this.address) return '';\n    return `${this.address.substring(0, 6)}...${this.address.substring(this.address.length - 4)}`;\n  }\n  \n  // Actions\n  async connect() {\n    this.isConnecting = true;\n    \n    // Simulate wallet connection\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    \n    this.address = '0x' + Math.random().toString(16).substring(2, 42);\n    this.chainId = 1;\n    this.balance = (Math.random() * 10).toFixed(2);\n    this.isConnecting = false;\n    \n    // Emit event\n    this.emitEvent('connected', {\n      address: this.address,\n      chainId: this.chainId\n    });\n  }\n  \n  disconnect() {\n    this.address = null;\n    this.balance = '0.00';\n    this.emitEvent('disconnected');\n  }\n  \n  async checkSubscription() {\n    // Simulate subscription check\n    return this.subscription;\n  }\n  \n  async purchaseSubscription(planId: string) {\n    // Simulate subscription purchase\n    this.subscription = {\n      isActive: true,\n      plan: planId === '1' ? 'Basic' : 'Pro',\n      expiresAt: Date.now() + 30 * 24 * 60 * 60 * 1000\n    };\n    \n    this.emitEvent('subscriptionChanged', {\n      status: 'active',\n      isActive: true,\n      plan: this.subscription.plan\n    });\n  }\n  \n  private emitEvent(eventName: string, data?: any) {\n    if (typeof window !== 'undefined') {\n      window.dispatchEvent(\n        new CustomEvent(`walletkit:${eventName}`, { detail: data })\n      );\n    }\n  }\n}\n\n// Export singleton instance\nexport const walletStore = new WalletStore();","<script lang=\"ts\">\n  import { walletStore } from '$lib/stores/wallet.svelte';\n  \n  interface Props {\n    position: { side: 'left' | 'right'; y: number };\n    onclose: () => void;\n  }\n  \n  let { position, onclose }: Props = $props();\n  \n  let showPlans = $state(false);\n  \n  async function handleConnect() {\n    await walletStore.connect();\n  }\n  \n  function handleDisconnect() {\n    walletStore.disconnect();\n  }\n  \n  async function handleSubscribe(planId: string) {\n    if (!walletStore.isConnected) {\n      alert('Please connect your wallet first');\n      return;\n    }\n    \n    await walletStore.purchaseSubscription(planId);\n    showPlans = false;\n  }\n  \n  function formatExpiry(timestamp: number | null) {\n    if (!timestamp) return '-';\n    return new Date(timestamp).toLocaleDateString();\n  }\n</script>\n\n<div \n  class=\"wk-panel\"\n  class:wk-panel-left={position.side === 'left'}\n  class:wk-panel-right={position.side === 'right'}\n>\n  <div class=\"wk-panel-header\">\n    <h3>Account Center</h3>\n    <button class=\"wk-close-btn\" onclick={onclose}>×</button>\n  </div>\n  \n  <div class=\"wk-panel-body\">\n    <!-- Connection Section -->\n    <div class=\"wk-section\">\n      {#if !walletStore.isConnected}\n        <div class=\"wk-not-connected\">\n          <div class=\"wk-icon-wallet\">\n            <svg width=\"48\" height=\"48\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M21 18V19C21 20.1 20.1 21 19 21H5C3.89 21 3 20.1 3 19V5C3 3.9 3.89 3 5 3H19C20.1 3 21 3.9 21 5V6H12C10.89 6 10 6.9 10 8V16C10 17.1 10.89 18 12 18H21ZM12 16H22V8H12V16ZM16 13.5C15.17 13.5 14.5 12.83 14.5 12C14.5 11.17 15.17 10.5 16 10.5C16.83 10.5 17.5 11.17 17.5 12C17.5 12.83 16.83 13.5 16 13.5Z\" fill=\"currentColor\"/>\n            </svg>\n          </div>\n          <h4>Connect Your Wallet</h4>\n          <p>Connect your wallet to access all features</p>\n          <button class=\"wk-connect-btn\" onclick={handleConnect} disabled={walletStore.isConnecting}>\n            {walletStore.isConnecting ? 'Connecting...' : 'Connect Wallet'}\n          </button>\n        </div>\n      {:else}\n        <div class=\"wk-connected\">\n          <div class=\"wk-account-info\">\n            <div class=\"wk-account-avatar\"></div>\n            <div class=\"wk-account-details\">\n              <div class=\"wk-account-address\">{walletStore.displayAddress}</div>\n              <div class=\"wk-account-balance\">{walletStore.balance} ETH</div>\n            </div>\n          </div>\n          <button class=\"wk-disconnect-btn\" onclick={handleDisconnect}>Disconnect</button>\n        </div>\n        \n        <!-- Network Section -->\n        <div class=\"wk-network-section\">\n          <div class=\"wk-section-title\">Network</div>\n          <div class=\"wk-network-selector\">\n            <div class=\"wk-current-network\">\n              <span class=\"wk-network-dot\"></span>\n              <span>Ethereum Mainnet</span>\n            </div>\n          </div>\n        </div>\n      {/if}\n    </div>\n    \n    <!-- Subscription Section -->\n    <div class=\"wk-section\">\n      <div class=\"wk-section-title\">Subscription</div>\n      \n      {#if !walletStore.subscription.isActive}\n        <div class=\"wk-subscription-status\">\n          <div class=\"wk-subscription-icon\">⭐</div>\n          <h4>No Active Subscription</h4>\n          <p>Subscribe to unlock premium features</p>\n          <button class=\"wk-subscribe-btn\" onclick={() => showPlans = true}>\n            View Plans\n          </button>\n        </div>\n      {:else}\n        <div class=\"wk-subscription-active\">\n          <div class=\"wk-subscription-badge\">{walletStore.subscription.plan}</div>\n          <div class=\"wk-subscription-details\">\n            <div>Active until: {formatExpiry(walletStore.subscription.expiresAt)}</div>\n            <button class=\"wk-manage-btn\">Manage Subscription</button>\n          </div>\n        </div>\n      {/if}\n      \n      <!-- Subscription Plans -->\n      {#if showPlans}\n        <div class=\"wk-plans-modal\">\n          <button class=\"wk-back-btn\" onclick={() => showPlans = false}>← Back</button>\n          <div class=\"wk-plans-grid\">\n            <div class=\"wk-plan-card\">\n              <h4>Basic</h4>\n              <div class=\"wk-plan-price\">0.01 ETH/month</div>\n              <ul class=\"wk-plan-features\">\n                <li>✓ Basic features</li>\n                <li>✓ 10 API calls/day</li>\n              </ul>\n              <button class=\"wk-plan-select\" onclick={() => handleSubscribe('1')}>\n                Select Basic\n              </button>\n            </div>\n            <div class=\"wk-plan-card wk-plan-featured\">\n              <div class=\"wk-plan-badge\">POPULAR</div>\n              <h4>Pro</h4>\n              <div class=\"wk-plan-price\">0.05 ETH/month</div>\n              <ul class=\"wk-plan-features\">\n                <li>✓ All features</li>\n                <li>✓ Unlimited API calls</li>\n                <li>✓ Priority support</li>\n              </ul>\n              <button class=\"wk-plan-select\" onclick={() => handleSubscribe('2')}>\n                Select Pro\n              </button>\n            </div>\n          </div>\n        </div>\n      {/if}\n    </div>\n  </div>\n</div>\n\n<style>\n  .wk-panel {\n    position: absolute;\n    bottom: 80px;\n    width: 380px;\n    background: white;\n    border-radius: 16px;\n    box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);\n    display: flex;\n    flex-direction: column;\n    max-height: 600px;\n    animation: slideIn 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n  }\n  \n  .wk-panel.wk-panel-left {\n    right: auto;\n    left: 0;\n  }\n  \n  .wk-panel.wk-panel-right {\n    left: auto;\n    right: 0;\n  }\n  \n  @keyframes slideIn {\n    from {\n      opacity: 0;\n      transform: translateY(20px);\n    }\n    to {\n      opacity: 1;\n      transform: translateY(0);\n    }\n  }\n  \n  .wk-panel-header {\n    padding: 20px;\n    border-bottom: 1px solid #e5e7eb;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n  \n  .wk-panel-header h3 {\n    margin: 0;\n    font-size: 18px;\n    font-weight: 600;\n    color: #1f2937;\n  }\n  \n  .wk-close-btn {\n    background: none;\n    border: none;\n    font-size: 24px;\n    cursor: pointer;\n    color: #6b7280;\n    width: 32px;\n    height: 32px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 8px;\n    transition: all 0.2s;\n  }\n  \n  .wk-close-btn:hover {\n    background: #f3f4f6;\n  }\n  \n  .wk-panel-body {\n    flex: 1;\n    overflow-y: auto;\n    padding: 20px;\n  }\n  \n  .wk-section {\n    margin-bottom: 24px;\n  }\n  \n  .wk-section:last-child {\n    margin-bottom: 0;\n  }\n  \n  .wk-section-title {\n    font-size: 14px;\n    font-weight: 600;\n    color: #6b7280;\n    margin-bottom: 12px;\n    text-transform: uppercase;\n    letter-spacing: 0.5px;\n  }\n  \n  .wk-not-connected {\n    text-align: center;\n    padding: 24px;\n    background: #f9fafb;\n    border-radius: 12px;\n  }\n  \n  .wk-icon-wallet {\n    color: #6366f1;\n    margin-bottom: 16px;\n    display: flex;\n    justify-content: center;\n  }\n  \n  .wk-not-connected h4 {\n    margin: 0 0 8px 0;\n    font-size: 16px;\n    color: #1f2937;\n  }\n  \n  .wk-not-connected p {\n    margin: 0 0 16px 0;\n    color: #6b7280;\n    font-size: 14px;\n  }\n  \n  .wk-connect-btn, .wk-subscribe-btn, .wk-plan-select {\n    background: linear-gradient(135deg, #6366f1 0%, #8b5cf6 100%);\n    color: white;\n    border: none;\n    padding: 12px 24px;\n    border-radius: 8px;\n    font-size: 14px;\n    font-weight: 600;\n    cursor: pointer;\n    transition: all 0.3s;\n  }\n  \n  .wk-connect-btn:hover:not(:disabled), \n  .wk-subscribe-btn:hover, \n  .wk-plan-select:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 4px 12px rgba(99, 102, 241, 0.3);\n  }\n  \n  .wk-connect-btn:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n  }\n  \n  .wk-connected {\n    padding: 16px;\n    background: #f9fafb;\n    border-radius: 12px;\n  }\n  \n  .wk-account-info {\n    display: flex;\n    align-items: center;\n    margin-bottom: 16px;\n  }\n  \n  .wk-account-avatar {\n    width: 48px;\n    height: 48px;\n    border-radius: 50%;\n    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n    margin-right: 12px;\n  }\n  \n  .wk-account-address {\n    font-family: monospace;\n    font-size: 14px;\n    font-weight: 600;\n    color: #1f2937;\n  }\n  \n  .wk-account-balance {\n    color: #6b7280;\n    font-size: 14px;\n    margin-top: 4px;\n  }\n  \n  .wk-disconnect-btn, .wk-manage-btn {\n    background: #e5e7eb;\n    color: #374151;\n    border: none;\n    padding: 8px 16px;\n    border-radius: 6px;\n    font-size: 14px;\n    cursor: pointer;\n    transition: all 0.2s;\n    width: 100%;\n  }\n  \n  .wk-disconnect-btn:hover, .wk-manage-btn:hover {\n    background: #d1d5db;\n  }\n  \n  .wk-network-section {\n    margin-top: 16px;\n  }\n  \n  .wk-network-selector {\n    display: flex;\n    align-items: center;\n    padding: 12px;\n    background: white;\n    border: 1px solid #e5e7eb;\n    border-radius: 8px;\n  }\n  \n  .wk-current-network {\n    flex: 1;\n    display: flex;\n    align-items: center;\n    color: #1f2937;\n  }\n  \n  .wk-network-dot {\n    width: 8px;\n    height: 8px;\n    border-radius: 50%;\n    background: #10b981;\n    margin-right: 8px;\n  }\n  \n  .wk-subscription-status {\n    text-align: center;\n    padding: 24px;\n    background: #fef3c7;\n    border-radius: 12px;\n  }\n  \n  .wk-subscription-icon {\n    font-size: 48px;\n    margin-bottom: 12px;\n  }\n  \n  .wk-subscription-status h4 {\n    margin: 0 0 8px 0;\n    font-size: 16px;\n    color: #1f2937;\n  }\n  \n  .wk-subscription-status p {\n    margin: 0 0 16px 0;\n    color: #92400e;\n    font-size: 14px;\n  }\n  \n  .wk-subscription-active {\n    padding: 16px;\n    background: #d1fae5;\n    border-radius: 12px;\n  }\n  \n  .wk-subscription-badge {\n    display: inline-block;\n    background: #059669;\n    color: white;\n    padding: 4px 8px;\n    border-radius: 4px;\n    font-size: 12px;\n    font-weight: 600;\n    margin-bottom: 8px;\n  }\n  \n  .wk-subscription-details {\n    color: #065f46;\n    font-size: 14px;\n  }\n  \n  .wk-subscription-details div {\n    margin-bottom: 8px;\n  }\n  \n  .wk-plans-modal {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: white;\n    padding: 20px;\n    overflow-y: auto;\n    border-radius: 16px;\n  }\n  \n  .wk-back-btn {\n    background: none;\n    border: none;\n    color: #6366f1;\n    font-size: 14px;\n    cursor: pointer;\n    padding: 8px 0;\n    margin-bottom: 16px;\n  }\n  \n  .wk-plans-grid {\n    display: grid;\n    gap: 16px;\n  }\n  \n  .wk-plan-card {\n    padding: 20px;\n    border: 2px solid #e5e7eb;\n    border-radius: 12px;\n    position: relative;\n  }\n  \n  .wk-plan-featured {\n    border-color: #6366f1;\n    box-shadow: 0 0 0 1px #6366f1;\n  }\n  \n  .wk-plan-badge {\n    position: absolute;\n    top: -10px;\n    right: 20px;\n    background: #6366f1;\n    color: white;\n    padding: 4px 12px;\n    border-radius: 12px;\n    font-size: 11px;\n    font-weight: 600;\n  }\n  \n  .wk-plan-card h4 {\n    margin: 0 0 8px 0;\n    font-size: 18px;\n    color: #1f2937;\n  }\n  \n  .wk-plan-price {\n    font-size: 24px;\n    font-weight: 600;\n    color: #6366f1;\n    margin-bottom: 16px;\n  }\n  \n  .wk-plan-features {\n    list-style: none;\n    padding: 0;\n    margin: 0 0 16px 0;\n  }\n  \n  .wk-plan-features li {\n    padding: 8px 0;\n    font-size: 14px;\n    color: #4b5563;\n  }\n  \n  @media (max-width: 480px) {\n    .wk-panel {\n      width: calc(100vw - 40px);\n      max-width: 380px;\n    }\n  }\n</style>","<script lang=\"ts\">\n  import { draggable } from '$lib/actions/draggable';\n  import { walletStore } from '$lib/stores/wallet.svelte';\n  import AccountPanel from './AccountPanel.svelte';\n  \n  let isOpen = $state(false);\n  let position = $state<{ side: 'left' | 'right'; y: number }>({\n    side: 'right',\n    y: window.innerHeight / 2\n  });\n  let isDragging = $state(false);\n  \n  // Prevent panel toggle when dragging\n  let clickStartTime = 0;\n  let hasDragged = false;\n  \n  function handleMouseDown() {\n    clickStartTime = Date.now();\n    hasDragged = false;\n  }\n  \n  function handleClick() {\n    // Only toggle if it was a quick click (not a drag)\n    const clickDuration = Date.now() - clickStartTime;\n    if (clickDuration < 200 && !hasDragged) {\n      isOpen = !isOpen;\n    }\n  }\n  \n  function handleDragStart() {\n    hasDragged = true;\n    isDragging = true;\n  }\n  \n  function handleDragEnd(pos: { side: 'left' | 'right'; y: number }) {\n    position = pos;\n    isDragging = false;\n  }\n  \n  // Public API methods for standalone mode\n  export function open() {\n    isOpen = true;\n  }\n  \n  export function close() {\n    isOpen = false;\n  }\n  \n  export function toggle() {\n    isOpen = !isOpen;\n  }\n  \n  $effect(() => {\n    // Update status indicator color based on connection\n    const indicator = document.querySelector('.wk-status-indicator');\n    if (indicator) {\n      (indicator as HTMLElement).style.background = walletStore.isConnected ? '#10b981' : '#ef4444';\n    }\n  });\n</script>\n\n<div id=\"walletkit-widget-root\" class:wk-dragging={isDragging}>\n  <!-- Floating Assistant Button -->\n  <button\n    class=\"wk-floating-assistant\"\n    class:wk-dragging={isDragging}\n    use:draggable={{\n      onDragStart: handleDragStart,\n      onDragEnd: handleDragEnd,\n      disabled: isOpen\n    }}\n    onmousedown={handleMouseDown}\n    onclick={handleClick}\n    aria-label=\"Open wallet assistant\"\n  >\n    <div class=\"wk-assistant-icon\">\n      <svg width=\"32\" height=\"32\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12C2 17.52 6.48 22 12 22C17.52 22 22 17.52 22 12C22 6.48 17.52 2 12 2ZM12 20C7.59 20 4 16.41 4 12C4 7.59 7.59 4 12 4C16.41 4 20 7.59 20 12C20 16.41 16.41 20 12 20Z\" fill=\"currentColor\"/>\n        <path d=\"M15.5 11C16.33 11 17 10.33 17 9.5C17 8.67 16.33 8 15.5 8C14.67 8 14 8.67 14 9.5C14 10.33 14.67 11 15.5 11Z\" fill=\"currentColor\"/>\n        <path d=\"M8.5 11C9.33 11 10 10.33 10 9.5C10 8.67 9.33 8 8.5 8C7.67 8 7 8.67 7 9.5C7 10.33 7.67 11 8.5 11Z\" fill=\"currentColor\"/>\n        <path d=\"M12 17.5C14.33 17.5 16.31 16.04 17.11 14H6.89C7.69 16.04 9.67 17.5 12 17.5Z\" fill=\"currentColor\"/>\n      </svg>\n    </div>\n    <div class=\"wk-status-indicator\"></div>\n  </button>\n  \n  <!-- Account Panel -->\n  {#if isOpen}\n    <AccountPanel \n      {position}\n      onclose={() => isOpen = false}\n    />\n  {/if}\n</div>\n\n<style>\n  #walletkit-widget-root {\n    position: fixed;\n    right: 20px;\n    top: 50%;\n    transform: translateY(-50%);\n    z-index: 999999;\n    font-family: system-ui, -apple-system, sans-serif;\n    transition: none;\n  }\n  \n  #walletkit-widget-root.wk-dragging {\n    transition: none !important;\n  }\n  \n  #walletkit-widget-root :global(.wk-snapping) {\n    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n  }\n  \n  .wk-floating-assistant {\n    width: 60px;\n    height: 60px;\n    border-radius: 50%;\n    background: linear-gradient(135deg, #6366f1 0%, #8b5cf6 100%);\n    cursor: move;\n    box-shadow: 0 4px 24px rgba(99, 102, 241, 0.3);\n    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n    animation: float 3s ease-in-out infinite;\n    user-select: none;\n    -webkit-user-select: none;\n    border: none;\n    padding: 0;\n  }\n  \n  .wk-floating-assistant.wk-dragging {\n    animation: none !important;\n    cursor: grabbing;\n    transform: scale(1.1) !important;\n    box-shadow: 0 8px 32px rgba(99, 102, 241, 0.5);\n  }\n  \n  @keyframes float {\n    0%, 100% { transform: translateY(0px); }\n    50% { transform: translateY(-10px); }\n  }\n  \n  .wk-floating-assistant:hover:not(.wk-dragging) {\n    transform: scale(1.05);\n    box-shadow: 0 6px 32px rgba(99, 102, 241, 0.4);\n  }\n  \n  .wk-floating-assistant:active:not(.wk-dragging) {\n    transform: scale(0.98);\n  }\n  \n  .wk-assistant-icon {\n    color: white;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  \n  .wk-status-indicator {\n    position: absolute;\n    top: 4px;\n    right: 4px;\n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n    background: #ef4444;\n    border: 2px solid white;\n    animation: pulse 2s ease-in-out infinite;\n  }\n  \n  @keyframes pulse {\n    0%, 100% { opacity: 1; }\n    50% { opacity: 0.5; }\n  }\n</style>","/**\n * Svelte action for making elements draggable with edge snapping\n */\n\nexport interface DraggableOptions {\n  onDragStart?: () => void;\n  onDragEnd?: (position: { side: 'left' | 'right'; y: number }) => void;\n  onSnap?: (side: 'left' | 'right', y: number) => void;\n  disabled?: boolean;\n}\n\nexport function draggable(node: HTMLElement, options: DraggableOptions = {}) {\n  let dragStartX = 0;\n  let dragStartY = 0;\n  let startX = 0;\n  let startY = 0;\n  let hasMoved = false;\n  let isDragging = false;\n  \n  const parent = node.parentElement!;\n  \n  function handleMouseDown(e: MouseEvent) {\n    if (options.disabled) return;\n    \n    dragStartX = e.clientX;\n    dragStartY = e.clientY;\n    \n    const rect = parent.getBoundingClientRect();\n    startX = rect.left;\n    startY = rect.top;\n    \n    hasMoved = false;\n    \n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('mouseup', handleMouseUp);\n    \n    e.preventDefault();\n  }\n  \n  function handleMouseMove(e: MouseEvent) {\n    if (!hasMoved && (Math.abs(e.clientX - dragStartX) > 5 || Math.abs(e.clientY - dragStartY) > 5)) {\n      hasMoved = true;\n      isDragging = true;\n      node.classList.add('wk-dragging');\n      parent.classList.add('wk-dragging');\n      options.onDragStart?.();\n    }\n    \n    if (hasMoved) {\n      const deltaX = e.clientX - dragStartX;\n      const deltaY = e.clientY - dragStartY;\n      \n      const newX = startX + deltaX;\n      const newY = startY + deltaY;\n      \n      parent.style.left = newX + 'px';\n      parent.style.top = newY + 'px';\n      parent.style.right = 'auto';\n      parent.style.transform = 'none';\n    }\n  }\n  \n  function handleMouseUp(e: MouseEvent) {\n    document.removeEventListener('mousemove', handleMouseMove);\n    document.removeEventListener('mouseup', handleMouseUp);\n    \n    if (hasMoved) {\n      snapToEdge();\n      \n      setTimeout(() => {\n        isDragging = false;\n        node.classList.remove('wk-dragging');\n        parent.classList.remove('wk-dragging');\n      }, 50);\n    }\n  }\n  \n  function handleTouchStart(e: TouchEvent) {\n    if (options.disabled) return;\n    \n    const touch = e.touches[0];\n    dragStartX = touch.clientX;\n    dragStartY = touch.clientY;\n    \n    const rect = parent.getBoundingClientRect();\n    startX = rect.left;\n    startY = rect.top;\n    \n    hasMoved = false;\n  }\n  \n  function handleTouchMove(e: TouchEvent) {\n    const touch = e.touches[0];\n    \n    if (!hasMoved && (Math.abs(touch.clientX - dragStartX) > 5 || Math.abs(touch.clientY - dragStartY) > 5)) {\n      hasMoved = true;\n      isDragging = true;\n      node.classList.add('wk-dragging');\n      parent.classList.add('wk-dragging');\n      options.onDragStart?.();\n      e.preventDefault();\n    }\n    \n    if (hasMoved) {\n      const deltaX = touch.clientX - dragStartX;\n      const deltaY = touch.clientY - dragStartY;\n      \n      const newX = startX + deltaX;\n      const newY = startY + deltaY;\n      \n      parent.style.left = newX + 'px';\n      parent.style.top = newY + 'px';\n      parent.style.right = 'auto';\n      parent.style.transform = 'none';\n    }\n  }\n  \n  function handleTouchEnd(e: TouchEvent) {\n    if (hasMoved) {\n      snapToEdge();\n      \n      setTimeout(() => {\n        isDragging = false;\n        node.classList.remove('wk-dragging');\n        parent.classList.remove('wk-dragging');\n      }, 50);\n    }\n  }\n  \n  function snapToEdge() {\n    const rect = parent.getBoundingClientRect();\n    const windowWidth = window.innerWidth;\n    const windowHeight = window.innerHeight;\n    \n    const centerX = rect.left + rect.width / 2;\n    const centerY = rect.top + rect.height / 2;\n    \n    const distanceToLeft = centerX;\n    const distanceToRight = windowWidth - centerX;\n    \n    parent.classList.add('wk-snapping');\n    \n    let finalY = centerY;\n    const minY = rect.height / 2 + 20;\n    const maxY = windowHeight - rect.height / 2 - 20;\n    finalY = Math.max(minY, Math.min(maxY, finalY));\n    \n    let side: 'left' | 'right';\n    \n    if (distanceToLeft < distanceToRight) {\n      side = 'left';\n      parent.style.left = '20px';\n      parent.style.right = 'auto';\n    } else {\n      side = 'right';\n      parent.style.right = '20px';\n      parent.style.left = 'auto';\n    }\n    \n    parent.style.top = finalY + 'px';\n    parent.style.transform = 'translateY(-50%)';\n    \n    options.onSnap?.(side, finalY);\n    options.onDragEnd?.({ side, y: finalY });\n    \n    setTimeout(() => {\n      parent.classList.remove('wk-snapping');\n    }, 300);\n  }\n  \n  // Add event listeners\n  node.addEventListener('mousedown', handleMouseDown);\n  node.addEventListener('touchstart', handleTouchStart, { passive: false });\n  node.addEventListener('touchmove', handleTouchMove, { passive: false });\n  node.addEventListener('touchend', handleTouchEnd);\n  \n  // Return destroy function for cleanup\n  return {\n    update(newOptions: DraggableOptions) {\n      options = newOptions;\n    },\n    destroy() {\n      node.removeEventListener('mousedown', handleMouseDown);\n      node.removeEventListener('touchstart', handleTouchStart);\n      node.removeEventListener('touchmove', handleTouchMove);\n      node.removeEventListener('touchend', handleTouchEnd);\n    }\n  };\n}","/**\n * Standalone entry point for WalletKit Widget\n * This file creates a self-contained widget that can be embedded with a script tag\n */\n\nimport { mount } from 'svelte';\nimport FloatingAssistant from '$lib/components/FloatingAssistant.svelte';\nimport { walletStore } from '$lib/stores/wallet.svelte';\n\n// Declare global interface\ndeclare global {\n  interface Window {\n    WalletKitWidget: any;\n  }\n}\n\n(function() {\n  'use strict';\n  \n  // Prevent multiple initializations\n  if (window.WalletKitWidget) {\n    console.warn('WalletKit Widget is already initialized');\n    return;\n  }\n  \n  // Parse configuration from script tag\n  const scriptTag = document.currentScript as HTMLScriptElement;\n  const config = {\n    position: scriptTag?.getAttribute('data-position') || 'bottom-right',\n    theme: scriptTag?.getAttribute('data-theme') || 'light',\n    subscriptionContract: scriptTag?.getAttribute('data-subscription-contract'),\n    chainId: parseInt(scriptTag?.getAttribute('data-chain-id') || '1'),\n  };\n  \n  // Create container for the widget\n  const container = document.createElement('div');\n  container.id = 'walletkit-widget-container';\n  document.body.appendChild(container);\n  \n  // Mount the Svelte component\n  const widget = mount(FloatingAssistant, {\n    target: container,\n    props: {}\n  });\n  \n  // Event handlers registry\n  const eventHandlers: Record<string, Function[]> = {};\n  \n  // Create public API\n  window.WalletKitWidget = {\n    // State queries\n    isConnected: () => walletStore.isConnected,\n    \n    getAccount: () => {\n      if (!walletStore.isConnected) return null;\n      return {\n        address: walletStore.address,\n        chainId: walletStore.chainId,\n        balance: walletStore.balance\n      };\n    },\n    \n    checkSubscription: (callback?: (status: any) => void) => {\n      const status = walletStore.subscription;\n      if (callback) {\n        callback(status);\n      }\n      return status;\n    },\n    \n    // Actions\n    connect: async () => {\n      await walletStore.connect();\n    },\n    \n    disconnect: () => {\n      walletStore.disconnect();\n    },\n    \n    promptConnect: () => {\n      if (!walletStore.isConnected) {\n        widget.open();\n      }\n    },\n    \n    requireSubscription: (callback?: (hasAccess: boolean) => void) => {\n      const hasAccess = walletStore.subscription.isActive;\n      if (!hasAccess) {\n        widget.open();\n      }\n      if (callback) {\n        callback(hasAccess);\n      }\n      return hasAccess;\n    },\n    \n    // Widget control\n    open: () => widget.open(),\n    close: () => widget.close(),\n    toggle: () => widget.toggle(),\n    \n    show: () => {\n      const container = document.getElementById('walletkit-widget-container');\n      if (container) {\n        container.style.display = 'block';\n      }\n    },\n    \n    hide: () => {\n      const container = document.getElementById('walletkit-widget-container');\n      if (container) {\n        container.style.display = 'none';\n      }\n    },\n    \n    // Event handling\n    on: (eventName: string, handler: Function) => {\n      if (!eventHandlers[eventName]) {\n        eventHandlers[eventName] = [];\n      }\n      eventHandlers[eventName].push(handler);\n      \n      // Listen to custom events\n      const eventListener = (e: Event) => {\n        const customEvent = e as CustomEvent;\n        handler(customEvent.detail);\n      };\n      \n      window.addEventListener(`walletkit:${eventName}`, eventListener);\n      \n      // Return unsubscribe function\n      return () => {\n        const index = eventHandlers[eventName].indexOf(handler);\n        if (index > -1) {\n          eventHandlers[eventName].splice(index, 1);\n        }\n        window.removeEventListener(`walletkit:${eventName}`, eventListener);\n      };\n    },\n    \n    // Cleanup\n    destroy: () => {\n      widget.$destroy();\n      const container = document.getElementById('walletkit-widget-container');\n      if (container) {\n        container.remove();\n      }\n      delete window.WalletKitWidget;\n    }\n  };\n  \n  // Dispatch ready event\n  window.dispatchEvent(new CustomEvent('walletkit:ready'));\n  \n  // Log initialization\n  console.log('WalletKit Widget initialized', config);\n})();"],"names":["_previous","_callbacks","_pending","_deferred","_neutered","_async_effects","_boundary_async_effects","_render_effects","_effects","_block_effects","_dirty_effects","_maybe_dirty_effects","_Batch_instances","traverse_effect_tree_fn","defer_effects_fn","commit_fn","_a","_address","_chainId","_isConnecting","_balance","_subscription","__privateAdd","obj","member","value","has","__typeError","WeakSet","add","set","__privateSet","setter","__accessCheck","call","__privateMethod","method","DEV","is_array","Array","isArray","index_of","prototype","indexOf","array_from","from","define_property","Object","defineProperty","get_descriptor","getOwnPropertyDescriptor","get_descriptors","getOwnPropertyDescriptors","object_prototype","array_prototype","get_prototype_of","getPrototypeOf","is_extensible","isExtensible","BRANCH_EFFECT","ROOT_EFFECT","UNOWNED","DISCONNECTED","CLEAN","DIRTY","MAYBE_DIRTY","INERT","DESTROYED","EFFECT_RAN","EFFECT_TRANSPARENT","INSPECT_EFFECT","EFFECT_PRESERVED","USER_EFFECT","REACTION_IS_UPDATING","ASYNC","ERROR_VALUE","STATE_SYMBOL","Symbol","STALE_REACTION","Error","constructor","super","arguments","__publicField","this","UNINITIALIZED","equals","v","component_context","set_component_context","context","push","props","runes","fn","p","c","e","s","x","l","pop","component","effects","create_user_effect","adjustments","WeakMap","invoke_error_boundary","error","effect","f","b","parent","apply_adjustments","adjusted","get","message","stack","get_pending_boundary","boundary","active_effect","has_pending_snippet","e.await_outside_boundary","derived","flags","DERIVED","parent_derived","active_reaction","ctx","deps","reactions","rv","wv","ac","async_derived","location","e.async_derived_orphan","promise","signal","source","prev","should_suspend","create_effect","async_effect","Promise","reject","r","then","resolve","batch","pending","update_pending_count","increment","handler","activate","internal_set","decrement","unset_context","queueMicrotask","neuter","fulfil","next","go","destroy_derived_effects","i","length","destroy_effect","execute_derived","prev_active_effect","set_active_effect","get_derived_parent_effect","update_reaction","update_derived","increment_write_version","is_destroying_effect","batch_deriveds","set_signal_status","skip_reaction","flatten","sync","async","d","previous_effect","previous_reaction","previous_component_context","current_batch","restore","set_active_reaction","all","map","expression","result","deactivate","catch","batches","Set","effect_pending_updates","tasks","dequeue","task","shift","queued_root_effects","last_scheduled_effect","is_flushing","root","first","is_branch","skipped_effects","__privateGet","is_dirty","update_effect","child","clear","Batch","_Batch","Map","process","root_effects","current_values","size","current","previous","render_effects","flush_queued_effects","delete","capture","update","flush","was_updating_effect","is_updating_effect","flush_count","set_is_updating_effect","ensure","infinite_loop_guard","old_values","flush_effects","schedule_effect","add_callback","settled","res","rej","enqueue","unshift","e.effect_update_depth_exceeded","n","nodes_start","teardown","unlink_effect","state","current_sources","should_proxy","untracking","includes","e.state_unsafe_mutation","proxy","old_value","mark_reactions","untracked_writes","set_untracked_writes","status","reaction","not_dirty","sources","is_proxied_array","version","parent_version","update_version","with_parent","set_update_version","Proxy","_","prop","descriptor","configurable","enumerable","writable","e.state_descriptors_fixed","deleteProperty","target","receiver","exists","Reflect","other_s","ls","Number","isInteger","ownKeys","own_keys","filter","key","setPrototypeOf","e.state_prototype_fixed","$window","is_firefox","first_child_getter","next_sibling_getter","create_text","document","createTextNode","get_first_child","node","get_next_sibling","is_text","sibling","count","next_sibling","validate_effect","rune","e.effect_orphan","e.effect_in_unowned_derived","e.effect_in_teardown","type","nodes_end","last","transitions","parent_effect","parent_last","push_effect","EFFECT","template_effect","values","branch","execute_effect_teardown","previously_destroying_effect","set_is_destroying_effect","destroy_effect_children","remove_dom","abort","removed","end","remove","remove_effect_dom","remove_reactions","transition","stop","pause_effect","callback","pause_children","remaining","check","out","run_out_transitions","local","is_global","resume_effect","resume_children","in","new_deps","skipped_deps","write_version","read_version","dependencies","is_unowned","dependency","is_disconnected","is_unowned_connected","schedule_possible_effect_self_invalidation","previous_deps","previous_skipped_deps","previous_untracked_writes","previous_skip_reaction","previous_sources","previous_untracking","previous_update_version","handle_error","remove_reaction","index","new_length","start_index","destroy_block_effect_children","is_derived","depends_on_old_values","dep","STATUS_MASK","deep_read","visited","EventTarget","Date","getTime","proto","descriptors","PASSIVE_EVENTS","is_passive_event","name","all_registered_events","root_event_handles","delegate","events","last_propagated_event","handle_event_propagation","event","handler_element","owner_document","event_name","path","composedPath","current_target","path_idx","handled_at","__root","at_idx","window","handler_idx","throw_error","other_errors","parent_element","assignedSlot","parentNode","host","delegated","disabled","data","apply","cancelBubble","currentTarget","assign_nodes","start","from_html","content","is_fragment","use_import_node","has_start","startsWith","html","elem","createElement","innerHTML","replaceAll","clone","importNode","cloneNode","append","anchor","dom","before","set_text","text","str","__t","nodeValue","mount","options","Component","intro","test","navigator","userAgent","element_prototype","Element","node_prototype","Node","text_prototype","Text","__click","__className","__attributes","__style","__e","init_operations","registered_events","event_handle","passive","addEventListener","document_listeners","unmount","outro","component_root","anchor_node","appendChild","$$events","removeEventListener","removeChild","mounted_components","_mount","if_block","elseif","consequent_effect","alternate_effect","condition","has_branch","set_branch","flag","update_branch","offscreen_fragment","commit","lastChild","active","inactive","new_condition","defer","block","append_styles","css","getRootNode","head","ownerDocument","querySelector","hash","style","id","textContent","code","action","get_value","payload","untrack","inited","render_effect","a","deep_read_state","destroy","whitespace","set_class","is_html","prev_classes","next_classes","next_class_name","directives","classname","len","substring","to_class","removeAttribute","className","is_present","classList","toggle","__svelte","walletStore","isActive","plan","expiresAt","address","chainId","isConnecting","balance","subscription","isConnected","displayAddress","connect","setTimeout","Math","random","toString","toFixed","emitEvent","disconnect","checkSubscription","purchaseSubscription","planId","now","eventName","dispatchEvent","CustomEvent","detail","handleConnect","handleDisconnect","on_click","showPlans","$.set","on_click_1","__1","on_click_2","__2","handleSubscribe","on_click_3","__3","alert","button_1","$.set_text","fragment","Comment","text_1","text_2","$$render","alternate","consequent","formatExpiry","timestamp","toLocaleDateString","alternate_1","consequent_1","consequent_2","$$props","position","side","isOpen","$.state","$.proxy","y","innerHeight","isDragging","clickStartTime","hasDragged","handleDragStart","handleDragEnd","pos","$.user_effect","indicator","background","dragStartX","dragStartY","startX","startY","hasMoved","parentElement","handleMouseDown","clientX","clientY","rect","getBoundingClientRect","left","top","handleMouseMove","handleMouseUp","preventDefault","abs","onDragStart","deltaX","deltaY","newX","newY","right","transform","snapToEdge","handleTouchStart","touch","touches","handleTouchMove","handleTouchEnd","windowWidth","innerWidth","windowHeight","centerX","width","centerY","height","distanceToLeft","distanceToRight","finalY","minY","maxY","max","min","onSnap","onDragEnd","newOptions","$.get","onclose","WalletKitWidget","console","warn","scriptTag","currentScript","config","getAttribute","theme","subscriptionContract","parseInt","container","body","widget","FloatingAssistant","eventHandlers","getAccount","promptConnect","open","requireSubscription","hasAccess","close","show","getElementById","display","hide","on","eventListener","splice","$destroy","log"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30]}